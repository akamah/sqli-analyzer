{"version":3,"sources":["webpack:///webpack/bootstrap e6c7ab6bdc842528b79b","webpack:///./node_modules/php-parser/src/ast/statement.js","webpack:///./node_modules/php-parser/src/ast/node.js","webpack:///./node_modules/php-parser/src/ast/expression.js","webpack:///./node_modules/php-parser/src/ast/literal.js","webpack:///./node_modules/php-parser/src/ast/declaration.js","webpack:///./node_modules/php-parser/src/ast/operation.js","webpack:///./node_modules/php-parser/src/ast/sys.js","webpack:///./node_modules/php-parser/src/ast/block.js","webpack:///./node_modules/php-parser/src/ast/lookup.js","webpack:///(webpack)/node_modules/process/browser.js","webpack:///./node_modules/php-parser/src/ast/constant.js","webpack:///./node_modules/php-parser/src/ast/function.js","webpack:///./node_modules/php-parser/src/ast/identifier.js","webpack:///./index.js","webpack:///(webpack)/node_modules/path-browserify/index.js","webpack:///./node_modules/php-parser/src/index.js","webpack:///(webpack)/node_modules/buffer/index.js","webpack:///(webpack)/buildin/global.js","webpack:///(webpack)/node_modules/base64-js/index.js","webpack:///(webpack)/node_modules/ieee754/index.js","webpack:///(webpack)/node_modules/isarray/index.js","webpack:///./node_modules/php-parser/src/lexer.js","webpack:///./node_modules/php-parser/src/lexer/comments.js","webpack:///./node_modules/php-parser/src/lexer/initial.js","webpack:///./node_modules/php-parser/src/lexer/numbers.js","webpack:///./node_modules/php-parser/src/lexer/property.js","webpack:///./node_modules/php-parser/src/lexer/scripting.js","webpack:///./node_modules/php-parser/src/lexer/strings.js","webpack:///./node_modules/php-parser/src/lexer/tokens.js","webpack:///./node_modules/php-parser/src/lexer/utils.js","webpack:///./node_modules/php-parser/src/parser.js","webpack:///./node_modules/php-parser/src/parser/array.js","webpack:///./node_modules/php-parser/src/parser/class.js","webpack:///./node_modules/php-parser/src/parser/comment.js","webpack:///./node_modules/php-parser/src/parser/expr.js","webpack:///./node_modules/php-parser/src/parser/function.js","webpack:///./node_modules/php-parser/src/parser/if.js","webpack:///./node_modules/php-parser/src/parser/loops.js","webpack:///./node_modules/php-parser/src/parser/main.js","webpack:///./node_modules/php-parser/src/parser/namespace.js","webpack:///./node_modules/php-parser/src/parser/scalar.js","webpack:///./node_modules/php-parser/src/parser/statement.js","webpack:///./node_modules/php-parser/src/parser/switch.js","webpack:///./node_modules/php-parser/src/parser/try.js","webpack:///./node_modules/php-parser/src/parser/utils.js","webpack:///./node_modules/php-parser/src/parser/variable.js","webpack:///./node_modules/php-parser/src/tokens.js","webpack:///./node_modules/php-parser/src/ast.js","webpack:///./node_modules/php-parser/src/ast/location.js","webpack:///./node_modules/php-parser/src/ast/position.js","webpack:///./node_modules/php-parser/src/ast/array.js","webpack:///./node_modules/php-parser/src/ast/assign.js","webpack:///./node_modules/php-parser/src/ast/bin.js","webpack:///./node_modules/php-parser/src/ast/boolean.js","webpack:///./node_modules/php-parser/src/ast/break.js","webpack:///./node_modules/php-parser/src/ast/call.js","webpack:///./node_modules/php-parser/src/ast/case.js","webpack:///./node_modules/php-parser/src/ast/cast.js","webpack:///./node_modules/php-parser/src/ast/catch.js","webpack:///./node_modules/php-parser/src/ast/class.js","webpack:///./node_modules/php-parser/src/ast/classconstant.js","webpack:///./node_modules/php-parser/src/ast/clone.js","webpack:///./node_modules/php-parser/src/ast/closure.js","webpack:///./node_modules/php-parser/src/ast/constref.js","webpack:///./node_modules/php-parser/src/ast/continue.js","webpack:///./node_modules/php-parser/src/ast/declare.js","webpack:///./node_modules/php-parser/src/ast/do.js","webpack:///./node_modules/php-parser/src/ast/doc.js","webpack:///./node_modules/php-parser/src/ast/echo.js","webpack:///./node_modules/php-parser/src/ast/empty.js","webpack:///./node_modules/php-parser/src/ast/encapsed.js","webpack:///./node_modules/php-parser/src/ast/entry.js","webpack:///./node_modules/php-parser/src/ast/error.js","webpack:///./node_modules/php-parser/src/ast/eval.js","webpack:///./node_modules/php-parser/src/ast/exit.js","webpack:///./node_modules/php-parser/src/ast/for.js","webpack:///./node_modules/php-parser/src/ast/foreach.js","webpack:///./node_modules/php-parser/src/ast/global.js","webpack:///./node_modules/php-parser/src/ast/goto.js","webpack:///./node_modules/php-parser/src/ast/halt.js","webpack:///./node_modules/php-parser/src/ast/if.js","webpack:///./node_modules/php-parser/src/ast/include.js","webpack:///./node_modules/php-parser/src/ast/inline.js","webpack:///./node_modules/php-parser/src/ast/interface.js","webpack:///./node_modules/php-parser/src/ast/isset.js","webpack:///./node_modules/php-parser/src/ast/label.js","webpack:///./node_modules/php-parser/src/ast/list.js","webpack:///./node_modules/php-parser/src/ast/magic.js","webpack:///./node_modules/php-parser/src/ast/method.js","webpack:///./node_modules/php-parser/src/ast/namespace.js","webpack:///./node_modules/php-parser/src/ast/new.js","webpack:///./node_modules/php-parser/src/ast/nowdoc.js","webpack:///./node_modules/php-parser/src/ast/number.js","webpack:///./node_modules/php-parser/src/ast/offsetlookup.js","webpack:///./node_modules/php-parser/src/ast/parameter.js","webpack:///./node_modules/php-parser/src/ast/parenthesis.js","webpack:///./node_modules/php-parser/src/ast/post.js","webpack:///./node_modules/php-parser/src/ast/pre.js","webpack:///./node_modules/php-parser/src/ast/print.js","webpack:///./node_modules/php-parser/src/ast/program.js","webpack:///./node_modules/php-parser/src/ast/property.js","webpack:///./node_modules/php-parser/src/ast/propertylookup.js","webpack:///./node_modules/php-parser/src/ast/retif.js","webpack:///./node_modules/php-parser/src/ast/return.js","webpack:///./node_modules/php-parser/src/ast/silent.js","webpack:///./node_modules/php-parser/src/ast/static.js","webpack:///./node_modules/php-parser/src/ast/staticlookup.js","webpack:///./node_modules/php-parser/src/ast/string.js","webpack:///./node_modules/php-parser/src/ast/switch.js","webpack:///./node_modules/php-parser/src/ast/throw.js","webpack:///./node_modules/php-parser/src/ast/trait.js","webpack:///./node_modules/php-parser/src/ast/traitalias.js","webpack:///./node_modules/php-parser/src/ast/traitprecedence.js","webpack:///./node_modules/php-parser/src/ast/traituse.js","webpack:///./node_modules/php-parser/src/ast/try.js","webpack:///./node_modules/php-parser/src/ast/unary.js","webpack:///./node_modules/php-parser/src/ast/unset.js","webpack:///./node_modules/php-parser/src/ast/usegroup.js","webpack:///./node_modules/php-parser/src/ast/useitem.js","webpack:///./node_modules/php-parser/src/ast/variable.js","webpack:///./node_modules/php-parser/src/ast/variadic.js","webpack:///./node_modules/php-parser/src/ast/while.js","webpack:///./node_modules/php-parser/src/ast/yield.js","webpack:///./node_modules/php-parser/src/ast/yieldfrom.js"],"names":[],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;AAEA;AACA;;;;;;;AC7DA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,cAAc;AAC5B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,SAAS;AACpB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;AC/BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gCAAgC;AAC9C;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,WAAW,UAAU;AACrB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACtBA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;;;;AAIA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,uBAAuB,sBAAsB;AAC7C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,qCAAqC;;AAErC;AACA;AACA;;AAEA,2BAA2B;AAC3B;AACA;AACA;AACA,4BAA4B,UAAU;;;;;;;ACvLtC;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,YAAY;AAC1B,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;;AAGA;;;;;;;ACtDA;AACA;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,sC;AACA;AACA,GAAG;AACH;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;;;AAGA;AACA,4B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,6CAA6C,MAAM;AACnD;AACA;AACA,KAAK;AACL,GAAG;AACH;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA,qCAAqC,IAAI;AACzC;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH,+BAA+B,MAAM;AACrC;;AAEA,4B;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,uD;AACA;AACA,wD;AACA,W;AACA;AACA;AACA,wD;AACA;AACA;AACA;AACA,0E;AACA;AACA;AACA;AACA,2E;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,W;AACA;AACA;AACA,kE;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL,kCAAkC;AAClC;;AAEA;AACA,KAAK;AACL;AACA;AACA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH,yCAAyC,WAAW,OAAO,aAAa,GAAG,eAAe;AAC1F;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA,CAAC;;;;;;;;ACzRD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,QAAQ;AACxC;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,MAAM;AAChB;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,6BAA6B,IAAI;AACjC;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,oCAAoC,8BAA8B;AAClE;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;;;AAGA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,UAAU,oBAAoB;AAC9B;AACA;;AAEA;AACA,UAAU,UAAU;AACpB;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA,+BAA+B,sBAAsB;AACrD;AACA;;AAEA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;;AAEA;AACA;AACA;AACA,mBAAmB,eAAe;AAClC;AACA;AACA;AACA;;AAEA;AACA;AACA,kCAAkC;AAClC;AACA;AACA;AACA;AACA;;;;;;;;AC/NA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,MAAM;AACN;AACA;AACA,MAAM;AACN;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB,WAAW,OAAO;AAClB;AACA,cAAc,MAAM;AACpB,cAAc,OAAO;AACrB,cAAc,IAAI;AAClB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY,cAAc;AAC1B,YAAY,OAAO;AACnB;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,IAAI;AACJ;AACA;AACA,WAAW,OAAO;AAClB,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW,OAAO;AAClB,YAAY,SAAS;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;ACtMA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,mDAAmD;AACxE;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,mBAAmB,UAAU;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA,uCAAuC,SAAS;AAChD;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;AACA,aAAa,iBAAiB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gDAAgD,EAAE;AAClD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA,iBAAiB,SAAS;AAC1B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC;AACzC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA,wBAAwB,eAAe;AACvC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA,wBAAwB,QAAQ;AAChC;AACA,qBAAqB,eAAe;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;;AAEA;AACA,SAAS;AACT;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,kBAAkB;AACnC;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA,mBAAmB,cAAc;AACjuDAAuD,OAAO;AAC9D;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA,uDAAuD,OAAO;AAC9D;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,kBAAkB;AAClB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,qBAAqB,QAAQ;AAC7B;AACA;AACA,GAAG;AACH;AACA,eAAe,SAAS;AACxB;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA,mBAAmB,SAAS;AAC5B;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,eAAe,iBAAiB;AAChC;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA,iBAAiB,YAAY;AAC7B;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,iBAAiB,gBAAgB;AACjC;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,iBAAiB,gBAAgB;AACjC;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,iBAAiB,YAAY;AAC7B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;AC5vDA;;AAEA;AACA;AACA;AACA,CAAC;;AAED;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA,4CAA4C;;AAE5C;;;;;;;;ACpBA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA,kCAAkC,SAAS;AAC3C;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;AAEA;;AAEA,aAAa,OAAO;AACpB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,qBAAqB,SAAS;AAC9B;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0CAA0C,UAAU;AACpD;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;;;;;;;ACjHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA;AACA,QAAQ,WAAW;;AAEnB;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;AAEA,QAAQ,WAAW;;AAEnB;AACA;AACA,QAAQ,UAAU;;AAElB;AACA;;;;;;;ACnFA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,OAAO;AACroBAAoB,wBAAwB;AAC5C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,gBAAgB,UAAU;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC1bA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,OAAO;AACP,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACtDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;ACzDA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA,CAAC;AACD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,WAAW;AACX;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5HA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA,KAAK,iCAAiC,cAAc;AACpD;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB,wCAAwC;AACxC;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+DAA+D;AAC/D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA,OAAO,kBAAkB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO,mBAAmB;AAC1B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,MAAM;AACN;AACA;AACA;AACA,GAAG;AACH;AACA;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,mBAAmB;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO,mBAAmB;AAC1B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,GAAG;;AAEH;;AAEA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK,mBAAmB;AACxB;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,OAAO,mBAAmB;AAC1B;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA,WAAW;AACX,oCAAoC;AACpC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7ZA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC5QA;AACA;AACA;AACA;AACA;AACA,gBAAgB;;AAEhB;;AAEA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;;AAGH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;;AAEH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;;;;;;;AChFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA,iBAAiB;AACjB,cAAc,MAAM;AACpB,cAAc,IAAI;AAClB,cAAc,eAAe;AAC7B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtuBAAuB;AACvB;AACA;AACA,0DAA0D;AAC1D;AACA;AACA,GAAG;AACH;AACA,GAAG;AACH,iBAAiB;AACjB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB,uBAAuB;AAC7C;AACA;AACA,kBAAkB,wBAAwB;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW,cAAc;AACzB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,YAAY;AACZ;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACjdA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACxFA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,gIAAgI,eAAe;AAC/I;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,gCAAgC;AAChC;;AAEA;;AAEA;AACA;AACA,sBAAsB;AACtB;AACA;;AAEA,OAAO;;AAEP;AACA;;AAEA,OAAO;;AAEP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4CAA4C;AAC5C;AACA,6BAA6B;AAC7B;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT,8BAA8B;AAC9B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB,SAAS;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8CAA8C,SAAS;AACvD,8CAA8C,SAAS;AACvD,8CAA8C,SAAS;AACvD,8CAA8C,SAAS;AACvD,8CAA8C,SAAS;AACvD,8CAA8C,SAAS;AACvD;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4FAA4F,mBAAmB;AAC/G;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,sDAAsD;;AAEtD;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,0BAA0B;AAC1B;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oFAAoF,cAAc;AAClG;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qEAAqE,oBAAoB;AACzF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA,6BAA6B;AAC7B;AACA,sBAAsB;AACtB;AACA,wBAAwB;AACxB;AACA;AACA,KAAK;AACL,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;;;;;;ACncA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kBAAkB,iBAAiB;AACnC;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC5CA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA,oBAAoB,uBAAuB;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;;;AAGA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA,WAAW;AACX;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7iBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,KAAK;AACL,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AChPA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,2BAA2B,EAAE,cAAc;AAC3C;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;ACnGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0EAA0E;AAC1E;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,kDAAkD;AAClD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC,cAAc;AACjD,uEAAuE;AACvE;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA,yBAAyB;AACzB;AACA,wBAAwB;AACxB,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA,OAAO;AACP;AACA;AACA;AACA;;;;;;;AC7JA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;;;;;;;;ACnBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,iDAAiD;AACjD;AACA,OAAO;AACP,oCAAoC;AACpC;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA,oBAAoB;AACpB;AACA,KAAK;AACL;AACA,0BAA0B;AAC1B;AACA;AACA;AACA;AACA,OAAO,0BAA0B;AACjC;AACA;AACA,sBAAsB;AACtB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,sBAAsB,KAAK;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gCAAgC,qBAAqB;AACrD,uBAAuB,8BAA8B;AACrD,OAAO;AACP;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK,2BAA2B;AAChC;AACA;AACA,oBAAoB;AACpB;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3KA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0CAA0C;AAC1C,sDAAsD;AACtD,mEAAmE;AACnE,gCAAgC;AAChC;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA,OAAO;AACP;AACA;AACA,oBAAoB;AACpB;AACA;;AAEA;AACA;AACA;AACA;AACA,oBAAoB;AACpB;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC3QA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sDAAsD;AACtD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qDAAqD;AACrD;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,2EAA2E;AAC3E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,qBAAqB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA,aAAa;;AAEb;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,oBAAoB;AACpB,6BAA6B;AAC7B;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,sBAAsB;AACtB;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS,2BAA2B;AACpC;AACA,2DAA2D;AAC3D;AACA;AACA;AACA,wBAAwB;AACxB;AACA,SAAS;AACT,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA,aAAa;AACb;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,wCAAwC;AAC/D;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;AACA;AACA,kBAAkB;AAClB;AACA;AACA;;;;;;;;AC9WA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B,IAAI,gBAAgB,UAAU,4BAA4B;AACvF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,yBAAyB;AACzB,iBAAiB;AACjB,KAAK;AACL;AACA,KAAK;AACL,qBAAqB;AACrB;AACA,mBAAmB;AACnB;AACA,gCAAgC;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0DAA0D;AAC1D;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,KAAK;AACL;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;AC7FA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,sBAAsB,qBAAqB;AAC3C;AACA,4DAA4D,sBAAsB;AAClF;AACA,2BAA2B,qBAAqB;AAChD;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;AC3CA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa,OAAO;AACpB,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,KAAK;AACL;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA;AACA;AACA,cAAc;AACd;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uCAAuC;AACvC;AACA,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;;AAEA;;;;;;;;ACvHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,SAAS;AACT;AACA;AACA;AACA,OAAO;AACP;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,2BAA2B;AAC1C;AACA,8BAA8B;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,mCAAmC;AACnC,2BAA2B;AAC3B;AACA,8BAA8B;AAC9B,eAAe;AACf;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA,4BAA4B;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oEAAoE,SAAS;AAC7E;AACA;AACA,gBAAgB;AAChB,WAAW,GAAG;AACd,QAAQ,MAAM,MAAM;AACpB,gBAAgB,GAAG;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,OAAO,0BAA0B;AACjC;AACA,sBAAsB;AACtB;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,SAAS;AACtD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,eAAe;AACf;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;ACntcAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,WAAW;AACX,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,WAAW,YAAY;AACvB;AACA,WAAW,OAAO;AAClB,YAAY;AACZ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvXA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,SAAS;AACvB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;;AAEA;;;;;;;ACnBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA,cAAc,yDAAyD;AACvE,gBAAgB;AAChB,KAAK;AACL;AACA;AACA,gBAAgB;AAChB,KAAK;AACL;AACA,aAAa;AACb,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC5CA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,uBAAuB;AACrC,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,aAAa;AAC3B,cAAc,SAAS;AACvB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC1BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,aAAa;AAC3B,cAAc,cAAc;AAC5B,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC9BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,YAAY;AAC1B,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,WAAW;AACzB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AChCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,aAAa;AAC3B,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;;;;;;;;AC/DA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,QAAQ;AACtB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;;AAGA;;;;;;;AClEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,UAAU;AACxB,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACtBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,OAAO;AACrB,cAAc,cAAc;AAC5B,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,KAAK;AACnB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,aAAa;AAC3B,cAAc,aAAa;AAC3B,cAAc,aAAa;AAC3B,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,gBAAgB;AAC9B,cAAc,WAAW;AACzB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC9BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB,cAAc,cAAc;AAC5B,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AC3BA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,KAAK;AACnB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb,cAAc,aAAa;AAC3B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,0BAA0B;AACxC,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;;AAErB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACrBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC5BA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACvBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,SAAS;AACvB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACpBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,QAAQ;AACtB,cAAc,QAAQ;AACtB,cAAc,OAAO;AACrB,cAAc,UAAU;AACxB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,oBAAoB;AAClC;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACpBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;AClBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,QAAQ;AACtB,SAAS;AACT;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,MAAM;AACpB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACrBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;AAGA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,aAAa;AAC3B,cAAc,cAAc;AAC5B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACzBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,YAAY;AAC1B,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA,KAAK;AACL;AACA;AACA,GAAG;AACH;AACA;AACA,CAAC;;AAED;;;;;;;ACxCA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,OAAO;AACrB,cAAc,aAAa;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACxBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,aAAa;AAC3B,cAAc,YAAY;AAC1B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACtBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,MAAM;AACpB,cAAc,QAAQ;AACtB,cAAc,MAAM;AACpB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;ACvBA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,YAAY;AAC1B,cAAc,YAAY;AAC1B,cAAc,UAAU;AACxB,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;AC1BA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,OAAO;AACrB,cAAc,YAAY;AAC1B,cAAc,YAAY;AAC1B,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;;AAGD;AACA;AACA,cAAc,OAAO;AACrB;AACA;AACA;AACA;AACA,cAAc,OAAO;AACrB;AACA;;;AAGA;;;;;;;;ACvCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,YAAY;AAC1B,cAAc,QAAQ;AACtB,cAAc,QAAQ,8DAA8D,IAAI;AACxF;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,iBAAiB;AAC/B;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACrBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB,cAAc,UAAU;AACxB,cAAc,QAAQ;AACtB;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACzBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,gBAAgB;AAC9B,cAAc,gBAAgB;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED;;;;;;;;ACxBA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,aAAa;AACb,cAAc,WAAW;AACzB;AACA;AACA;AACA;AACA;AACA,CAAC;;AAED","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 13);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap e6c7ab6bdc842528b79b","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'statement';\n\n/**\n * Any statement.\n * @constructor Statement\n * @extends {Node}\n */\nvar Statement = Node.extends(function Statement(kind, location) {\n  Node.apply(this, [kind || KIND, location]);\n});\n\nmodule.exports = Statement;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/statement.js\n// module id = 0\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n/**\n * A generic AST node\n * @constructor Node\n * @property {Location|null} loc\n * @property {String} kind\n */\nvar Node = function Node(kind, location) {\n  this.kind = kind;\n  if(location) {\n    this.loc = location;\n  }\n};\n\n/**\n * Helper for extending the Node class\n * @param {Function} constructor\n * @return {Function}\n */\nNode.extends = function(constructor) {\n  constructor.prototype = Object.create(this.prototype);\n  constructor.extends = this.extends;\n  constructor.prototype.constructor = constructor;\n  return constructor;\n};\n\nmodule.exports = Node;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/node.js\n// module id = 1\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'expression';\n\n/**\n * Any expression node. Since the left-hand side of an assignment may\n * be any expression in general, an expression can also be a pattern.\n * @constructor Expression\n * @extends {Node}\n */\nvar Expression = Node.extends(function Expression(kind, location) {\n  Node.apply(this, [kind || KIND, location]);\n});\n\nmodule.exports = Expression;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/expression.js\n// module id = 2\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Expr = require('./expression');\nvar KIND = 'literal';\n\n/**\n * Defines an array structure\n * @constructor Literal\n * @extends {Expression}\n * @property {Node|string|number|boolean|null} value\n */\nvar Literal = Expr.extends(function Literal(kind, value, location) {\n  Expr.apply(this, [kind || KIND, location]);\n  this.value = value;\n});\n\nmodule.exports = Literal;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/literal.js\n// module id = 3\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'declaration';\n\nvar IS_PUBLIC     = 'public';\nvar IS_PROTECTED  = 'protected';\nvar IS_PRIVATE    = 'private';\n\n/**\n * A declaration statement (function, class, interface...)\n * @constructor Declaration\n * @extends {Statement}\n * @property {string} name\n */\nvar Declaration = Statement.extends(function Declaration(kind, name, location) {\n  Statement.apply(this, [kind || KIND, location]);\n  this.name = name;\n});\n\n/**\n * Generic flags parser\n * @param {Integer[]} flags\n * @return {void}\n */\nDeclaration.prototype.parseFlags = function(flags) {\n  this.isAbstract = flags[2] === 1;\n  this.isFinal = flags[2] === 2;\n  if (this.kind !== 'class') {\n    if (flags[0] === 0) {\n      this.visibility = IS_PUBLIC;\n    } else if (flags[0] === 1) {\n      this.visibility = IS_PROTECTED;\n    } else if (flags[0] === 2) {\n      this.visibility = IS_PRIVATE;\n    }\n    this.isStatic = flags[1] === 1;\n  }\n};\n\nmodule.exports = Declaration;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/declaration.js\n// module id = 4\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Expr = require('./expression');\nvar KIND = 'operation';\n\n/**\n * Defines binary operations\n * @constructor Operation\n * @extends {Expression}\n */\nvar Operation = Expr.extends(function Operation(kind, location) {\n  Expr.apply(this, [kind || KIND, location]);\n});\n\nmodule.exports = Operation;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/operation.js\n// module id = 5\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'sys';\n\n/**\n * Defines system based call\n * @constructor Sys\n * @extends {Statement}\n * @property {Node[]} arguments\n */\nvar Sys = Statement.extends(function Sys(kind, args, location) {\n  Statement.apply(this, [kind || KIND, location]);\n  this.arguments = args;\n});\n\nmodule.exports = Sys;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/sys.js\n// module id = 6\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'block';\n\n/**\n * A block statement, i.e., a sequence of statements surrounded by braces.\n * @constructor Block\n * @extends {Statement}\n * @property {Node[]} children\n */\nvar Block = Statement.extends(function Block(kind, children, location) {\n  Statement.apply(this, [kind || KIND, location]);\n  this.children = children.filter(Boolean);\n});\n\nmodule.exports = Block;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/block.js\n// module id = 7\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Expr = require('./expression');\nvar KIND = 'lookup';\n\n/**\n * Lookup on an offset in the specified object\n * @constructor Lookup\n * @extends {Expression}\n * @property {Expression} what\n * @property {Expression} offset\n */\nvar Lookup = Expr.extends(function Lookup(kind, what, offset, location) {\n  Expr.apply(this, [kind || KIND, location]);\n  this.what = what;\n  this.offset = offset;\n});\n\nmodule.exports = Lookup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/lookup.js\n// module id = 8\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/process/browser.js\n// module id = 9\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND = 'constant';\n\n/**\n * Defines a namespace constant\n * @constructor Constant\n * @extends {Declaration}\n * @property {Node|null} value\n */\nvar Constant = Declaration.extends(function Constant(name, value, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.value = value;\n});\n\nmodule.exports = Constant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/constant.js\n// module id = 10\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND          = 'function';\n\n/**\n * Defines a classic function\n * @constructor Function\n * @extends {Declaration}\n * @property {Parameter[]} arguments\n * @property {Identifier} type\n * @property {boolean} byref\n * @property {boolean} nullable\n * @property {Block|null} body\n */\nvar fn = Declaration.extends(function _Function(name, args, byref, type, nullable, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.arguments = args;\n  this.byref = byref;\n  this.type = type;\n  this.nullable = nullable;\n  this.body = null;\n});\nmodule.exports = fn;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/function.js\n// module id = 11\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'identifier';\n\n/**\n * Defines an identifier node\n * @constructor Identifier\n * @extends {Node}\n * @property {string} name\n * @property {string} resolution\n */\nvar Identifier = Node.extends(function Identifier(name, isRelative, location) {\n  Node.apply(this, [KIND, location]);\n  if (isRelative) {\n    this.resolution = Identifier.RELATIVE_NAME;\n  } else if (name.length === 1) {\n    this.resolution = Identifier.UNQUALIFIED_NAME;\n  } else if (name[0] === '') {\n    this.resolution = Identifier.FULL_QUALIFIED_NAME;\n  } else {\n    this.resolution = Identifier.QUALIFIED_NAME;\n  }\n  this.name = name.join('\\\\');\n});\n\n/**\n * This is an identifier without a namespace separator, such as Foo\n * @constant {String} UNQUALIFIED_NAME\n */\nIdentifier.UNQUALIFIED_NAME = 'uqn';\n/**\n * This is an identifier with a namespace separator, such as Foo\\Bar\n * @constant {String} QUALIFIED_NAME\n */\nIdentifier.QUALIFIED_NAME = 'qn';\n/**\n * This is an identifier with a namespace separator that begins with\n * a namespace separator, such as \\Foo\\Bar. The namespace \\Foo is also\n * a fully qualified name.\n * @constant {String} FULL_QUALIFIED_NAME\n */\nIdentifier.FULL_QUALIFIED_NAME = 'fqn';\n/**\n * This is an identifier starting with namespace, such as namespace\\Foo\\Bar.\n * @constant {String} RELATIVE_NAME\n */\nIdentifier.RELATIVE_NAME = 'rn';\n\n\nmodule.exports = Identifier;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/identifier.js\n// module id = 12\n// module chunks = 0","var path = require('path');\nvar engine = require('php-parser');\n\n\n//////////// traversing AST\nfunction inspect(ast) {\n  if (!ast) {\n    return;\n  }\n  \n  // \n  if (ast.hasOwnProperty('children')) {\n    inspect_body(ast.children);\n  }\n  if (ast.hasOwnProperty('body')) {\n    inspect_body(ast.body);\n  }\n  if (ast.hasOwnProperty('alternate')) {\n    inspect_body(ast.alternate);\n  }\n  if (ast.hasOwnProperty('right')) {\n    inspect(ast.right);\n  }\n  if (ast.hasOwnProperty('test')) {\n    inspect(ast.test);\n  }\n  if (ast.hasOwnProperty('what')) {\n    inspect(ast.what);\n  }\n\n  if (ast.kind === 'call') {\n    inspect_call(ast);\n  }\n}\n\n// body ::= block | null | array<decl> | stmt | array<node>\nfunction inspect_body(body) {\n  //  console.log(ast)\n  if (body == null || body == false) { \n    return;\n  } else if (Array.isArray(body)) {\n    body.forEach(function(element) {\n      inspect(element);\n    }, this);\n  } else {\n    inspect(body);\n  }\n}\n\n//////////// utility functions to inspect AST\nfunction is_global_function_call(what) {\n  return what.kind === 'identifier';\n}\n\nfunction is_propertylookup(what) {\n  return what.kind === 'propertylookup' && \n  what.offset.kind === 'constref';\n}\n\nfunction is_old_mysql_api(what) {\n  if (is_global_function_call(what)) {\n    return ['mysql_query', 'mysql_escape_string', 'mysql_real_escape_string', 'mysql_set_charset'].includes(what.name);\n  }\n  return false;\n}\n\nfunction inspect_sql_query_function(ast) {\n  var what = ast.what;\n  if (is_global_function_call(what)) {\n    if (['mysqli_query'].includes(what.name)) {\n      inspect_sql_query_string(ast.arguments[1]);\n    }\n  } else if (is_propertylookup(what)) {\n    if (['query'].includes(what.offset.name)) {\n      inspect_sql_query_string(ast.arguments[0]);\n    }\n  }\n  return false;\n}\n\nfunction inspect_encoding_function(ast) {\n  var what = ast.what;\n  if (is_global_function_call(what)) {\n    if (['mysqli_set_charset'].includes(what.name)) {\n      encoding_have_set = true;\n    }\n  } else if (is_propertylookup(what)) {\n    if (what.offset.name === 'set_charset') {\n      encoding_have_set = true;\n    }\n  }\n  return false;\n}\n\nfunction is_sql_escape_function(what) {\n  if (is_global_function_call(what)) {\n    return ['mysqli_escape_string', 'mysqli_real_escape_string'].includes(what.name);\n  } else if (is_propertylookup(what)) {\n    return ['real_escape_string', 'escape_string'].includes(what.offset.name);\n  }\n  return false;\n}\n\nvar encoding_have_set = false;\n\n\n/////// inspect inside function call\nfunction inspect_call(ast) { \n  if (is_old_mysql_api(ast.what)) {\n    alert_vulnerability(ast, \"old mysql call is deprecated. use mysqli\");\n    return;\n  }\n  \n  inspect_sql_query_function(ast);\n  inspect_encoding_function(ast);\n}\n\n/** flatten linked list of boolean operator `.'\n* @param ast: AST of the first argument of sql-query functions\n* @returns: array of each element\n*/\nfunction flatten_string_concatenation(ast) {\n  if (ast.kind === 'bin' && ast.type === '.') {\n    var rest = flatten_string_concatenation(ast.left);\n    return rest.concat(flatten_string_concatenation(ast.right));\n  } else if (ast.kind === 'encapsed') {\n    // unfold encapsed string, like \"hello, {$name}!\"\n    return ast.value.reduce(function(prev, current, index, arr) {\n      return prev.concat(flatten_string_concatenation(current));\n    }, []);\n  } else if (ast.kind === 'parenthesis') {\n    // (hoge) => hoge\n    return flatten_string_concatenation(ast.inner);\n  } else {\n    return [ast];\n  }\n}\n\nvar karma = 0;\nvar alert_output = \"\";\n\nfunction alert_vulnerability(ast, msg) {\n  var loc = \"unknown\";\n\n  if (ast) {\n    loc = ast.loc.start.line + \":\" + ast.loc.start.column;\n  }\n\n  alert_output += `WARNING at line ${loc}: ` + msg + \"\\n\";\n  karma += 1;\n}\n\nfunction report_total_result() {\n  if (karma === 0) {\n    alert_output += \"RESULT: OK\";\n  } else {\n    alert_output += `RESULT: ${karma} warnings`;\n  }\n  \n  console.log(alert_output);  \n\n  var tmp = alert_output;\n  alert_output = \"\";\n  karma = 0;\n  encoding_have_set = false;\n  \n  return tmp;\n}\n\n// check surrounding strings are good for escaping\n// only simple checks are done in this step\nfunction inspect_escaping_strings(left, right, value) {  \n  if (left === undefined) {\n    alert_vulnerability(value, \"bad variable position\"); \n    return;   \n  }\n  if (right === undefined) {\n    alert_vulnerability(value, \"bad variable position\");    \n    return;\n  }\n  if (left.kind !== 'string') {\n    alert_vulnerability(left, \"expression before variable is not string\");    \n    return;\n  }\n  if (right.kind !== 'string') {\n    alert_vulnerability(right, \"expression before variable is not string\");    \n    return;\n  }\n  \n  var l = left.value;\n  var r = right.value;\n  \n  if (l[l.length - 1] === \"'\" && l[l.length - 2] === \"'\") {\n    alert_vulnerability(left, \"variable is doubly single quoted\");\n    return;    \n  }\n  if (l[l.length - 1] === '\"' && l[l.length - 2] === '\"') {\n    alert_vulnerability(left, \"variable is doubly double quoted\");    \n    return;\n  }\n\n  if ((l[l.length - 1] === \"'\" && r[0] === \"'\") ||\n  (l[l.length - 1] === \"'\" && r[0] === \"'\")) {\n    return;\n  } else {\n    alert_vulnerability(left, \"variable is not properly escaped by enclosing strings\");\n  }\n}\n\n// inspect the first argument of sql_query function\nfunction inspect_sql_query_string(ast) {\n  if (!ast) {\n    alert_vulnerability(ast, \"query argument is null\");\n    return;\n  }\n\n  if (!encoding_have_set) {\n    alert_vulnerability(ast, \"encoding is not set before sql query\");\n  }\n\n  var flatten = flatten_string_concatenation(ast);\n  \n  flatten.forEach(function(value, index, array) {\n    if (value.kind === 'string') {\n      // ok\n    } else if (value.kind === 'call' && is_old_mysql_api(value.what)) {\n      alert_vulnerability(value, 'calling old escape function. use mysqli');\n    } else if (value.kind === 'call' && is_sql_escape_function(value.what)) {\n      var left = array[index - 1]; // get surrounding string \n      var right = array[index + 1];\n      \n      inspect_escaping_strings(left, right, value);\n    } else {\n      alert_vulnerability(value, 'value is not escaped');\n    }\n  }, this);\n  \n}\n\nfunction main(buffer) {\n  // initialize a new PHP parser\n  var parser = new engine({\n    // some options :\n    parser: {\n      extractDoc: true\n    },\n    ast: {\n      withPositions: true\n    }\n  });\n    \n  try {\n    var ast = parser.parseCode(buffer, \"input\");\n    inspect(ast);\n    return report_total_result();\n  } catch (e) {\n    var msg = `ERROR: syntax error in '${e.fileName}' at ${e.lineNumber}:${e.columnNumber}\\n`;\n    msg += `ERROR: no analysis done`;\n    \n    console.log(e);\n    return msg;\n  }\n}\n\n// read strings from stdin then inspect\n//if (typeof document === 'undefined') {\n//  var fs = require('fs');\n//  main(fs.readFileSync('/dev/stdin', 'utf8'));\n//}\n\nfunction execute() {\n  var in_str = document.getElementById('input').value;\n  var result = main(in_str);\n\n  document.getElementById('output').value = result;\n}\n\n(function() {\n  window.onload = function() {\n    document.getElementById('fire').addEventListener('click', execute);\n  }\n})();\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./index.js\n// module id = 13\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length - 1; i >= 0; i--) {\n    var last = parts[i];\n    if (last === '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Split a filename into [root, dir, basename, ext], unix version\n// 'root' is just a slash, or nothing.\nvar splitPathRe =\n    /^(\\/?|)([\\s\\S]*?)((?:\\.{1,2}|[^\\/]+?|)(\\.[^.\\/]*|))(?:[\\/]*)$/;\nvar splitPath = function(filename) {\n  return splitPathRe.exec(filename).slice(1);\n};\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\n  var resolvedPath = '',\n      resolvedAbsolute = false;\n\n  for (var i = arguments.length - 1; i >= -1 && !resolvedAbsolute; i--) {\n    var path = (i >= 0) ? arguments[i] : process.cwd();\n\n    // Skip empty and invalid entries\n    if (typeof path !== 'string') {\n      throw new TypeError('Arguments to path.resolve must be strings');\n    } else if (!path) {\n      continue;\n    }\n\n    resolvedPath = path + '/' + resolvedPath;\n    resolvedAbsolute = path.charAt(0) === '/';\n  }\n\n  // At this point the path should be resolved to a full absolute path, but\n  // handle relative paths to be safe (might happen when process.cwd() fails)\n\n  // Normalize the path\n  resolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\n  var isAbsolute = exports.isAbsolute(path),\n      trailingSlash = substr(path, -1) === '/';\n\n  // Normalize the path\n  path = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n\n  return (isAbsolute ? '/' : '') + path;\n};\n\n// posix version\nexports.isAbsolute = function(path) {\n  return path.charAt(0) === '/';\n};\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    if (typeof p !== 'string') {\n      throw new TypeError('Arguments to path.join must be strings');\n    }\n    return p;\n  }).join('/'));\n};\n\n\n// path.relative(from, to)\n// posix version\nexports.relative = function(from, to) {\n  from = exports.resolve(from).substr(1);\n  to = exports.resolve(to).substr(1);\n\n  function trim(arr) {\n    var start = 0;\n    for (; start < arr.length; start++) {\n      if (arr[start] !== '') break;\n    }\n\n    var end = arr.length - 1;\n    for (; end >= 0; end--) {\n      if (arr[end] !== '') break;\n    }\n\n    if (start > end) return [];\n    return arr.slice(start, end - start + 1);\n  }\n\n  var fromParts = trim(from.split('/'));\n  var toParts = trim(to.split('/'));\n\n  var length = Math.min(fromParts.length, toParts.length);\n  var samePartsLength = length;\n  for (var i = 0; i < length; i++) {\n    if (fromParts[i] !== toParts[i]) {\n      samePartsLength = i;\n      break;\n    }\n  }\n\n  var outputParts = [];\n  for (var i = samePartsLength; i < fromParts.length; i++) {\n    outputParts.push('..');\n  }\n\n  outputParts = outputParts.concat(toParts.slice(samePartsLength));\n\n  return outputParts.join('/');\n};\n\nexports.sep = '/';\nexports.delimiter = ':';\n\nexports.dirname = function(path) {\n  var result = splitPath(path),\n      root = result[0],\n      dir = result[1];\n\n  if (!root && !dir) {\n    // No dirname whatsoever\n    return '.';\n  }\n\n  if (dir) {\n    // It has a dirname, strip trailing slash\n    dir = dir.substr(0, dir.length - 1);\n  }\n\n  return root + dir;\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPath(path)[2];\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPath(path)[3];\n};\n\nfunction filter (xs, f) {\n    if (xs.filter) return xs.filter(f);\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (f(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// String.prototype.substr - negative index don't work in IE8\nvar substr = 'ab'.substr(-1) === 'b'\n    ? function (str, start, len) { return str.substr(start, len) }\n    : function (str, start, len) {\n        if (start < 0) start = str.length + start;\n        return str.substr(start, len);\n    }\n;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/path-browserify/index.js\n// module id = 14\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar lexer = require('./lexer');\nvar parser = require('./parser');\nvar tokens = require('./tokens');\nvar AST = require('./ast');\n\n/**\n * @private combine structures\n */\nfunction combine(src, to) {\n  var keys = Object.keys(src);\n  var i = keys.length;\n  while (i--) {\n    var k = keys[i];\n    var val = src[k];\n    if (val === null) {\n      delete to[k];\n    } else if (typeof val === 'function') {\n      to[k] = val.bind(to);\n    } else if (Array.isArray(val)) {\n      to[k] = Array.isArray(to[k]) ? to[k].concat(val) : val;\n    } else if (typeof val === 'object') {\n      to[k] = typeof to[k] === 'object' ? combine(val, to[k]) : val;\n    } else {\n      to[k] = val;\n    }\n  }\n  return to;\n}\n\n/**\n * Initialise a new parser instance with the specified options\n *\n * Usage :\n * ```js\n * var parser = require('php-parser');\n * var instance = new parser({\n *   parser: {\n *     extractDoc: true,\n *     suppressErrors: true\n *   },\n *   ast: {\n *     withPositions: true\n *   },\n *   lexer: {\n *     short_tags: true,\n *     asp_tags: true\n *   }\n * });\n *\n * var evalAST = instance.parseEval('some php code');\n * var codeAST = instance.parseCode('<?php some php code', 'foo.php');\n * var tokens = instance.tokenGetAll('<?php some php code');\n * ```\n *\n * @constructor {Engine}\n * @param {Object} options - List of options\n *\n * @property {Lexer} lexer\n * @property {Parser} parser\n * @property {AST} ast\n * @property {Object} tokens\n */\nvar engine = function(options) {\n  if (typeof this === 'function') {\n    return new this(options);\n  }\n  this.tokens = tokens;\n  this.lexer = new lexer(this);\n  this.ast = new AST();\n  this.parser = new parser(this.lexer, this.ast);\n  if (options && typeof options === 'object') {\n    combine(options, this);\n  }\n};\n\n/**\n * Check if the inpyt is a buffer or a string\n * @param  {Buffer|String} buffer Input value that can be either a buffer or a string\n * @return {String}   Returns the string from input\n */\nvar getStringBuffer = function(buffer) {\n  return Buffer.isBuffer(buffer) ? buffer.toString() : buffer;\n};\n\n/**\n * Creates a new instance (Helper)\n * @param {Object} options\n * @return {Engine}\n * @private\n*/\nengine.create = function(options) {\n  return new engine(options);\n};\n\n/**\n * Evaluate the buffer\n * @private\n */\nengine.parseEval = function(buffer, options) {\n  var self = new engine(options);\n  return self.parseEval(buffer);\n};\n\n/**\n * Parse an evaluating mode string (no need to open php tags)\n * @param {String} buffer\n * @return {Program}\n */\nengine.prototype.parseEval = function(buffer) {\n  this.lexer.mode_eval = true;\n  this.lexer.all_tokens = false;\n  buffer = getStringBuffer(buffer);\n  return this.parser.parse(buffer, 'eval');\n};\n\n/**\n * Static function that parse a php code with open/close tags\n * @private\n */\nengine.parseCode = function(buffer, filename, options) {\n  if (typeof filename === 'object') {\n    // retro-compatibility\n    options = filename;\n    filename = 'unknown';\n  }\n  var self = new engine(options);\n  return self.parseCode(buffer, filename);\n};\n\n/**\n * Function that parse a php code with open/close tags\n *\n * Sample code :\n * ```php\n * <?php $x = 1;\n * ```\n *\n * Usage :\n * ```js\n * var parser = require('php-parser');\n * var phpParser = new parser({\n *   // some options\n * });\n * var ast = phpParser.parseCode('...php code...', 'foo.php');\n * ```\n * @param {String} buffer - The code to be parsed\n * @param {String} filename - Filename\n * @return {Program}\n */\nengine.prototype.parseCode = function(buffer, filename) {\n  this.lexer.mode_eval = false;\n  this.lexer.all_tokens = false;\n  buffer = getStringBuffer(buffer);\n  return this.parser.parse(buffer, filename);\n};\n\n/**\n * Split the buffer into tokens\n * @private\n */\nengine.tokenGetAll = function(buffer, options) {\n  var self = new engine(options);\n  return self.tokenGetAll(buffer);\n};\n\n/**\n * Extract tokens from the specified buffer.\n * > Note that the output tokens are *STRICLY* similar to PHP function `token_get_all`\n * @param {String} buffer\n * @return {String[]} - Each item can be a string or an array with following informations [token_name, text, line_number]\n */\nengine.prototype.tokenGetAll = function(buffer) {\n  this.lexer.mode_eval = false;\n  this.lexer.all_tokens = true;\n  buffer = getStringBuffer(buffer);\n  var EOF = this.lexer.EOF;\n  var names = this.tokens.values;\n  this.lexer.setInput(buffer);\n  var token = this.lexer.lex() || EOF;\n  var result = [];\n  while(token != EOF) {\n    var entry = this.lexer.yytext;\n    if (names.hasOwnProperty(token)) {\n      entry = [names[token], entry, this.lexer.yylloc.first_line];\n    }\n    result.push(entry);\n    token = this.lexer.lex() || EOF;\n  }\n  return result;\n};\n\n// exports the function\nmodule.exports = engine;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/index.js\n// module id = 15\n// module chunks = 0","/*!\n * The buffer module from node.js, for the browser.\n *\n * @author   Feross Aboukhadijeh <feross@feross.org> <http://feross.org>\n * @license  MIT\n */\n/* eslint-disable no-proto */\n\n'use strict'\n\nvar base64 = require('base64-js')\nvar ieee754 = require('ieee754')\nvar isArray = require('isarray')\n\nexports.Buffer = Buffer\nexports.SlowBuffer = SlowBuffer\nexports.INSPECT_MAX_BYTES = 50\n\n/**\n * If `Buffer.TYPED_ARRAY_SUPPORT`:\n *   === true    Use Uint8Array implementation (fastest)\n *   === false   Use Object implementation (most compatible, even IE6)\n *\n * Browsers that support typed arrays are IE 10+, Firefox 4+, Chrome 7+, Safari 5.1+,\n * Opera 11.6+, iOS 4.2+.\n *\n * Due to various browser bugs, sometimes the Object implementation will be used even\n * when the browser supports typed arrays.\n *\n * Note:\n *\n *   - Firefox 4-29 lacks support for adding new properties to `Uint8Array` instances,\n *     See: https://bugzilla.mozilla.org/show_bug.cgi?id=695438.\n *\n *   - Chrome 9-10 is missing the `TypedArray.prototype.subarray` function.\n *\n *   - IE10 has a broken `TypedArray.prototype.subarray` function which returns arrays of\n *     incorrect length in some situations.\n\n * We detect these buggy browsers and set `Buffer.TYPED_ARRAY_SUPPORT` to `false` so they\n * get the Object implementation, which is slower but behaves correctly.\n */\nBuffer.TYPED_ARRAY_SUPPORT = global.TYPED_ARRAY_SUPPORT !== undefined\n  ? global.TYPED_ARRAY_SUPPORT\n  : typedArraySupport()\n\n/*\n * Export kMaxLength after typed array support is determined.\n */\nexports.kMaxLength = kMaxLength()\n\nfunction typedArraySupport () {\n  try {\n    var arr = new Uint8Array(1)\n    arr.__proto__ = {__proto__: Uint8Array.prototype, foo: function () { return 42 }}\n    return arr.foo() === 42 && // typed array instances can be augmented\n        typeof arr.subarray === 'function' && // chrome 9-10 lack `subarray`\n        arr.subarray(1, 1).byteLength === 0 // ie10 has broken `subarray`\n  } catch (e) {\n    return false\n  }\n}\n\nfunction kMaxLength () {\n  return Buffer.TYPED_ARRAY_SUPPORT\n    ? 0x7fffffff\n    : 0x3fffffff\n}\n\nfunction createBuffer (that, length) {\n  if (kMaxLength() < length) {\n    throw new RangeError('Invalid typed array length')\n  }\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = new Uint8Array(length)\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    if (that === null) {\n      that = new Buffer(length)\n    }\n    that.length = length\n  }\n\n  return that\n}\n\n/**\n * The Buffer constructor returns instances of `Uint8Array` that have their\n * prototype changed to `Buffer.prototype`. Furthermore, `Buffer` is a subclass of\n * `Uint8Array`, so the returned instances will have all the node `Buffer` methods\n * and the `Uint8Array` methods. Square bracket notation works as expected -- it\n * returns a single octet.\n *\n * The `Uint8Array` prototype remains unmodified.\n */\n\nfunction Buffer (arg, encodingOrOffset, length) {\n  if (!Buffer.TYPED_ARRAY_SUPPORT && !(this instanceof Buffer)) {\n    return new Buffer(arg, encodingOrOffset, length)\n  }\n\n  // Common case.\n  if (typeof arg === 'number') {\n    if (typeof encodingOrOffset === 'string') {\n      throw new Error(\n        'If encoding is specified then the first argument must be a string'\n      )\n    }\n    return allocUnsafe(this, arg)\n  }\n  return from(this, arg, encodingOrOffset, length)\n}\n\nBuffer.poolSize = 8192 // not used by this implementation\n\n// TODO: Legacy, not needed anymore. Remove in next major version.\nBuffer._augment = function (arr) {\n  arr.__proto__ = Buffer.prototype\n  return arr\n}\n\nfunction from (that, value, encodingOrOffset, length) {\n  if (typeof value === 'number') {\n    throw new TypeError('\"value\" argument must not be a number')\n  }\n\n  if (typeof ArrayBuffer !== 'undefined' && value instanceof ArrayBuffer) {\n    return fromArrayBuffer(that, value, encodingOrOffset, length)\n  }\n\n  if (typeof value === 'string') {\n    return fromString(that, value, encodingOrOffset)\n  }\n\n  return fromObject(that, value)\n}\n\n/**\n * Functionally equivalent to Buffer(arg, encoding) but throws a TypeError\n * if value is a number.\n * Buffer.from(str[, encoding])\n * Buffer.from(array)\n * Buffer.from(buffer)\n * Buffer.from(arrayBuffer[, byteOffset[, length]])\n **/\nBuffer.from = function (value, encodingOrOffset, length) {\n  return from(null, value, encodingOrOffset, length)\n}\n\nif (Buffer.TYPED_ARRAY_SUPPORT) {\n  Buffer.prototype.__proto__ = Uint8Array.prototype\n  Buffer.__proto__ = Uint8Array\n  if (typeof Symbol !== 'undefined' && Symbol.species &&\n      Buffer[Symbol.species] === Buffer) {\n    // Fix subarray() in ES2016. See: https://github.com/feross/buffer/pull/97\n    Object.defineProperty(Buffer, Symbol.species, {\n      value: null,\n      configurable: true\n    })\n  }\n}\n\nfunction assertSize (size) {\n  if (typeof size !== 'number') {\n    throw new TypeError('\"size\" argument must be a number')\n  } else if (size < 0) {\n    throw new RangeError('\"size\" argument must not be negative')\n  }\n}\n\nfunction alloc (that, size, fill, encoding) {\n  assertSize(size)\n  if (size <= 0) {\n    return createBuffer(that, size)\n  }\n  if (fill !== undefined) {\n    // Only pay attention to encoding if it's a string. This\n    // prevents accidentally sending in a number that would\n    // be interpretted as a start offset.\n    return typeof encoding === 'string'\n      ? createBuffer(that, size).fill(fill, encoding)\n      : createBuffer(that, size).fill(fill)\n  }\n  return createBuffer(that, size)\n}\n\n/**\n * Creates a new filled Buffer instance.\n * alloc(size[, fill[, encoding]])\n **/\nBuffer.alloc = function (size, fill, encoding) {\n  return alloc(null, size, fill, encoding)\n}\n\nfunction allocUnsafe (that, size) {\n  assertSize(size)\n  that = createBuffer(that, size < 0 ? 0 : checked(size) | 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) {\n    for (var i = 0; i < size; ++i) {\n      that[i] = 0\n    }\n  }\n  return that\n}\n\n/**\n * Equivalent to Buffer(num), by default creates a non-zero-filled Buffer instance.\n * */\nBuffer.allocUnsafe = function (size) {\n  return allocUnsafe(null, size)\n}\n/**\n * Equivalent to SlowBuffer(num), by default creates a non-zero-filled Buffer instance.\n */\nBuffer.allocUnsafeSlow = function (size) {\n  return allocUnsafe(null, size)\n}\n\nfunction fromString (that, string, encoding) {\n  if (typeof encoding !== 'string' || encoding === '') {\n    encoding = 'utf8'\n  }\n\n  if (!Buffer.isEncoding(encoding)) {\n    throw new TypeError('\"encoding\" must be a valid string encoding')\n  }\n\n  var length = byteLength(string, encoding) | 0\n  that = createBuffer(that, length)\n\n  var actual = that.write(string, encoding)\n\n  if (actual !== length) {\n    // Writing a hex string, for example, that contains invalid characters will\n    // cause everything after the first invalid character to be ignored. (e.g.\n    // 'abxxcd' will be treated as 'ab')\n    that = that.slice(0, actual)\n  }\n\n  return that\n}\n\nfunction fromArrayLike (that, array) {\n  var length = array.length < 0 ? 0 : checked(array.length) | 0\n  that = createBuffer(that, length)\n  for (var i = 0; i < length; i += 1) {\n    that[i] = array[i] & 255\n  }\n  return that\n}\n\nfunction fromArrayBuffer (that, array, byteOffset, length) {\n  array.byteLength // this throws if `array` is not a valid ArrayBuffer\n\n  if (byteOffset < 0 || array.byteLength < byteOffset) {\n    throw new RangeError('\\'offset\\' is out of bounds')\n  }\n\n  if (array.byteLength < byteOffset + (length || 0)) {\n    throw new RangeError('\\'length\\' is out of bounds')\n  }\n\n  if (byteOffset === undefined && length === undefined) {\n    array = new Uint8Array(array)\n  } else if (length === undefined) {\n    array = new Uint8Array(array, byteOffset)\n  } else {\n    array = new Uint8Array(array, byteOffset, length)\n  }\n\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    // Return an augmented `Uint8Array` instance, for best performance\n    that = array\n    that.__proto__ = Buffer.prototype\n  } else {\n    // Fallback: Return an object instance of the Buffer class\n    that = fromArrayLike(that, array)\n  }\n  return that\n}\n\nfunction fromObject (that, obj) {\n  if (Buffer.isBuffer(obj)) {\n    var len = checked(obj.length) | 0\n    that = createBuffer(that, len)\n\n    if (that.length === 0) {\n      return that\n    }\n\n    obj.copy(that, 0, 0, len)\n    return that\n  }\n\n  if (obj) {\n    if ((typeof ArrayBuffer !== 'undefined' &&\n        obj.buffer instanceof ArrayBuffer) || 'length' in obj) {\n      if (typeof obj.length !== 'number' || isnan(obj.length)) {\n        return createBuffer(that, 0)\n      }\n      return fromArrayLike(that, obj)\n    }\n\n    if (obj.type === 'Buffer' && isArray(obj.data)) {\n      return fromArrayLike(that, obj.data)\n    }\n  }\n\n  throw new TypeError('First argument must be a string, Buffer, ArrayBuffer, Array, or array-like object.')\n}\n\nfunction checked (length) {\n  // Note: cannot use `length < kMaxLength()` here because that fails when\n  // length is NaN (which is otherwise coerced to zero.)\n  if (length >= kMaxLength()) {\n    throw new RangeError('Attempt to allocate Buffer larger than maximum ' +\n                         'size: 0x' + kMaxLength().toString(16) + ' bytes')\n  }\n  return length | 0\n}\n\nfunction SlowBuffer (length) {\n  if (+length != length) { // eslint-disable-line eqeqeq\n    length = 0\n  }\n  return Buffer.alloc(+length)\n}\n\nBuffer.isBuffer = function isBuffer (b) {\n  return !!(b != null && b._isBuffer)\n}\n\nBuffer.compare = function compare (a, b) {\n  if (!Buffer.isBuffer(a) || !Buffer.isBuffer(b)) {\n    throw new TypeError('Arguments must be Buffers')\n  }\n\n  if (a === b) return 0\n\n  var x = a.length\n  var y = b.length\n\n  for (var i = 0, len = Math.min(x, y); i < len; ++i) {\n    if (a[i] !== b[i]) {\n      x = a[i]\n      y = b[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\nBuffer.isEncoding = function isEncoding (encoding) {\n  switch (String(encoding).toLowerCase()) {\n    case 'hex':\n    case 'utf8':\n    case 'utf-8':\n    case 'ascii':\n    case 'latin1':\n    case 'binary':\n    case 'base64':\n    case 'ucs2':\n    case 'ucs-2':\n    case 'utf16le':\n    case 'utf-16le':\n      return true\n    default:\n      return false\n  }\n}\n\nBuffer.concat = function concat (list, length) {\n  if (!isArray(list)) {\n    throw new TypeError('\"list\" argument must be an Array of Buffers')\n  }\n\n  if (list.length === 0) {\n    return Buffer.alloc(0)\n  }\n\n  var i\n  if (length === undefined) {\n    length = 0\n    for (i = 0; i < list.length; ++i) {\n      length += list[i].length\n    }\n  }\n\n  var buffer = Buffer.allocUnsafe(length)\n  var pos = 0\n  for (i = 0; i < list.length; ++i) {\n    var buf = list[i]\n    if (!Buffer.isBuffer(buf)) {\n      throw new TypeError('\"list\" argument must be an Array of Buffers')\n    }\n    buf.copy(buffer, pos)\n    pos += buf.length\n  }\n  return buffer\n}\n\nfunction byteLength (string, encoding) {\n  if (Buffer.isBuffer(string)) {\n    return string.length\n  }\n  if (typeof ArrayBuffer !== 'undefined' && typeof ArrayBuffer.isView === 'function' &&\n      (ArrayBuffer.isView(string) || string instanceof ArrayBuffer)) {\n    return string.byteLength\n  }\n  if (typeof string !== 'string') {\n    string = '' + string\n  }\n\n  var len = string.length\n  if (len === 0) return 0\n\n  // Use a for loop to avoid recursion\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'ascii':\n      case 'latin1':\n      case 'binary':\n        return len\n      case 'utf8':\n      case 'utf-8':\n      case undefined:\n        return utf8ToBytes(string).length\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return len * 2\n      case 'hex':\n        return len >>> 1\n      case 'base64':\n        return base64ToBytes(string).length\n      default:\n        if (loweredCase) return utf8ToBytes(string).length // assume utf8\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\nBuffer.byteLength = byteLength\n\nfunction slowToString (encoding, start, end) {\n  var loweredCase = false\n\n  // No need to verify that \"this.length <= MAX_UINT32\" since it's a read-only\n  // property of a typed array.\n\n  // This behaves neither like String nor Uint8Array in that we set start/end\n  // to their upper/lower bounds if the value passed is out of range.\n  // undefined is handled specially as per ECMA-262 6th Edition,\n  // Section 13.3.3.7 Runtime Semantics: KeyedBindingInitialization.\n  if (start === undefined || start < 0) {\n    start = 0\n  }\n  // Return early if start > this.length. Done here to prevent potential uint32\n  // coercion fail below.\n  if (start > this.length) {\n    return ''\n  }\n\n  if (end === undefined || end > this.length) {\n    end = this.length\n  }\n\n  if (end <= 0) {\n    return ''\n  }\n\n  // Force coersion to uint32. This will also coerce falsey/NaN values to 0.\n  end >>>= 0\n  start >>>= 0\n\n  if (end <= start) {\n    return ''\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  while (true) {\n    switch (encoding) {\n      case 'hex':\n        return hexSlice(this, start, end)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Slice(this, start, end)\n\n      case 'ascii':\n        return asciiSlice(this, start, end)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Slice(this, start, end)\n\n      case 'base64':\n        return base64Slice(this, start, end)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return utf16leSlice(this, start, end)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = (encoding + '').toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\n// The property is used by `Buffer.isBuffer` and `is-buffer` (in Safari 5-7) to detect\n// Buffer instances.\nBuffer.prototype._isBuffer = true\n\nfunction swap (b, n, m) {\n  var i = b[n]\n  b[n] = b[m]\n  b[m] = i\n}\n\nBuffer.prototype.swap16 = function swap16 () {\n  var len = this.length\n  if (len % 2 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 16-bits')\n  }\n  for (var i = 0; i < len; i += 2) {\n    swap(this, i, i + 1)\n  }\n  return this\n}\n\nBuffer.prototype.swap32 = function swap32 () {\n  var len = this.length\n  if (len % 4 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 32-bits')\n  }\n  for (var i = 0; i < len; i += 4) {\n    swap(this, i, i + 3)\n    swap(this, i + 1, i + 2)\n  }\n  return this\n}\n\nBuffer.prototype.swap64 = function swap64 () {\n  var len = this.length\n  if (len % 8 !== 0) {\n    throw new RangeError('Buffer size must be a multiple of 64-bits')\n  }\n  for (var i = 0; i < len; i += 8) {\n    swap(this, i, i + 7)\n    swap(this, i + 1, i + 6)\n    swap(this, i + 2, i + 5)\n    swap(this, i + 3, i + 4)\n  }\n  return this\n}\n\nBuffer.prototype.toString = function toString () {\n  var length = this.length | 0\n  if (length === 0) return ''\n  if (arguments.length === 0) return utf8Slice(this, 0, length)\n  return slowToString.apply(this, arguments)\n}\n\nBuffer.prototype.equals = function equals (b) {\n  if (!Buffer.isBuffer(b)) throw new TypeError('Argument must be a Buffer')\n  if (this === b) return true\n  return Buffer.compare(this, b) === 0\n}\n\nBuffer.prototype.inspect = function inspect () {\n  var str = ''\n  var max = exports.INSPECT_MAX_BYTES\n  if (this.length > 0) {\n    str = this.toString('hex', 0, max).match(/.{2}/g).join(' ')\n    if (this.length > max) str += ' ... '\n  }\n  return '<Buffer ' + str + '>'\n}\n\nBuffer.prototype.compare = function compare (target, start, end, thisStart, thisEnd) {\n  if (!Buffer.isBuffer(target)) {\n    throw new TypeError('Argument must be a Buffer')\n  }\n\n  if (start === undefined) {\n    start = 0\n  }\n  if (end === undefined) {\n    end = target ? target.length : 0\n  }\n  if (thisStart === undefined) {\n    thisStart = 0\n  }\n  if (thisEnd === undefined) {\n    thisEnd = this.length\n  }\n\n  if (start < 0 || end > target.length || thisStart < 0 || thisEnd > this.length) {\n    throw new RangeError('out of range index')\n  }\n\n  if (thisStart >= thisEnd && start >= end) {\n    return 0\n  }\n  if (thisStart >= thisEnd) {\n    return -1\n  }\n  if (start >= end) {\n    return 1\n  }\n\n  start >>>= 0\n  end >>>= 0\n  thisStart >>>= 0\n  thisEnd >>>= 0\n\n  if (this === target) return 0\n\n  var x = thisEnd - thisStart\n  var y = end - start\n  var len = Math.min(x, y)\n\n  var thisCopy = this.slice(thisStart, thisEnd)\n  var targetCopy = target.slice(start, end)\n\n  for (var i = 0; i < len; ++i) {\n    if (thisCopy[i] !== targetCopy[i]) {\n      x = thisCopy[i]\n      y = targetCopy[i]\n      break\n    }\n  }\n\n  if (x < y) return -1\n  if (y < x) return 1\n  return 0\n}\n\n// Finds either the first index of `val` in `buffer` at offset >= `byteOffset`,\n// OR the last index of `val` in `buffer` at offset <= `byteOffset`.\n//\n// Arguments:\n// - buffer - a Buffer to search\n// - val - a string, Buffer, or number\n// - byteOffset - an index into `buffer`; will be clamped to an int32\n// - encoding - an optional encoding, relevant is val is a string\n// - dir - true for indexOf, false for lastIndexOf\nfunction bidirectionalIndexOf (buffer, val, byteOffset, encoding, dir) {\n  // Empty buffer means no match\n  if (buffer.length === 0) return -1\n\n  // Normalize byteOffset\n  if (typeof byteOffset === 'string') {\n    encoding = byteOffset\n    byteOffset = 0\n  } else if (byteOffset > 0x7fffffff) {\n    byteOffset = 0x7fffffff\n  } else if (byteOffset < -0x80000000) {\n    byteOffset = -0x80000000\n  }\n  byteOffset = +byteOffset  // Coerce to Number.\n  if (isNaN(byteOffset)) {\n    // byteOffset: it it's undefined, null, NaN, \"foo\", etc, search whole buffer\n    byteOffset = dir ? 0 : (buffer.length - 1)\n  }\n\n  // Normalize byteOffset: negative offsets start from the end of the buffer\n  if (byteOffset < 0) byteOffset = buffer.length + byteOffset\n  if (byteOffset >= buffer.length) {\n    if (dir) return -1\n    else byteOffset = buffer.length - 1\n  } else if (byteOffset < 0) {\n    if (dir) byteOffset = 0\n    else return -1\n  }\n\n  // Normalize val\n  if (typeof val === 'string') {\n    val = Buffer.from(val, encoding)\n  }\n\n  // Finally, search either indexOf (if dir is true) or lastIndexOf\n  if (Buffer.isBuffer(val)) {\n    // Special case: looking for empty string/buffer always fails\n    if (val.length === 0) {\n      return -1\n    }\n    return arrayIndexOf(buffer, val, byteOffset, encoding, dir)\n  } else if (typeof val === 'number') {\n    val = val & 0xFF // Search for a byte value [0-255]\n    if (Buffer.TYPED_ARRAY_SUPPORT &&\n        typeof Uint8Array.prototype.indexOf === 'function') {\n      if (dir) {\n        return Uint8Array.prototype.indexOf.call(buffer, val, byteOffset)\n      } else {\n        return Uint8Array.prototype.lastIndexOf.call(buffer, val, byteOffset)\n      }\n    }\n    return arrayIndexOf(buffer, [ val ], byteOffset, encoding, dir)\n  }\n\n  throw new TypeError('val must be string, number or Buffer')\n}\n\nfunction arrayIndexOf (arr, val, byteOffset, encoding, dir) {\n  var indexSize = 1\n  var arrLength = arr.length\n  var valLength = val.length\n\n  if (encoding !== undefined) {\n    encoding = String(encoding).toLowerCase()\n    if (encoding === 'ucs2' || encoding === 'ucs-2' ||\n        encoding === 'utf16le' || encoding === 'utf-16le') {\n      if (arr.length < 2 || val.length < 2) {\n        return -1\n      }\n      indexSize = 2\n      arrLength /= 2\n      valLength /= 2\n      byteOffset /= 2\n    }\n  }\n\n  function read (buf, i) {\n    if (indexSize === 1) {\n      return buf[i]\n    } else {\n      return buf.readUInt16BE(i * indexSize)\n    }\n  }\n\n  var i\n  if (dir) {\n    var foundIndex = -1\n    for (i = byteOffset; i < arrLength; i++) {\n      if (read(arr, i) === read(val, foundIndex === -1 ? 0 : i - foundIndex)) {\n        if (foundIndex === -1) foundIndex = i\n        if (i - foundIndex + 1 === valLength) return foundIndex * indexSize\n      } else {\n        if (foundIndex !== -1) i -= i - foundIndex\n        foundIndex = -1\n      }\n    }\n  } else {\n    if (byteOffset + valLength > arrLength) byteOffset = arrLength - valLength\n    for (i = byteOffset; i >= 0; i--) {\n      var found = true\n      for (var j = 0; j < valLength; j++) {\n        if (read(arr, i + j) !== read(val, j)) {\n          found = false\n          break\n        }\n      }\n      if (found) return i\n    }\n  }\n\n  return -1\n}\n\nBuffer.prototype.includes = function includes (val, byteOffset, encoding) {\n  return this.indexOf(val, byteOffset, encoding) !== -1\n}\n\nBuffer.prototype.indexOf = function indexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, true)\n}\n\nBuffer.prototype.lastIndexOf = function lastIndexOf (val, byteOffset, encoding) {\n  return bidirectionalIndexOf(this, val, byteOffset, encoding, false)\n}\n\nfunction hexWrite (buf, string, offset, length) {\n  offset = Number(offset) || 0\n  var remaining = buf.length - offset\n  if (!length) {\n    length = remaining\n  } else {\n    length = Number(length)\n    if (length > remaining) {\n      length = remaining\n    }\n  }\n\n  // must be an even number of digits\n  var strLen = string.length\n  if (strLen % 2 !== 0) throw new TypeError('Invalid hex string')\n\n  if (length > strLen / 2) {\n    length = strLen / 2\n  }\n  for (var i = 0; i < length; ++i) {\n    var parsed = parseInt(string.substr(i * 2, 2), 16)\n    if (isNaN(parsed)) return i\n    buf[offset + i] = parsed\n  }\n  return i\n}\n\nfunction utf8Write (buf, string, offset, length) {\n  return blitBuffer(utf8ToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nfunction asciiWrite (buf, string, offset, length) {\n  return blitBuffer(asciiToBytes(string), buf, offset, length)\n}\n\nfunction latin1Write (buf, string, offset, length) {\n  return asciiWrite(buf, string, offset, length)\n}\n\nfunction base64Write (buf, string, offset, length) {\n  return blitBuffer(base64ToBytes(string), buf, offset, length)\n}\n\nfunction ucs2Write (buf, string, offset, length) {\n  return blitBuffer(utf16leToBytes(string, buf.length - offset), buf, offset, length)\n}\n\nBuffer.prototype.write = function write (string, offset, length, encoding) {\n  // Buffer#write(string)\n  if (offset === undefined) {\n    encoding = 'utf8'\n    length = this.length\n    offset = 0\n  // Buffer#write(string, encoding)\n  } else if (length === undefined && typeof offset === 'string') {\n    encoding = offset\n    length = this.length\n    offset = 0\n  // Buffer#write(string, offset[, length][, encoding])\n  } else if (isFinite(offset)) {\n    offset = offset | 0\n    if (isFinite(length)) {\n      length = length | 0\n      if (encoding === undefined) encoding = 'utf8'\n    } else {\n      encoding = length\n      length = undefined\n    }\n  // legacy write(string, encoding, offset, length) - remove in v0.13\n  } else {\n    throw new Error(\n      'Buffer.write(string, encoding, offset[, length]) is no longer supported'\n    )\n  }\n\n  var remaining = this.length - offset\n  if (length === undefined || length > remaining) length = remaining\n\n  if ((string.length > 0 && (length < 0 || offset < 0)) || offset > this.length) {\n    throw new RangeError('Attempt to write outside buffer bounds')\n  }\n\n  if (!encoding) encoding = 'utf8'\n\n  var loweredCase = false\n  for (;;) {\n    switch (encoding) {\n      case 'hex':\n        return hexWrite(this, string, offset, length)\n\n      case 'utf8':\n      case 'utf-8':\n        return utf8Write(this, string, offset, length)\n\n      case 'ascii':\n        return asciiWrite(this, string, offset, length)\n\n      case 'latin1':\n      case 'binary':\n        return latin1Write(this, string, offset, length)\n\n      case 'base64':\n        // Warning: maxLength not taken into account in base64Write\n        return base64Write(this, string, offset, length)\n\n      case 'ucs2':\n      case 'ucs-2':\n      case 'utf16le':\n      case 'utf-16le':\n        return ucs2Write(this, string, offset, length)\n\n      default:\n        if (loweredCase) throw new TypeError('Unknown encoding: ' + encoding)\n        encoding = ('' + encoding).toLowerCase()\n        loweredCase = true\n    }\n  }\n}\n\nBuffer.prototype.toJSON = function toJSON () {\n  return {\n    type: 'Buffer',\n    data: Array.prototype.slice.call(this._arr || this, 0)\n  }\n}\n\nfunction base64Slice (buf, start, end) {\n  if (start === 0 && end === buf.length) {\n    return base64.fromByteArray(buf)\n  } else {\n    return base64.fromByteArray(buf.slice(start, end))\n  }\n}\n\nfunction utf8Slice (buf, start, end) {\n  end = Math.min(buf.length, end)\n  var res = []\n\n  var i = start\n  while (i < end) {\n    var firstByte = buf[i]\n    var codePoint = null\n    var bytesPerSequence = (firstByte > 0xEF) ? 4\n      : (firstByte > 0xDF) ? 3\n      : (firstByte > 0xBF) ? 2\n      : 1\n\n    if (i + bytesPerSequence <= end) {\n      var secondByte, thirdByte, fourthByte, tempCodePoint\n\n      switch (bytesPerSequence) {\n        case 1:\n          if (firstByte < 0x80) {\n            codePoint = firstByte\n          }\n          break\n        case 2:\n          secondByte = buf[i + 1]\n          if ((secondByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0x1F) << 0x6 | (secondByte & 0x3F)\n            if (tempCodePoint > 0x7F) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 3:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0xC | (secondByte & 0x3F) << 0x6 | (thirdByte & 0x3F)\n            if (tempCodePoint > 0x7FF && (tempCodePoint < 0xD800 || tempCodePoint > 0xDFFF)) {\n              codePoint = tempCodePoint\n            }\n          }\n          break\n        case 4:\n          secondByte = buf[i + 1]\n          thirdByte = buf[i + 2]\n          fourthByte = buf[i + 3]\n          if ((secondByte & 0xC0) === 0x80 && (thirdByte & 0xC0) === 0x80 && (fourthByte & 0xC0) === 0x80) {\n            tempCodePoint = (firstByte & 0xF) << 0x12 | (secondByte & 0x3F) << 0xC | (thirdByte & 0x3F) << 0x6 | (fourthByte & 0x3F)\n            if (tempCodePoint > 0xFFFF && tempCodePoint < 0x110000) {\n              codePoint = tempCodePoint\n            }\n          }\n      }\n    }\n\n    if (codePoint === null) {\n      // we did not generate a valid codePoint so insert a\n      // replacement char (U+FFFD) and advance only 1 byte\n      codePoint = 0xFFFD\n      bytesPerSequence = 1\n    } else if (codePoint > 0xFFFF) {\n      // encode to utf16 (surrogate pair dance)\n      codePoint -= 0x10000\n      res.push(codePoint >>> 10 & 0x3FF | 0xD800)\n      codePoint = 0xDC00 | codePoint & 0x3FF\n    }\n\n    res.push(codePoint)\n    i += bytesPerSequence\n  }\n\n  return decodeCodePointsArray(res)\n}\n\n// Based on http://stackoverflow.com/a/22747272/680742, the browser with\n// the lowest limit is Chrome, with 0x10000 args.\n// We go 1 magnitude less, for safety\nvar MAX_ARGUMENTS_LENGTH = 0x1000\n\nfunction decodeCodePointsArray (codePoints) {\n  var len = codePoints.length\n  if (len <= MAX_ARGUMENTS_LENGTH) {\n    return String.fromCharCode.apply(String, codePoints) // avoid extra slice()\n  }\n\n  // Decode in chunks to avoid \"call stack size exceeded\".\n  var res = ''\n  var i = 0\n  while (i < len) {\n    res += String.fromCharCode.apply(\n      String,\n      codePoints.slice(i, i += MAX_ARGUMENTS_LENGTH)\n    )\n  }\n  return res\n}\n\nfunction asciiSlice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i] & 0x7F)\n  }\n  return ret\n}\n\nfunction latin1Slice (buf, start, end) {\n  var ret = ''\n  end = Math.min(buf.length, end)\n\n  for (var i = start; i < end; ++i) {\n    ret += String.fromCharCode(buf[i])\n  }\n  return ret\n}\n\nfunction hexSlice (buf, start, end) {\n  var len = buf.length\n\n  if (!start || start < 0) start = 0\n  if (!end || end < 0 || end > len) end = len\n\n  var out = ''\n  for (var i = start; i < end; ++i) {\n    out += toHex(buf[i])\n  }\n  return out\n}\n\nfunction utf16leSlice (buf, start, end) {\n  var bytes = buf.slice(start, end)\n  var res = ''\n  for (var i = 0; i < bytes.length; i += 2) {\n    res += String.fromCharCode(bytes[i] + bytes[i + 1] * 256)\n  }\n  return res\n}\n\nBuffer.prototype.slice = function slice (start, end) {\n  var len = this.length\n  start = ~~start\n  end = end === undefined ? len : ~~end\n\n  if (start < 0) {\n    start += len\n    if (start < 0) start = 0\n  } else if (start > len) {\n    start = len\n  }\n\n  if (end < 0) {\n    end += len\n    if (end < 0) end = 0\n  } else if (end > len) {\n    end = len\n  }\n\n  if (end < start) end = start\n\n  var newBuf\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    newBuf = this.subarray(start, end)\n    newBuf.__proto__ = Buffer.prototype\n  } else {\n    var sliceLen = end - start\n    newBuf = new Buffer(sliceLen, undefined)\n    for (var i = 0; i < sliceLen; ++i) {\n      newBuf[i] = this[i + start]\n    }\n  }\n\n  return newBuf\n}\n\n/*\n * Need to make sure that buffer isn't trying to write out of bounds.\n */\nfunction checkOffset (offset, ext, length) {\n  if ((offset % 1) !== 0 || offset < 0) throw new RangeError('offset is not uint')\n  if (offset + ext > length) throw new RangeError('Trying to access beyond buffer length')\n}\n\nBuffer.prototype.readUIntLE = function readUIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUIntBE = function readUIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    checkOffset(offset, byteLength, this.length)\n  }\n\n  var val = this[offset + --byteLength]\n  var mul = 1\n  while (byteLength > 0 && (mul *= 0x100)) {\n    val += this[offset + --byteLength] * mul\n  }\n\n  return val\n}\n\nBuffer.prototype.readUInt8 = function readUInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  return this[offset]\n}\n\nBuffer.prototype.readUInt16LE = function readUInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return this[offset] | (this[offset + 1] << 8)\n}\n\nBuffer.prototype.readUInt16BE = function readUInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  return (this[offset] << 8) | this[offset + 1]\n}\n\nBuffer.prototype.readUInt32LE = function readUInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return ((this[offset]) |\n      (this[offset + 1] << 8) |\n      (this[offset + 2] << 16)) +\n      (this[offset + 3] * 0x1000000)\n}\n\nBuffer.prototype.readUInt32BE = function readUInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] * 0x1000000) +\n    ((this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    this[offset + 3])\n}\n\nBuffer.prototype.readIntLE = function readIntLE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var val = this[offset]\n  var mul = 1\n  var i = 0\n  while (++i < byteLength && (mul *= 0x100)) {\n    val += this[offset + i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readIntBE = function readIntBE (offset, byteLength, noAssert) {\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) checkOffset(offset, byteLength, this.length)\n\n  var i = byteLength\n  var mul = 1\n  var val = this[offset + --i]\n  while (i > 0 && (mul *= 0x100)) {\n    val += this[offset + --i] * mul\n  }\n  mul *= 0x80\n\n  if (val >= mul) val -= Math.pow(2, 8 * byteLength)\n\n  return val\n}\n\nBuffer.prototype.readInt8 = function readInt8 (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 1, this.length)\n  if (!(this[offset] & 0x80)) return (this[offset])\n  return ((0xff - this[offset] + 1) * -1)\n}\n\nBuffer.prototype.readInt16LE = function readInt16LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset] | (this[offset + 1] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt16BE = function readInt16BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 2, this.length)\n  var val = this[offset + 1] | (this[offset] << 8)\n  return (val & 0x8000) ? val | 0xFFFF0000 : val\n}\n\nBuffer.prototype.readInt32LE = function readInt32LE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset]) |\n    (this[offset + 1] << 8) |\n    (this[offset + 2] << 16) |\n    (this[offset + 3] << 24)\n}\n\nBuffer.prototype.readInt32BE = function readInt32BE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n\n  return (this[offset] << 24) |\n    (this[offset + 1] << 16) |\n    (this[offset + 2] << 8) |\n    (this[offset + 3])\n}\n\nBuffer.prototype.readFloatLE = function readFloatLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, true, 23, 4)\n}\n\nBuffer.prototype.readFloatBE = function readFloatBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 4, this.length)\n  return ieee754.read(this, offset, false, 23, 4)\n}\n\nBuffer.prototype.readDoubleLE = function readDoubleLE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, true, 52, 8)\n}\n\nBuffer.prototype.readDoubleBE = function readDoubleBE (offset, noAssert) {\n  if (!noAssert) checkOffset(offset, 8, this.length)\n  return ieee754.read(this, offset, false, 52, 8)\n}\n\nfunction checkInt (buf, value, offset, ext, max, min) {\n  if (!Buffer.isBuffer(buf)) throw new TypeError('\"buffer\" argument must be a Buffer instance')\n  if (value > max || value < min) throw new RangeError('\"value\" argument is out of bounds')\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n}\n\nBuffer.prototype.writeUIntLE = function writeUIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var mul = 1\n  var i = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUIntBE = function writeUIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  byteLength = byteLength | 0\n  if (!noAssert) {\n    var maxBytes = Math.pow(2, 8 * byteLength) - 1\n    checkInt(this, value, offset, byteLength, maxBytes, 0)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    this[offset + i] = (value / mul) & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeUInt8 = function writeUInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0xff, 0)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nfunction objectWriteUInt16 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 2); i < j; ++i) {\n    buf[offset + i] = (value & (0xff << (8 * (littleEndian ? i : 1 - i)))) >>>\n      (littleEndian ? i : 1 - i) * 8\n  }\n}\n\nBuffer.prototype.writeUInt16LE = function writeUInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeUInt16BE = function writeUInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0xffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nfunction objectWriteUInt32 (buf, value, offset, littleEndian) {\n  if (value < 0) value = 0xffffffff + value + 1\n  for (var i = 0, j = Math.min(buf.length - offset, 4); i < j; ++i) {\n    buf[offset + i] = (value >>> (littleEndian ? i : 3 - i) * 8) & 0xff\n  }\n}\n\nBuffer.prototype.writeUInt32LE = function writeUInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset + 3] = (value >>> 24)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 1] = (value >>> 8)\n    this[offset] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeUInt32BE = function writeUInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0xffffffff, 0)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeIntLE = function writeIntLE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = 0\n  var mul = 1\n  var sub = 0\n  this[offset] = value & 0xFF\n  while (++i < byteLength && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i - 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeIntBE = function writeIntBE (value, offset, byteLength, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) {\n    var limit = Math.pow(2, 8 * byteLength - 1)\n\n    checkInt(this, value, offset, byteLength, limit - 1, -limit)\n  }\n\n  var i = byteLength - 1\n  var mul = 1\n  var sub = 0\n  this[offset + i] = value & 0xFF\n  while (--i >= 0 && (mul *= 0x100)) {\n    if (value < 0 && sub === 0 && this[offset + i + 1] !== 0) {\n      sub = 1\n    }\n    this[offset + i] = ((value / mul) >> 0) - sub & 0xFF\n  }\n\n  return offset + byteLength\n}\n\nBuffer.prototype.writeInt8 = function writeInt8 (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 1, 0x7f, -0x80)\n  if (!Buffer.TYPED_ARRAY_SUPPORT) value = Math.floor(value)\n  if (value < 0) value = 0xff + value + 1\n  this[offset] = (value & 0xff)\n  return offset + 1\n}\n\nBuffer.prototype.writeInt16LE = function writeInt16LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n  } else {\n    objectWriteUInt16(this, value, offset, true)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt16BE = function writeInt16BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 2, 0x7fff, -0x8000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 8)\n    this[offset + 1] = (value & 0xff)\n  } else {\n    objectWriteUInt16(this, value, offset, false)\n  }\n  return offset + 2\n}\n\nBuffer.prototype.writeInt32LE = function writeInt32LE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value & 0xff)\n    this[offset + 1] = (value >>> 8)\n    this[offset + 2] = (value >>> 16)\n    this[offset + 3] = (value >>> 24)\n  } else {\n    objectWriteUInt32(this, value, offset, true)\n  }\n  return offset + 4\n}\n\nBuffer.prototype.writeInt32BE = function writeInt32BE (value, offset, noAssert) {\n  value = +value\n  offset = offset | 0\n  if (!noAssert) checkInt(this, value, offset, 4, 0x7fffffff, -0x80000000)\n  if (value < 0) value = 0xffffffff + value + 1\n  if (Buffer.TYPED_ARRAY_SUPPORT) {\n    this[offset] = (value >>> 24)\n    this[offset + 1] = (value >>> 16)\n    this[offset + 2] = (value >>> 8)\n    this[offset + 3] = (value & 0xff)\n  } else {\n    objectWriteUInt32(this, value, offset, false)\n  }\n  return offset + 4\n}\n\nfunction checkIEEE754 (buf, value, offset, ext, max, min) {\n  if (offset + ext > buf.length) throw new RangeError('Index out of range')\n  if (offset < 0) throw new RangeError('Index out of range')\n}\n\nfunction writeFloat (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 4, 3.4028234663852886e+38, -3.4028234663852886e+38)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 23, 4)\n  return offset + 4\n}\n\nBuffer.prototype.writeFloatLE = function writeFloatLE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeFloatBE = function writeFloatBE (value, offset, noAssert) {\n  return writeFloat(this, value, offset, false, noAssert)\n}\n\nfunction writeDouble (buf, value, offset, littleEndian, noAssert) {\n  if (!noAssert) {\n    checkIEEE754(buf, value, offset, 8, 1.7976931348623157E+308, -1.7976931348623157E+308)\n  }\n  ieee754.write(buf, value, offset, littleEndian, 52, 8)\n  return offset + 8\n}\n\nBuffer.prototype.writeDoubleLE = function writeDoubleLE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, true, noAssert)\n}\n\nBuffer.prototype.writeDoubleBE = function writeDoubleBE (value, offset, noAssert) {\n  return writeDouble(this, value, offset, false, noAssert)\n}\n\n// copy(targetBuffer, targetStart=0, sourceStart=0, sourceEnd=buffer.length)\nBuffer.prototype.copy = function copy (target, targetStart, start, end) {\n  if (!start) start = 0\n  if (!end && end !== 0) end = this.length\n  if (targetStart >= target.length) targetStart = target.length\n  if (!targetStart) targetStart = 0\n  if (end > 0 && end < start) end = start\n\n  // Copy 0 bytes; we're done\n  if (end === start) return 0\n  if (target.length === 0 || this.length === 0) return 0\n\n  // Fatal error conditions\n  if (targetStart < 0) {\n    throw new RangeError('targetStart out of bounds')\n  }\n  if (start < 0 || start >= this.length) throw new RangeError('sourceStart out of bounds')\n  if (end < 0) throw new RangeError('sourceEnd out of bounds')\n\n  // Are we oob?\n  if (end > this.length) end = this.length\n  if (target.length - targetStart < end - start) {\n    end = target.length - targetStart + start\n  }\n\n  var len = end - start\n  var i\n\n  if (this === target && start < targetStart && targetStart < end) {\n    // descending copy from end\n    for (i = len - 1; i >= 0; --i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else if (len < 1000 || !Buffer.TYPED_ARRAY_SUPPORT) {\n    // ascending copy from start\n    for (i = 0; i < len; ++i) {\n      target[i + targetStart] = this[i + start]\n    }\n  } else {\n    Uint8Array.prototype.set.call(\n      target,\n      this.subarray(start, start + len),\n      targetStart\n    )\n  }\n\n  return len\n}\n\n// Usage:\n//    buffer.fill(number[, offset[, end]])\n//    buffer.fill(buffer[, offset[, end]])\n//    buffer.fill(string[, offset[, end]][, encoding])\nBuffer.prototype.fill = function fill (val, start, end, encoding) {\n  // Handle string cases:\n  if (typeof val === 'string') {\n    if (typeof start === 'string') {\n      encoding = start\n      start = 0\n      end = this.length\n    } else if (typeof end === 'string') {\n      encoding = end\n      end = this.length\n    }\n    if (val.length === 1) {\n      var code = val.charCodeAt(0)\n      if (code < 256) {\n        val = code\n      }\n    }\n    if (encoding !== undefined && typeof encoding !== 'string') {\n      throw new TypeError('encoding must be a string')\n    }\n    if (typeof encoding === 'string' && !Buffer.isEncoding(encoding)) {\n      throw new TypeError('Unknown encoding: ' + encoding)\n    }\n  } else if (typeof val === 'number') {\n    val = val & 255\n  }\n\n  // Invalid ranges are not set to a default, so can range check early.\n  if (start < 0 || this.length < start || this.length < end) {\n    throw new RangeError('Out of range index')\n  }\n\n  if (end <= start) {\n    return this\n  }\n\n  start = start >>> 0\n  end = end === undefined ? this.length : end >>> 0\n\n  if (!val) val = 0\n\n  var i\n  if (typeof val === 'number') {\n    for (i = start; i < end; ++i) {\n      this[i] = val\n    }\n  } else {\n    var bytes = Buffer.isBuffer(val)\n      ? val\n      : utf8ToBytes(new Buffer(val, encoding).toString())\n    var len = bytes.length\n    for (i = 0; i < end - start; ++i) {\n      this[i + start] = bytes[i % len]\n    }\n  }\n\n  return this\n}\n\n// HELPER FUNCTIONS\n// ================\n\nvar INVALID_BASE64_RE = /[^+\\/0-9A-Za-z-_]/g\n\nfunction base64clean (str) {\n  // Node strips out invalid characters like \\n and \\t from the string, base64-js does not\n  str = stringtrim(str).replace(INVALID_BASE64_RE, '')\n  // Node converts strings with length < 2 to ''\n  if (str.length < 2) return ''\n  // Node allows for non-padded base64 strings (missing trailing ===), base64-js does not\n  while (str.length % 4 !== 0) {\n    str = str + '='\n  }\n  return str\n}\n\nfunction stringtrim (str) {\n  if (str.trim) return str.trim()\n  return str.replace(/^\\s+|\\s+$/g, '')\n}\n\nfunction toHex (n) {\n  if (n < 16) return '0' + n.toString(16)\n  return n.toString(16)\n}\n\nfunction utf8ToBytes (string, units) {\n  units = units || Infinity\n  var codePoint\n  var length = string.length\n  var leadSurrogate = null\n  var bytes = []\n\n  for (var i = 0; i < length; ++i) {\n    codePoint = string.charCodeAt(i)\n\n    // is surrogate component\n    if (codePoint > 0xD7FF && codePoint < 0xE000) {\n      // last char was a lead\n      if (!leadSurrogate) {\n        // no lead yet\n        if (codePoint > 0xDBFF) {\n          // unexpected trail\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        } else if (i + 1 === length) {\n          // unpaired lead\n          if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n          continue\n        }\n\n        // valid lead\n        leadSurrogate = codePoint\n\n        continue\n      }\n\n      // 2 leads in a row\n      if (codePoint < 0xDC00) {\n        if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n        leadSurrogate = codePoint\n        continue\n      }\n\n      // valid surrogate pair\n      codePoint = (leadSurrogate - 0xD800 << 10 | codePoint - 0xDC00) + 0x10000\n    } else if (leadSurrogate) {\n      // valid bmp char, but last char was a lead\n      if ((units -= 3) > -1) bytes.push(0xEF, 0xBF, 0xBD)\n    }\n\n    leadSurrogate = null\n\n    // encode utf8\n    if (codePoint < 0x80) {\n      if ((units -= 1) < 0) break\n      bytes.push(codePoint)\n    } else if (codePoint < 0x800) {\n      if ((units -= 2) < 0) break\n      bytes.push(\n        codePoint >> 0x6 | 0xC0,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x10000) {\n      if ((units -= 3) < 0) break\n      bytes.push(\n        codePoint >> 0xC | 0xE0,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else if (codePoint < 0x110000) {\n      if ((units -= 4) < 0) break\n      bytes.push(\n        codePoint >> 0x12 | 0xF0,\n        codePoint >> 0xC & 0x3F | 0x80,\n        codePoint >> 0x6 & 0x3F | 0x80,\n        codePoint & 0x3F | 0x80\n      )\n    } else {\n      throw new Error('Invalid code point')\n    }\n  }\n\n  return bytes\n}\n\nfunction asciiToBytes (str) {\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    // Node's code seems to be doing this and not & 0x7F..\n    byteArray.push(str.charCodeAt(i) & 0xFF)\n  }\n  return byteArray\n}\n\nfunction utf16leToBytes (str, units) {\n  var c, hi, lo\n  var byteArray = []\n  for (var i = 0; i < str.length; ++i) {\n    if ((units -= 2) < 0) break\n\n    c = str.charCodeAt(i)\n    hi = c >> 8\n    lo = c % 256\n    byteArray.push(lo)\n    byteArray.push(hi)\n  }\n\n  return byteArray\n}\n\nfunction base64ToBytes (str) {\n  return base64.toByteArray(base64clean(str))\n}\n\nfunction blitBuffer (src, dst, offset, length) {\n  for (var i = 0; i < length; ++i) {\n    if ((i + offset >= dst.length) || (i >= src.length)) break\n    dst[i + offset] = src[i]\n  }\n  return i\n}\n\nfunction isnan (val) {\n  return val !== val // eslint-disable-line no-self-compare\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/buffer/index.js\n// module id = 16\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 17\n// module chunks = 0","'use strict'\n\nexports.byteLength = byteLength\nexports.toByteArray = toByteArray\nexports.fromByteArray = fromByteArray\n\nvar lookup = []\nvar revLookup = []\nvar Arr = typeof Uint8Array !== 'undefined' ? Uint8Array : Array\n\nvar code = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'\nfor (var i = 0, len = code.length; i < len; ++i) {\n  lookup[i] = code[i]\n  revLookup[code.charCodeAt(i)] = i\n}\n\nrevLookup['-'.charCodeAt(0)] = 62\nrevLookup['_'.charCodeAt(0)] = 63\n\nfunction placeHoldersCount (b64) {\n  var len = b64.length\n  if (len % 4 > 0) {\n    throw new Error('Invalid string. Length must be a multiple of 4')\n  }\n\n  // the number of equal signs (place holders)\n  // if there are two placeholders, than the two characters before it\n  // represent one byte\n  // if there is only one, then the three characters before it represent 2 bytes\n  // this is just a cheap hack to not do indexOf twice\n  return b64[len - 2] === '=' ? 2 : b64[len - 1] === '=' ? 1 : 0\n}\n\nfunction byteLength (b64) {\n  // base64 is 4/3 + up to two characters of the original data\n  return (b64.length * 3 / 4) - placeHoldersCount(b64)\n}\n\nfunction toByteArray (b64) {\n  var i, l, tmp, placeHolders, arr\n  var len = b64.length\n  placeHolders = placeHoldersCount(b64)\n\n  arr = new Arr((len * 3 / 4) - placeHolders)\n\n  // if there are placeholders, only get up to the last complete 4 chars\n  l = placeHolders > 0 ? len - 4 : len\n\n  var L = 0\n\n  for (i = 0; i < l; i += 4) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 18) | (revLookup[b64.charCodeAt(i + 1)] << 12) | (revLookup[b64.charCodeAt(i + 2)] << 6) | revLookup[b64.charCodeAt(i + 3)]\n    arr[L++] = (tmp >> 16) & 0xFF\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  if (placeHolders === 2) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 2) | (revLookup[b64.charCodeAt(i + 1)] >> 4)\n    arr[L++] = tmp & 0xFF\n  } else if (placeHolders === 1) {\n    tmp = (revLookup[b64.charCodeAt(i)] << 10) | (revLookup[b64.charCodeAt(i + 1)] << 4) | (revLookup[b64.charCodeAt(i + 2)] >> 2)\n    arr[L++] = (tmp >> 8) & 0xFF\n    arr[L++] = tmp & 0xFF\n  }\n\n  return arr\n}\n\nfunction tripletToBase64 (num) {\n  return lookup[num >> 18 & 0x3F] + lookup[num >> 12 & 0x3F] + lookup[num >> 6 & 0x3F] + lookup[num & 0x3F]\n}\n\nfunction encodeChunk (uint8, start, end) {\n  var tmp\n  var output = []\n  for (var i = start; i < end; i += 3) {\n    tmp = (uint8[i] << 16) + (uint8[i + 1] << 8) + (uint8[i + 2])\n    output.push(tripletToBase64(tmp))\n  }\n  return output.join('')\n}\n\nfunction fromByteArray (uint8) {\n  var tmp\n  var len = uint8.length\n  var extraBytes = len % 3 // if we have 1 byte left, pad 2 bytes\n  var output = ''\n  var parts = []\n  var maxChunkLength = 16383 // must be multiple of 3\n\n  // go through the array every three bytes, we'll deal with trailing stuff later\n  for (var i = 0, len2 = len - extraBytes; i < len2; i += maxChunkLength) {\n    parts.push(encodeChunk(uint8, i, (i + maxChunkLength) > len2 ? len2 : (i + maxChunkLength)))\n  }\n\n  // pad the end with zeros, but make sure to not forget the extra bytes\n  if (extraBytes === 1) {\n    tmp = uint8[len - 1]\n    output += lookup[tmp >> 2]\n    output += lookup[(tmp << 4) & 0x3F]\n    output += '=='\n  } else if (extraBytes === 2) {\n    tmp = (uint8[len - 2] << 8) + (uint8[len - 1])\n    output += lookup[tmp >> 10]\n    output += lookup[(tmp >> 4) & 0x3F]\n    output += lookup[(tmp << 2) & 0x3F]\n    output += '='\n  }\n\n  parts.push(output)\n\n  return parts.join('')\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/base64-js/index.js\n// module id = 18\n// module chunks = 0","exports.read = function (buffer, offset, isLE, mLen, nBytes) {\n  var e, m\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var nBits = -7\n  var i = isLE ? (nBytes - 1) : 0\n  var d = isLE ? -1 : 1\n  var s = buffer[offset + i]\n\n  i += d\n\n  e = s & ((1 << (-nBits)) - 1)\n  s >>= (-nBits)\n  nBits += eLen\n  for (; nBits > 0; e = e * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  m = e & ((1 << (-nBits)) - 1)\n  e >>= (-nBits)\n  nBits += mLen\n  for (; nBits > 0; m = m * 256 + buffer[offset + i], i += d, nBits -= 8) {}\n\n  if (e === 0) {\n    e = 1 - eBias\n  } else if (e === eMax) {\n    return m ? NaN : ((s ? -1 : 1) * Infinity)\n  } else {\n    m = m + Math.pow(2, mLen)\n    e = e - eBias\n  }\n  return (s ? -1 : 1) * m * Math.pow(2, e - mLen)\n}\n\nexports.write = function (buffer, value, offset, isLE, mLen, nBytes) {\n  var e, m, c\n  var eLen = nBytes * 8 - mLen - 1\n  var eMax = (1 << eLen) - 1\n  var eBias = eMax >> 1\n  var rt = (mLen === 23 ? Math.pow(2, -24) - Math.pow(2, -77) : 0)\n  var i = isLE ? 0 : (nBytes - 1)\n  var d = isLE ? 1 : -1\n  var s = value < 0 || (value === 0 && 1 / value < 0) ? 1 : 0\n\n  value = Math.abs(value)\n\n  if (isNaN(value) || value === Infinity) {\n    m = isNaN(value) ? 1 : 0\n    e = eMax\n  } else {\n    e = Math.floor(Math.log(value) / Math.LN2)\n    if (value * (c = Math.pow(2, -e)) < 1) {\n      e--\n      c *= 2\n    }\n    if (e + eBias >= 1) {\n      value += rt / c\n    } else {\n      value += rt * Math.pow(2, 1 - eBias)\n    }\n    if (value * c >= 2) {\n      e++\n      c /= 2\n    }\n\n    if (e + eBias >= eMax) {\n      m = 0\n      e = eMax\n    } else if (e + eBias >= 1) {\n      m = (value * c - 1) * Math.pow(2, mLen)\n      e = e + eBias\n    } else {\n      m = value * Math.pow(2, eBias - 1) * Math.pow(2, mLen)\n      e = 0\n    }\n  }\n\n  for (; mLen >= 8; buffer[offset + i] = m & 0xff, i += d, m /= 256, mLen -= 8) {}\n\n  e = (e << mLen) | m\n  eLen += mLen\n  for (; eLen > 0; buffer[offset + i] = e & 0xff, i += d, e /= 256, eLen -= 8) {}\n\n  buffer[offset + i - d] |= s * 128\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/ieee754/index.js\n// module id = 19\n// module chunks = 0","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/node_modules/isarray/index.js\n// module id = 20\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n/**\n * This is the php lexer. It will tokenize the string for helping the\n * parser to build the AST from its grammar.\n *\n * @public @constructor {Lexer}\n * @property {Integer} EOF\n * @property {Boolean} all_tokens defines if all tokens must be retrieved (used by token_get_all only)\n * @property {Boolean} comment_tokens extracts comments tokens\n * @property {Boolean} mode_eval enables the evald mode (ignore opening tags)\n * @property {Boolean} asp_tags disables by default asp tags mode\n * @property {Boolean} short_tags enables by default short tags mode\n * @property {Object} keywords List of php keyword\n * @property {Object} castKeywords List of php keywords for type casting\n */\nvar lexer = function(engine) {\n  this.engine = engine;\n  this.tok = this.engine.tokens.names;\n  this.EOF = 1;\n  this.debug = false;\n  this.all_tokens = true;\n  this.comment_tokens = false;\n  this.mode_eval = false;\n  this.asp_tags = false;\n  this.short_tags = true;\n  this.yyprevcol = 0;\n  this.keywords = {\n    \"__class__\": this.tok.T_CLASS_C,\n    \"__trait__\": this.tok.T_TRAIT_C,\n    \"__function__\": this.tok.T_FUNC_C,\n    \"__method__\": this.tok.T_METHOD_C,\n    \"__line__\": this.tok.T_LINE,\n    \"__file__\": this.tok.T_FILE,\n    \"__dir__\": this.tok.T_DIR,\n    \"__namespace__\": this.tok.T_NS_C,\n    'exit': this.tok.T_EXIT,\n    'die': this.tok.T_EXIT,\n    'function': this.tok.T_FUNCTION,\n    \"const\": this.tok.T_CONST,\n    \"return\": this.tok.T_RETURN,\n    \"try\": this.tok.T_TRY,\n    \"catch\": this.tok.T_CATCH,\n    \"finally\": this.tok.T_FINALLY,\n    \"throw\": this.tok.T_THROW,\n    \"if\": this.tok.T_IF,\n    \"elseif\": this.tok.T_ELSEIF,\n    \"endif\": this.tok.T_ENDIF,\n    \"else\": this.tok.T_ELSE,\n    \"while\": this.tok.T_WHILE,\n    \"endwhile\": this.tok.T_ENDWHILE,\n    \"do\": this.tok.T_DO,\n    \"for\": this.tok.T_FOR,\n    \"endfor\": this.tok.T_ENDFOR,\n    \"foreach\": this.tok.T_FOREACH,\n    \"endforeach\": this.tok.T_ENDFOREACH,\n    \"declare\": this.tok.T_DECLARE,\n    \"enddeclare\": this.tok.T_ENDDECLARE,\n    \"instanceof\": this.tok.T_INSTANCEOF,\n    \"as\": this.tok.T_AS,\n    \"switch\": this.tok.T_SWITCH,\n    \"endswitch\": this.tok.T_ENDSWITCH,\n    \"case\": this.tok.T_CASE,\n    \"default\": this.tok.T_DEFAULT,\n    \"break\": this.tok.T_BREAK,\n    \"continue\": this.tok.T_CONTINUE,\n    \"goto\": this.tok.T_GOTO,\n    \"echo\": this.tok.T_ECHO,\n    \"print\": this.tok.T_PRINT,\n    \"class\": this.tok.T_CLASS,\n    \"interface\": this.tok.T_INTERFACE,\n    \"trait\": this.tok.T_TRAIT,\n    \"extends\": this.tok.T_EXTENDS,\n    \"implements\": this.tok.T_IMPLEMENTS,\n    \"new\": this.tok.T_NEW,\n    \"clone\": this.tok.T_CLONE,\n    \"var\": this.tok.T_VAR,\n    \"eval\": this.tok.T_EVAL,\n    \"include\": this.tok.T_INCLUDE,\n    \"include_once\": this.tok.T_INCLUDE_ONCE,\n    \"require\": this.tok.T_REQUIRE,\n    \"require_once\": this.tok.T_REQUIRE_ONCE,\n    \"namespace\": this.tok.T_NAMESPACE,\n    \"use\": this.tok.T_USE,\n    \"insteadof\": this.tok.T_INSTEADOF,\n    \"global\": this.tok.T_GLOBAL,\n    \"isset\": this.tok.T_ISSET,\n    \"empty\": this.tok.T_EMPTY,\n    \"__halt_compiler\": this.tok.T_HALT_COMPILER,\n    \"static\": this.tok.T_STATIC,\n    \"abstract\": this.tok.T_ABSTRACT,\n    \"final\": this.tok.T_FINAL,\n    \"private\": this.tok.T_PRIVATE,\n    \"protected\": this.tok.T_PROTECTED,\n    \"public\": this.tok.T_PUBLIC,\n    \"unset\": this.tok.T_UNSET,\n    \"list\": this.tok.T_LIST,\n    \"array\": this.tok.T_ARRAY,\n    \"callable\": this.tok.T_CALLABLE,\n    \"or\": this.tok.T_LOGICAL_OR,\n    \"and\": this.tok.T_LOGICAL_AND,\n    \"xor\": this.tok.T_LOGICAL_XOR\n  };\n  this.castKeywords = {\n    'int': this.tok.T_INT_CAST,\n    'integer': this.tok.T_INT_CAST,\n    \"real\": this.tok.T_DOUBLE_CAST,\n    \"double\": this.tok.T_DOUBLE_CAST,\n    \"float\": this.tok.T_DOUBLE_CAST,\n    \"string\": this.tok.T_STRING_CAST,\n    \"binary\": this.tok.T_STRING_CAST,\n    \"array\": this.tok.T_ARRAY_CAST,\n    \"object\": this.tok.T_OBJECT_CAST,\n    \"bool\": this.tok.T_BOOL_CAST,\n    \"boolean\": this.tok.T_BOOL_CAST,\n    \"unset\": this.tok.T_UNSET_CAST\n  };\n};\n\n/**\n * Initialize the lexer with the specified input\n */\nlexer.prototype.setInput = function(input) {\n  this._input = input;\n  this.size = input.length;\n  this.yylineno = 1;\n  this.offset = 0;\n  this.yyprevcol = 0;\n  this.yytext = '';\n  this.yylloc = {\n    first_offset: 0,\n    first_line: 1,\n    first_column: 0,\n    prev_offset: 0,\n    prev_line: 1,\n    prev_column: 0,\n    last_line: 1,\n    last_column: 0\n  };\n  this.tokens = [];\n  this.conditionStack = [];\n  this.done = this.offset >= this.size;\n  if (!this.all_tokens && this.mode_eval) {\n    this.begin('ST_IN_SCRIPTING');\n  } else {\n    this.begin('INITIAL');\n  }\n  return this;\n};\n\n\n/**\n * consumes and returns one char from the input\n */\nlexer.prototype.input = function(size) {\n  var ch = this._input[this.offset];\n  if (!ch) return '';\n  this.yytext += ch;\n  this.offset ++;\n  if ( ch === '\\r' && this._input[this.offset] === '\\n' ) {\n    this.yytext += '\\n';\n    this.offset++;\n  }\n  if (ch === '\\n' || ch === '\\r') {\n    this.yylloc.last_line = ++this.yylineno;\n    this.yyprevcol = this.yylloc.last_column;\n    this.yylloc.last_column = 0;\n  } else {\n    this.yylloc.last_column++;\n  }\n  return ch;\n};\n\n/**\n * revert eating specified size\n */\nlexer.prototype.unput = function(size) {\n  if (size === 1) {\n    // 1 char unput (most cases)\n    this.offset --;\n    if (this._input[this.offset] === '\\n' && this._input[this.offset - 1] === '\\r') {\n      this.offset --;\n      size ++;\n    }\n    if (this._input[this.offset] === '\\r' || this._input[this.offset] === '\\n') {\n      this.yylloc.last_line --;\n      this.yylineno --;\n      this.yylloc.last_column = this.yyprevcol;\n    } else {\n      this.yylloc.last_column --;\n    }\n    this.yytext = this.yytext.substring(0, this.yytext.length - size);\n  } else if (size > 0) {\n    this.offset -= size;\n    if (size < this.yytext.length) {\n      this.yytext = this.yytext.substring(0, this.yytext.length - size);\n      // re-calculate position\n      this.yylloc.last_line = this.yylloc.first_line;\n      this.yylloc.last_column = this.yyprevcol = this.yylloc.first_column;\n      for(var i = 0; i < this.yytext.length; i++) {\n        var c = this.yytext[i];\n        if (c === '\\r') {\n          c = this.yytext[++i];\n          this.yyprevcol = this.yylloc.last_column;\n          this.yylloc.last_line ++;\n          this.yylloc.last_column = 0;\n          if (c !== '\\n') {\n            if (c === '\\r') {\n              this.yylloc.last_line ++;\n            } else {\n              this.yylloc.last_column ++;\n            }\n          }\n        } else if (c === '\\n') {\n          this.yyprevcol = this.yylloc.last_column;\n          this.yylloc.last_line ++;\n          this.yylloc.last_column = 0;\n        } else {\n          this.yylloc.last_column ++;\n        }\n      }\n      this.yylineno = this.yylloc.last_line;\n    } else {\n      // reset full text\n      this.yytext = \"\";\n      this.yylloc.last_line = this.yylineno = this.yylloc.first_line;\n      this.yylloc.last_column = this.yylloc.first_column;\n    }\n  }\n\n  return this;\n};\n\n// check if the text matches\nlexer.prototype.tryMatch = function(text) {\n  return text === this.ahead(text.length);\n};\n\n// check if the text matches\nlexer.prototype.tryMatchCaseless = function(text) {\n  return text === this.ahead(text.length).toLowerCase();\n};\n\n// look ahead\nlexer.prototype.ahead = function(size) {\n  var text = this._input.substring(this.offset, this.offset + size);\n  if (text[text.length - 1] === '\\r' && this._input[this.offset + size + 1] === '\\n') {\n    text += '\\n';\n  }\n  return text;\n};\n\n// consume the specified size\nlexer.prototype.consume = function(size) {\n  for(var i = 0; i < size; i++) {\n    var ch = this._input[this.offset];\n    if (!ch) break;\n    this.yytext += ch;\n    this.offset ++;\n    if ( ch === '\\r' && this._input[this.offset] === '\\n' ) {\n      this.yytext += '\\n';\n      this.offset++;\n      i++;\n    }\n    if (ch === '\\n' || ch === '\\r') {\n      this.yylloc.last_line = ++this.yylineno;\n      this.yyprevcol = this.yylloc.last_column;\n      this.yylloc.last_column = 0;\n    } else {\n      this.yylloc.last_column++;\n    }\n  }\n  return this;\n};\n\n/**\n * Gets the current state\n */\nlexer.prototype.getState = function() {\n  return {\n    yytext: this.yytext,\n    offset: this.offset,\n    yylineno: this.yylineno,\n    yyprevcol: this.yyprevcol,\n    yylloc: {\n      first_offset: this.yylloc.first_offset,\n      first_line: this.yylloc.first_line,\n      first_column: this.yylloc.first_column,\n      last_line: this.yylloc.last_line,\n      last_column: this.yylloc.last_column\n    }\n  };\n};\n\n/**\n * Sets the current lexer state\n */\nlexer.prototype.setState = function(state) {\n  this.yytext = state.yytext;\n  this.offset = state.offset;\n  this.yylineno = state.yylineno;\n  this.yyprevcol = state.yyprevcol;\n  this.yylloc = state.yylloc;\n  return this;\n};\n\n// prepend next token\nlexer.prototype.appendToken = function(value, ahead) {\n  this.tokens.push([value, ahead]);\n  return this;\n};\n\n// return next match that has a token\nlexer.prototype.lex = function() {\n  this.yylloc.prev_offset = this.offset;\n  this.yylloc.prev_line = this.yylloc.last_line;\n  this.yylloc.prev_column = this.yylloc.last_column;\n  var token = this.next() || this.lex();\n  if (!this.all_tokens) {\n    while(\n      token === this.tok.T_WHITESPACE      // ignore white space\n      || (\n        !this.comment_tokens && (\n          token === this.tok.T_COMMENT      // ignore single lines comments\n          || token === this.tok.T_DOC_COMMENT  // ignore doc comments\n        )\n      )\n      || (\n        // ignore open tags\n        token === this.tok.T_OPEN_TAG\n      )\n    ) {\n      token = this.next() || this.lex();\n    }\n    if (!this.mode_eval && token == this.tok.T_OPEN_TAG_WITH_ECHO) {\n      // open tag with echo statement\n      return this.tok.T_ECHO;\n    }\n  }\n  if (!this.yylloc.prev_offset) {\n    this.yylloc.prev_offset = this.yylloc.first_offset;\n    this.yylloc.prev_line = this.yylloc.first_line;\n    this.yylloc.prev_column = this.yylloc.first_column;\n  }\n  /*else if (this.yylloc.prev_offset === this.offset && this.offset !== this.size) {\n    throw new Error('Infinite loop @ ' + this.offset + ' / ' + this.size);\n  }*/\n  return token;\n};\n\n// activates a new lexer condition state (pushes the new lexer condition state onto the condition stack)\nlexer.prototype.begin = function(condition) {\n  this.conditionStack.push(condition);\n  this.curCondition = condition;\n  this.stateCb = this['match' + condition];\n  if (typeof this.stateCb !== 'function') {\n    throw new Error('Undefined condition state \"'+condition+'\"');\n  }\n  return this;\n};\n\n// pop the previously active lexer condition state off the condition stack\nlexer.prototype.popState = function() {\n  var n = this.conditionStack.length - 1;\n  var condition = (n > 0) ? this.conditionStack.pop() : this.conditionStack[0];\n  this.curCondition = this.conditionStack[this.conditionStack.length - 1];\n  this.stateCb = this['match' + this.curCondition];\n  if (typeof this.stateCb !== 'function') {\n    throw new Error('Undefined condition state \"'+this.curCondition+'\"');\n  }\n  return condition;\n};\n\n// return next match in input\nlexer.prototype.next = function () {\n  var token;\n  if (!this._input) {\n    this.done = true;\n  }\n  this.yylloc.first_offset = this.offset;\n  this.yylloc.first_line = this.yylloc.last_line;\n  this.yylloc.first_column = this.yylloc.last_column;\n  this.yytext = '';\n  if (this.done) {\n    this.yylloc.prev_offset = this.yylloc.first_offset;\n    this.yylloc.prev_line = this.yylloc.first_line;\n    this.yylloc.prev_column = this.yylloc.first_column;\n    return this.EOF;\n  }\n  if (this.tokens.length > 0) {\n    token = this.tokens.shift();\n    if (typeof token[1] === 'object') {\n      this.setState(token[1]);\n    } else {\n      this.consume(token[1]);\n    }\n    token = token[0];\n  } else {\n    token = this.stateCb.apply(this, []);\n  }\n  if (this.offset >= this.size && this.tokens.length === 0) {\n    this.done = true;\n  }\n  if (this.debug) {\n    var tName = token;\n    if (typeof tName === 'number') {\n      tName = this.engine.tokens.values[tName];\n    } else {\n      tName = '\"'+tName+'\"';\n    }\n    var e = new Error(\n      tName +\n      '\\tfrom ' + this.yylloc.first_line + ',' + this.yylloc.first_column +\n      '\\t - to ' + this.yylloc.last_line + ',' + this.yylloc.last_column +\n      '\\t\"'+this.yytext+'\"'\n    );\n    console.log(e.stack);\n  }\n  return token;\n};\n\n\n// extends the lexer with states\n[\n  require('./lexer/comments.js'),\n  require('./lexer/initial.js'),\n  require('./lexer/numbers.js'),\n  require('./lexer/property.js'),\n  require('./lexer/scripting.js'),\n  require('./lexer/strings.js'),\n  require('./lexer/tokens.js'),\n  require('./lexer/utils.js')\n].forEach(function (ext) {\n  for(var k in ext) {\n    lexer.prototype[k] = ext[k];\n  }\n});\n\nmodule.exports = lexer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer.js\n// module id = 21\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n\"use strict\";\n\nmodule.exports = {\n  /**\n   * Reads a single line comment\n   * @see\n   */\n  T_COMMENT: function() {\n    while(this.offset < this.size) {\n      var ch = this.input();\n      if (ch === '\\n' || ch === '\\r') {\n        return this.tok.T_COMMENT;\n      } else if (ch === '?' && !this.aspTagMode && this._input[this.offset] === '>') {\n        this.unput(1);\n        return this.tok.T_COMMENT;\n      } else if (ch === '%' && this.aspTagMode && this._input[this.offset] === '>') {\n        this.unput(1);\n        return this.tok.T_COMMENT;\n      }\n    }\n    return this.tok.T_COMMENT;\n  },\n  /**\n   * Behaviour : https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1927\n   */\n  T_DOC_COMMENT: function() {\n    var ch = this.input();\n    var token = this.tok.T_COMMENT;\n    if (ch === '*') { // started with '/*' , check is next is '*'\n      ch = this.input();\n      if (this.is_WHITESPACE()) { // check if next is WHITESPACE\n        token = this.tok.T_DOC_COMMENT;\n      }\n      if (ch === '/') {\n        return token;\n      } else {\n        this.unput(1); // reset\n      }\n    }\n    while(this.offset < this.size) {\n      ch = this.input();\n      if (ch === '*' && this._input[this.offset] === '/') {\n        this.input();\n        break;\n      }\n    }\n    return token;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/comments.js\n// module id = 22\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  nextINITIAL: function() {\n    if (\n      this.conditionStack.length > 1\n      && this.conditionStack[this.conditionStack.length - 1]  === 'INITIAL'\n    ) {\n      // Return to HEREDOC/ST_DOUBLE_QUOTES mode\n      this.popState();\n    } else {\n      this.begin(\"ST_IN_SCRIPTING\");\n    }\n    return this;\n  },\n  matchINITIAL: function() {\n    while(this.offset < this.size) {\n      var ch = this.input();\n      if (ch == '<') {\n        ch = this.ahead(1);\n        if (ch == '?') {\n          if (this.tryMatch('?=')) {\n            this.unput(1).appendToken(this.tok.T_OPEN_TAG_WITH_ECHO, 3).nextINITIAL();\n            break;\n          } else if (this.tryMatchCaseless('?php')) {\n            ch = this._input[this.offset + 4];\n            if (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n              this.unput(1).appendToken(this.tok.T_OPEN_TAG, 6).nextINITIAL();\n              break;\n            }\n          }\n          if (this.short_tags) {\n            this.unput(1).appendToken(this.tok.T_OPEN_TAG, 2).nextINITIAL();\n            break;\n          }\n        } else if(this.asp_tags && ch == '%') {\n          if (this.tryMatch('%=')) {\n            this.aspTagMode = true;\n            this.unput(1).appendToken(this.tok.T_OPEN_TAG_WITH_ECHO, 3).nextINITIAL();\n            break;\n          } else {\n            this.aspTagMode = true;\n            this.unput(1).appendToken(this.tok.T_OPEN_TAG, 2).nextINITIAL();\n            break;\n          }\n        }\n      }\n    }\n    if (this.yytext.length > 0) {\n      return this.tok.T_INLINE_HTML;\n    } else {\n      return false;\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/initial.js\n// module id = 23\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n\"use strict\";\n\n/* istanbul ignore else  */\nif (process.arch == 'x64') {\n  var SIZEOF_LONG = 8;\n  var MAX_LENGTH_OF_LONG = 19;\n  var long_min_digits = \"9223372036854775808\";\n} else {\n  var SIZEOF_LONG = 4;\n  var MAX_LENGTH_OF_LONG = 10;\n  var long_min_digits = \"2147483648\";\n}\n\nmodule.exports = {\n  consume_NUM: function() {\n    var ch = this.yytext[0];\n    var hasPoint = this.yytext[0] === '.';\n    if (ch === '0') {\n      ch = this.input();\n      // check if hexa\n      if (ch === 'x' || ch === 'X') {\n        this.input();\n        if (this.is_HEX()) {\n          return this.consume_HNUM();\n        } else {\n          this.unput(2);\n        }\n      } else if (ch === 'b' || ch === 'B') {\n        ch = this.input();\n        if (ch === '0' || ch === '1') {\n          return this.consume_BNUM();\n        } else {\n          this.unput(2);\n        }\n      } else if (!this.is_NUM()) {\n        this.unput(1);\n      }\n    }\n\n    while(this.offset < this.size) {\n      ch = this.input();\n      if (!this.is_NUM()) {\n        if (ch === '.' && !hasPoint) {\n          hasPoint = true;\n        } else if (ch === 'e' || ch === 'E') {\n          ch = this.input();\n          if (ch === '+' || ch === '-') {\n            ch = this.input();\n            if (this.is_NUM()) {\n              this.consume_LNUM();\n              return this.tok.T_DNUMBER;\n            } else {\n              if (ch) this.unput(3);\n              break;\n            }\n          } else if (this.is_NUM()) {\n            this.consume_LNUM();\n            return this.tok.T_DNUMBER;\n          } else {\n            if (ch) this.unput(2);\n            break;\n          }\n        } else {\n          this.unput(1);\n          break;\n        }\n      }\n    }\n    if (hasPoint) {\n      return this.tok.T_DNUMBER;\n    } else if (this.yytext.length < MAX_LENGTH_OF_LONG - 1) {\n      return this.tok.T_LNUMBER;\n    } else {\n      if (\n        this.yytext.length < MAX_LENGTH_OF_LONG || (\n          this.yytext.length == MAX_LENGTH_OF_LONG\n          && this.yytext < long_min_digits\n        )\n      ) {\n        return this.tok.T_LNUMBER;\n      }\n      return this.tok.T_DNUMBER;\n    }\n  },\n  // read hexa\n  consume_HNUM: function() {\n    while(this.offset < this.size) {\n      this.input();\n      if (!this.is_HEX()) {\n        this.unput(1);\n        break;\n      }\n    }\n    return this.tok.T_LNUMBER;\n  },\n  // read a generic number\n  consume_LNUM: function() {\n    while(this.offset < this.size) {\n      this.input();\n      if (!this.is_NUM()) {\n        this.unput(1);\n        break;\n      }\n    }\n    return this.tok.T_LNUMBER;\n  },\n  // read binary\n  consume_BNUM: function() {\n    var ch;\n    while(this.offset < this.size) {\n      ch = this.input();\n      if (ch !== '0' && ch !== '1') {\n        if (ch) this.unput(1);\n        break;\n      }\n    }\n    return this.tok.T_LNUMBER;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/numbers.js\n// module id = 24\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  matchST_LOOKING_FOR_PROPERTY: function() {\n    var ch = this.input();\n    if (ch === '-') {\n      ch = this.input();\n      if (ch === '>') {\n        // https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1296\n        return this.tok.T_OBJECT_OPERATOR;\n      }\n      if (ch) this.unput(1);\n    } else if (this.is_LABEL_START()) {\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1300\n      this.consume_LABEL();\n      this.popState();\n      return this.tok.T_STRING;\n    }\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_scanner.l#L1306\n    this.popState();\n    if (ch) this.unput(1);\n    return false;\n  },\n  matchST_LOOKING_FOR_VARNAME: function() {\n    var ch = this.input();\n    if (this.is_LABEL_START()) {\n      this.consume_LABEL();\n      ch = this.input();\n      this.popState();\n      if (ch === '[' || ch === '}') {\n        this.begin('ST_IN_SCRIPTING');\n        this.unput(1);\n        return this.tok.T_STRING_VARNAME;\n      } else {\n        this.unput(this.yytext.length);\n        return false;\n      }\n    } else {\n      if (ch) this.unput(1);\n      this.popState();\n      this.begin('ST_IN_SCRIPTING');\n      // console.log(this.yylineno, 'ST_LOOKING_FOR_VARNAME', this._input[this.offset - 1], this.conditionStack);\n      return false;\n    }\n  },\n  matchST_VAR_OFFSET: function() {\n    var ch = this.input();\n    if (this.is_NUM()) {\n      this.consume_NUM();\n      return this.tok.T_NUM_STRING;\n    } else if (ch === ']') {\n      this.popState();\n      return ']';\n    } else if (ch === '$') {\n      this.input();\n      if (this.is_LABEL_START()) {\n        this.consume_LABEL();\n        return this.tok.T_VARIABLE;\n      } else {\n        throw new Error('Unexpected terminal');\n      }\n    } else if (this.is_LABEL_START()) {\n      this.consume_LABEL();\n      return this.tok.T_STRING;\n    } else if (this.is_WHITESPACE() || ch === '\\\\' || ch === '\\'' || ch === '#') {\n      return this.tok.T_ENCAPSED_AND_WHITESPACE;\n    } else if (ch === '[' || ch === '{' || ch === '}' || ch === '\"' || ch === '`' || this.is_TOKEN()) {\n      return ch;\n    } else {\n      throw new Error('Unexpected terminal');\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/property.js\n// module id = 25\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  matchST_IN_SCRIPTING: function() {\n    var ch = this.input();\n    switch(ch) {\n      case ' ':\n      case '\\t':\n      case '\\n':\n      case '\\r':\n      case '\\r\\n':\n        return this.T_WHITESPACE();\n      case '#':\n        return this.T_COMMENT();\n      case '/':\n        if (this._input[this.offset] === '/') {\n          return this.T_COMMENT();\n        } else if (this._input[this.offset] === '*') {\n          this.input();\n          return this.T_DOC_COMMENT();\n        }\n        return this.consume_TOKEN();\n      case '\\'':\n        return this.T_CONSTANT_ENCAPSED_STRING();\n      case '\"':\n        return this.ST_DOUBLE_QUOTES();\n      case '`':\n        this.begin('ST_BACKQUOTE');\n        return '`';\n      case '?':\n        if (!this.aspTagMode && this.tryMatch('>')) {\n          this.input();\n          var nextCH = this._input[this.offset];\n          if (nextCH === '\\n' || nextCH === '\\r') this.input();\n          if (this.conditionStack.length > 1) {\n            this.begin('INITIAL');\n          }\n          return this.tok.T_CLOSE_TAG;\n        }\n        return this.consume_TOKEN();\n      case '%':\n        if (this.aspTagMode && this._input[this.offset] === '>') {\n          this.input(); // consume the '>'\n          ch = this._input[this.offset]; // read next\n          if (ch === '\\n' || ch === '\\r') {\n            this.input(); // consume the newline\n          }\n          this.aspTagMode = false;\n          if (this.conditionStack.length > 1) {\n            this.begin('INITIAL');\n          }\n          return this.tok.T_CLOSE_TAG;\n        }\n        return this.consume_TOKEN();\n      case '{':\n        this.begin('ST_IN_SCRIPTING');\n        return '{';\n      case '}':\n        if (this.conditionStack.length > 2) {\n          // Return to HEREDOC/ST_DOUBLE_QUOTES mode\n          this.popState();\n        }\n        return '}';\n      default:\n        if (ch === '.') {\n          ch = this.input();\n          if (this.is_NUM()) {\n            return this.consume_NUM();\n          } else {\n            if (ch) this.unput(1);\n          }\n        }\n        if (this.is_NUM()) {\n          return this.consume_NUM();\n        } else if (this.is_LABEL_START()) {\n          return this.consume_LABEL().T_STRING();\n        } else if(this.is_TOKEN()) {\n          return this.consume_TOKEN();\n        }\n    }\n    throw new Error(\n      'Bad terminal sequence \"' + ch + '\" at line ' + this.yylineno + ' (offset ' + this.offset + ')'\n    );\n  },\n\n  T_WHITESPACE: function() {\n    while(this.offset < this.size) {\n      var ch = this.input();\n      if (ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r') {\n        continue;\n      }\n      this.unput(1);\n      break;\n    }\n    return this.tok.T_WHITESPACE;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/scripting.js\n// module id = 26\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  T_CONSTANT_ENCAPSED_STRING: function() {\n    var ch;\n    while(this.offset < this.size) {\n      ch = this.input();\n      if (ch == '\\\\') {\n        this.input();\n      } else if (ch == '\\'') {\n        break;\n      }\n    }\n    return this.tok.T_CONSTANT_ENCAPSED_STRING;\n  },\n  // check if matching a HEREDOC state\n  is_HEREDOC: function() {\n    var revert = this.offset;\n    if (\n      this._input[this.offset - 1] === '<'\n      && this._input[this.offset] === '<'\n      && this._input[this.offset + 1] === '<'\n    ) {\n      this.offset += 3;\n\n      // optional tabs / spaces\n      if (this.is_TABSPACE()) {\n        while(this.offset < this.size) {\n          this.offset ++;\n          if (!this.is_TABSPACE()) {\n            break;\n          }\n        }\n      }\n\n      // optional quotes\n      var tChar = this._input[this.offset - 1];\n      if (tChar === '\\'' || tChar === '\"') {\n        this.offset ++;\n      } else {\n        tChar = null;\n      }\n\n      // required label\n      if (this.is_LABEL_START()) {\n        var yyoffset = this.offset - 1;\n        while(this.offset < this.size) {\n          this.offset++;\n          if (!this.is_LABEL()) {\n            break;\n          }\n        }\n        var yylabel = this._input.substring(yyoffset, this.offset - 1);\n        if (!tChar || tChar === this._input[this.offset - 1]) { // required ending quote\n          if (tChar) this.offset ++;\n          // require newline\n          if (this._input[this.offset - 1] === '\\r' || this._input[this.offset - 1] === '\\n') {\n            // go go go\n            this.heredoc_label = yylabel;\n            yyoffset = this.offset - revert;\n            this.offset = revert;\n            this.consume(yyoffset);\n            if (tChar === '\\'') {\n              this.begin('ST_NOWDOC');\n            } else {\n              this.begin('ST_HEREDOC');\n            }\n            return this.tok.T_START_HEREDOC;\n          }\n        }\n      }\n    }\n    this.offset = revert;\n    return false;\n  },\n  ST_DOUBLE_QUOTES: function() {\n    var ch;\n    while(this.offset < this.size) {\n      ch = this.input();\n      if (ch == '\\\\') {\n        this.input();\n      } else if (ch == '\"') {\n        break;\n      } else if (ch == '$') {\n        ch = this.input();\n        if ( ch == '{' || this.is_LABEL_START()) {\n          this.unput(2);\n          break;\n        }\n        this.unput(1);\n      } else if (ch == '{') {\n        ch = this.input();\n        if (ch == '$') {\n          this.unput(2);\n          break;\n        }\n        this.unput(1);\n      }\n    }\n    if (ch == '\"') {\n      return this.tok.T_CONSTANT_ENCAPSED_STRING;\n    } else {\n      var prefix = 1;\n      if (this.yytext[0] === 'b' || this.yytext[0] === 'B') {\n        prefix = 2;\n      }\n      if (this.yytext.length > 2) {\n        this.appendToken(\n          this.tok.T_ENCAPSED_AND_WHITESPACE,\n          this.yytext.length - prefix\n        );\n      }\n      this.unput(this.yytext.length - prefix);\n      this.begin(\"ST_DOUBLE_QUOTES\");\n      return this.yytext;\n    }\n  },\n\n  // check if its a DOC end sequence\n  isDOC_MATCH: function() {\n    // @fixme : check if out of text limits\n    if (this._input.substring(this.offset - 1, this.offset - 1 + this.heredoc_label.length) === this.heredoc_label) {\n      var ch = this._input[this.offset - 1 + this.heredoc_label.length];\n      if (ch === '\\n' || ch === '\\r' || ch === ';') {\n        return true;\n      }\n    }\n    return false;\n  },\n\n  matchST_NOWDOC: function() {\n    /** edge case : empty now doc **/\n    if (this.isDOC_MATCH()) {\n      // @fixme : never reached (may be caused by quotes)\n      this.consume(this.heredoc_label.length);\n      this.popState();\n      return this.tok.T_END_HEREDOC;\n    }\n    /** SCANNING CONTENTS **/\n    var ch = this._input[this.offset - 1];\n    while(this.offset < this.size) {\n      if (ch === '\\n' || ch === '\\r') {\n        ch = this.input();\n        if (this.isDOC_MATCH()) {\n          this.unput(1).popState();\n          this.appendToken(\n            this.tok.T_END_HEREDOC, this.heredoc_label.length\n          );\n          return this.tok.T_ENCAPSED_AND_WHITESPACE;\n        }\n      }  else {\n        ch = this.input();\n      }\n    }\n    // too bad ! reached end of document (will get a parse error)\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  },\n\n  matchST_HEREDOC: function() {\n    /** edge case : empty here doc **/\n    var ch = this.input();\n    if (this.isDOC_MATCH()) {\n      this.consume(this.heredoc_label.length - 1);\n      this.popState();\n      return this.tok.T_END_HEREDOC;\n    }\n    /** SCANNING CONTENTS **/\n    while(this.offset < this.size) {\n\n      if (ch === '\\\\') {\n        ch = this.input(); // ignore next\n        if (ch !== '\\n' && ch !== '\\r') {\n          ch = this.input();\n        }\n      }\n\n      if (ch === '\\n' || ch === '\\r') {\n        ch = this.input();\n        if (this.isDOC_MATCH()) {\n          this.unput(1).popState();\n          this.appendToken(\n            this.tok.T_END_HEREDOC, this.heredoc_label.length\n          );\n          return this.tok.T_ENCAPSED_AND_WHITESPACE;\n        }\n      } else if (ch === '$') {\n        ch = this.input();\n        if (ch === '{') {\n          // start of ${\n          this.begin('ST_LOOKING_FOR_VARNAME');\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_DOLLAR_OPEN_CURLY_BRACES, 2);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          }else {\n            return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n          }\n        } else if (this.is_LABEL_START()) {\n          // start of $var...\n          var yyoffset = this.offset;\n          var next = this.consume_VARIABLE();\n          if (this.yytext.length > this.offset - yyoffset + 2) {\n            this.appendToken(next, this.offset - yyoffset + 2);\n            this.unput(this.offset - yyoffset + 2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return next;\n          }\n          //console.log(this.yytext);\n        }\n      } else if (ch === '{') {\n        ch = this.input();\n        if (ch === '$') {\n          // start of {$...\n          this.begin('ST_IN_SCRIPTING');\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_CURLY_OPEN, 1);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            this.unput(1);\n            return this.tok.T_CURLY_OPEN;\n          }\n        }\n      } else {\n        ch = this.input();\n      }\n    }\n\n    // too bad ! reached end of document (will get a parse error)\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  },\n\n  consume_VARIABLE: function() {\n    this.consume_LABEL();\n    ch = this.input();\n    if (ch == '[') {\n      this.unput(1);\n      this.begin('ST_VAR_OFFSET');\n      return this.tok.T_VARIABLE;\n    } else if (ch === '-') {\n      if (this.input() === '>') {\n        this.input();\n        if (this.is_LABEL_START()) {\n          this.begin('ST_LOOKING_FOR_PROPERTY');\n        }\n        this.unput(3);\n        return this.tok.T_VARIABLE;\n      } else {\n        this.unput(2);\n      }\n     } else {\n      this.unput(1);\n     }\n     return this.tok.T_VARIABLE;\n  },\n  // HANDLES BACKQUOTES\n  matchST_BACKQUOTE: function() {\n\n    var ch = this.input();\n    if (ch === '$') {\n      ch = this.input();\n      if (ch === '{') {\n        this.begin('ST_LOOKING_FOR_VARNAME');\n        return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n      } else if (this.is_LABEL_START()) {\n        var tok = this.consume_VARIABLE();\n        return tok;\n      }\n    } else if (ch === '{') {\n      if (this._input[this.offset] === '$') {\n        this.begin('ST_IN_SCRIPTING');\n        return this.tok.T_CURLY_OPEN;\n      }\n    } else if (ch === '`') {\n      this.popState();\n      return '`';\n    }\n\n    // any char\n    while(this.offset < this.size) {\n      if (ch === '\\\\') {\n        this.input();\n      } else if (ch === '`') {\n        this.unput(1);\n        this.popState();\n        this.appendToken('`', 1);\n        break;\n      } else if (ch === '$') {\n        ch = this.input();\n        if (ch === '{') {\n          this.begin('ST_LOOKING_FOR_VARNAME');\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_DOLLAR_OPEN_CURLY_BRACES, 2);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          }else {\n            return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n          }\n        } else if (this.is_LABEL_START()) {\n          // start of $var...\n          var yyoffset = this.offset;\n          var next = this.consume_VARIABLE();\n          if (this.yytext.length > this.offset - yyoffset + 2) {\n            this.appendToken(next, this.offset - yyoffset + 2);\n            this.unput(this.offset - yyoffset + 2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return next;\n          }\n        }\n        this.unput(1);\n      } else if (ch === '{') {\n        ch = this.input();\n        if (ch === '$') {\n          // start of {$...\n          this.begin('ST_IN_SCRIPTING');\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_CURLY_OPEN, 1);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            this.unput(1);\n            return this.tok.T_CURLY_OPEN;\n          }\n        }\n        this.unput(1);\n      }\n      ch = this.input();\n    }\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n\n  },\n\n  matchST_DOUBLE_QUOTES: function() {\n\n    var ch = this.input();\n    if (ch === '$') {\n      ch = this.input();\n      if (ch === '{') {\n        this.begin('ST_LOOKING_FOR_VARNAME');\n        return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n      } else if (this.is_LABEL_START()) {\n        var tok = this.consume_VARIABLE();\n        return tok;\n      }\n    } else if (ch === '{') {\n      if (this._input[this.offset] === '$') {\n        this.begin('ST_IN_SCRIPTING');\n        return this.tok.T_CURLY_OPEN;\n      }\n    } else if (ch === '\"') {\n      this.popState();\n      return '\"';\n    }\n\n    // any char\n    while(this.offset < this.size) {\n      if (ch === '\\\\') {\n        this.input();\n      } else if (ch === '\"') {\n        this.unput(1);\n        this.popState();\n        this.appendToken('\"', 1);\n        break;\n      } else if (ch === '$') {\n        ch = this.input();\n        if (ch === '{') {\n          this.begin('ST_LOOKING_FOR_VARNAME');\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_DOLLAR_OPEN_CURLY_BRACES, 2);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          }else {\n            return this.tok.T_DOLLAR_OPEN_CURLY_BRACES;\n          }\n        } else if (this.is_LABEL_START()) {\n          // start of $var...\n          var yyoffset = this.offset;\n          var next = this.consume_VARIABLE();\n          if (this.yytext.length > this.offset - yyoffset + 2) {\n            this.appendToken(next, this.offset - yyoffset + 2);\n            this.unput(this.offset - yyoffset + 2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            return next;\n          }\n        }\n        this.unput(1);\n      } else if (ch === '{') {\n        ch = this.input();\n        if (ch === '$') {\n          // start of {$...\n          this.begin('ST_IN_SCRIPTING');\n          if (this.yytext.length > 2) {\n            this.appendToken(this.tok.T_CURLY_OPEN, 1);\n            this.unput(2);\n            return this.tok.T_ENCAPSED_AND_WHITESPACE;\n          } else {\n            // @fixme : yytext = '\"{$' (this.yytext.length > 3)\n            this.unput(1);\n            return this.tok.T_CURLY_OPEN;\n          }\n        }\n        if (ch) this.unput(1);\n      }\n      ch = this.input();\n    }\n    return this.tok.T_ENCAPSED_AND_WHITESPACE;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/strings.js\n// module id = 27\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  T_STRING: function() {\n    var token = this.yytext.toLowerCase();\n    var id = this.keywords[token];\n    if (typeof id !== 'number') {\n      if (token === 'yield') {\n        if (this.tryMatch(' from')) {\n          this.consume(5);\n          id = this.tok.T_YIELD_FROM;\n        } else {\n          id = this.tok.T_YIELD;\n        }\n      } else {\n        id = this.tok.T_STRING;\n        if (token === 'b' || token === 'B') {\n          var ch = this.input(1);\n          if (ch === '\"') {\n            return this.ST_DOUBLE_QUOTES();\n          } else if (ch === '\\'') {\n            return this.T_CONSTANT_ENCAPSED_STRING();\n          } else if (ch) {\n            this.unput(1);\n          }\n        }\n      }\n    }\n    return id;\n  },\n  // reads a custom token\n  consume_TOKEN: function() {\n    var ch = this._input[this.offset - 1];\n    var fn = this.tokenTerminals[ch];\n    if (fn) {\n      return fn.apply(this, []);\n    } else {\n      return this.yytext;\n    }\n  },\n  // list of special char tokens\n  tokenTerminals: {\n    '$': function() {\n      this.offset++;\n      if (this.is_LABEL_START()) {\n        this.offset--;\n        this.consume_LABEL();\n        return this.tok.T_VARIABLE;\n      } else {\n        this.offset--;\n        return '$';\n      }\n    },\n    '-': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '>') {\n        this.begin('ST_LOOKING_FOR_PROPERTY').input();\n        return this.tok.T_OBJECT_OPERATOR;\n      } else if (nchar === '-') {\n        this.input();\n        return this.tok.T_DEC;\n      } else if (nchar === '=') {\n        this.input();\n        return this.tok.T_MINUS_EQUAL;\n      }\n      return '-';\n    },\n    '\\\\': function() {\n      return this.tok.T_NS_SEPARATOR;\n    },\n    '/': function() {\n      if (this._input[this.offset] === '=') {\n        this.input();\n        return this.tok.T_DIV_EQUAL;\n      }\n      return '/';\n    },\n    ':': function() {\n      if (this._input[this.offset] === ':') {\n        this.input();\n        return this.tok.T_DOUBLE_COLON;\n      } else {\n        return ':';\n      }\n    },\n    '(': function() {\n      var initial = this.offset;\n      this.input();\n      if (this.is_TABSPACE()) {\n        this.consume_TABSPACE().input();\n      }\n      if (this.is_LABEL_START()) {\n        var yylen = this.yytext.length;\n        this.consume_LABEL();\n        var castToken = this.yytext.substring(yylen - 1).toLowerCase();\n        var castId = this.castKeywords[castToken];\n        if (typeof castId === 'number') {\n          this.input();\n          if (this.is_TABSPACE()) {\n            this.consume_TABSPACE().input();\n          }\n          if (this._input[this.offset - 1] === ')') {\n            return castId;\n          }\n        }\n      }\n      // revert the check\n      this.unput(this.offset - initial);\n      return '(';\n    },\n    '=': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '>') {\n        this.input();\n        return this.tok.T_DOUBLE_ARROW;\n      } else if (nchar === '=') {\n        if (this._input[this.offset + 1] === '=') {\n          this.consume(2);\n          return this.tok.T_IS_IDENTICAL;\n        } else {\n          this.input();\n          return this.tok.T_IS_EQUAL;\n        }\n      }\n      return '=';\n    },\n    '+': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '+') {\n        this.input();\n        return this.tok.T_INC;\n      } else if (nchar === '=') {\n        this.input();\n        return this.tok.T_PLUS_EQUAL;\n      }\n      return '+';\n    },\n    '!': function() {\n      if (this._input[this.offset] === '=') {\n        if (this._input[this.offset + 1] === '=') {\n          this.consume(2);\n          return this.tok.T_IS_NOT_IDENTICAL;\n        } else {\n          this.input();\n          return this.tok.T_IS_NOT_EQUAL;\n        }\n      }\n      return '!';\n    },\n    '?': function() {\n      if (this._input[this.offset] === '?') {\n        this.input();\n        return this.tok.T_COALESCE;\n      }\n      return '?';\n    },\n    '<': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '<') {\n        nchar = this._input[this.offset + 1];\n        if (nchar === '=') {\n          this.consume(2);\n          return this.tok.T_SL_EQUAL;\n        } else if (nchar === '<') {\n          if (this.is_HEREDOC()) {\n            return this.tok.T_START_HEREDOC;\n          }\n        }\n        this.input();\n        return this.tok.T_SL;\n      } else if (nchar === '=') {\n        this.input();\n        if (this._input[this.offset] === '>') {\n          this.input();\n          return this.tok.T_SPACESHIP;\n        } else {\n          return this.tok.T_IS_SMALLER_OR_EQUAL;\n        }\n      } else if (nchar === '>') {\n        this.input();\n        return this.tok.T_IS_NOT_EQUAL;\n      }\n      return '<';\n    },\n    '>': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '=') {\n        this.input();\n        return this.tok.T_IS_GREATER_OR_EQUAL;\n      } else if (nchar === '>') {\n        nchar = this._input[this.offset + 1];\n        if (nchar === '=') {\n          this.consume(2);\n          return this.tok.T_SR_EQUAL;\n        } else {\n          this.input();\n          return this.tok.T_SR;\n        }\n      }\n      return '>';\n    },\n    '*': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '=') {\n        this.input();\n        return this.tok.T_MUL_EQUAL;\n      } else if(nchar === '*') {\n        this.input();\n        if (this._input[this.offset] === '=') {\n          this.input();\n          return this.tok.T_POW_EQUAL;\n        } else {\n          return this.tok.T_POW;\n        }\n      }\n      return '*';\n    },\n    '.': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '=') {\n        this.input();\n        return this.tok.T_CONCAT_EQUAL;\n      } else if (nchar === '.' && this._input[this.offset + 1] === '.') {\n        this.consume(2);\n        return this.tok.T_ELLIPSIS;\n      }\n      return '.';\n    },\n    '%': function() {\n      if (this._input[this.offset] === '=') {\n        this.input();\n        return this.tok.T_MOD_EQUAL;\n      }\n      return '%';\n    },\n    '&': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '=') {\n        this.input();\n        return this.tok.T_AND_EQUAL;\n      } else if (nchar === '&') {\n        this.input();\n        return this.tok.T_BOOLEAN_AND;\n      }\n      return '&';\n    },\n    '|': function() {\n      var nchar = this._input[this.offset];\n      if (nchar === '=') {\n        this.input();\n        return this.tok.T_OR_EQUAL;\n      } else if (nchar === '|') {\n        this.input();\n        return this.tok.T_BOOLEAN_OR;\n      }\n      return '|';\n    },\n    '^': function() {\n      if (this._input[this.offset] === '=') {\n        this.input();\n        return this.tok.T_XOR_EQUAL;\n      }\n      return '^';\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/tokens.js\n// module id = 28\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n var tokens = ';:,.\\\\[]()|^&+-/*=%!~$<>?@';\n\nmodule.exports = {\n\n  // check if the char can be a numeric\n  is_NUM: function() {\n    var ch = this._input.charCodeAt(this.offset - 1);\n    return ch > 47 && ch < 58;\n  },\n\n  // check if current char can be a label\n  is_LABEL: function() {\n    var ch = this._input.charCodeAt(this.offset - 1);\n    return (ch > 96 && ch < 123)\n      || (ch > 64 && ch < 91)\n      || ch === 95\n      || (ch > 47 && ch < 58)\n      || ch > 126\n    ;\n  },\n\n  // check if current char can be a label\n  is_LABEL_START: function() {\n    var ch = this._input.charCodeAt(this.offset - 1);\n    return (ch > 96 && ch < 123)\n      || (ch > 64 && ch < 91)\n      || ch === 95\n      || (ch > 126)\n    ;\n  },\n\n\n  // reads each char of the label\n  consume_LABEL: function() {\n    while(this.offset < this.size) {\n      this.input();\n      if (!this.is_LABEL()) {\n        this.unput(1);\n        break;\n      }\n    }\n    return this;\n  },\n\n  // check if current char is a token char\n  is_TOKEN: function() {\n    var ch = this._input[this.offset - 1];\n    return tokens.indexOf(ch) !== -1;\n  },\n  // check if current char is a whitespace\n  is_WHITESPACE: function() {\n    var ch = this._input[this.offset - 1];\n    return ch === ' ' || ch === '\\t' || ch === '\\n' || ch === '\\r';\n  },\n  // check if current char is a whitespace (without newlines)\n  is_TABSPACE: function() {\n    var ch = this._input[this.offset - 1];\n    return ch === ' ' || ch === '\\t';\n  },\n  // consume all whitespaces (excluding newlines)\n  consume_TABSPACE: function() {\n    while(this.offset < this.size) {\n      this.input();\n      if (!this.is_TABSPACE()) {\n        this.unput(1);\n        break;\n      }\n    }\n    return this;\n  },\n  // check if current char can be a hexadecimal number\n  is_HEX: function() {\n    var ch = this._input.charCodeAt(this.offset - 1);\n    return (ch > 47 && ch < 58) || (ch > 64 && ch < 71) || (ch > 96 && ch < 103);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/lexer/utils.js\n// module id = 29\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n/**\n * @private check if argument is a number\n */\nfunction isNumber(n) {\n  return n != '.' && n != ',' && !isNaN(parseFloat(n)) && isFinite(n);\n}\n\n\n/**\n * The PHP Parser class that build the AST tree from the lexer\n * @constructor {Parser}\n * @property {Lexer} lexer - current lexer instance\n * @property {AST} ast - the AST factory instance\n * @property {Integer|String} token - current token\n * @property {Boolean} extractDoc - should extract documentation as AST node\n * @property {Boolean} suppressErrors - should ignore parsing errors and continue\n * @property {Boolean} debug - should output debug informations\n */\nvar parser = function(lexer, ast) {\n  this.lexer = lexer;\n  this.ast = ast;\n  this.tok = lexer.tok;\n  this.EOF = lexer.EOF;\n  this.token = null;\n  this.prev = null;\n  this.debug = false;\n  this.extractDoc = false;\n  this.suppressErrors = false;\n  this.entries = {\n    'IDENTIFIER': [\n      this.tok.T_CLASS_C,\n      this.tok.T_DIR,\n      this.tok.T_FILE,\n      this.tok.T_FUNC_C,\n      this.tok.T_LINE,\n      this.tok.T_METHOD_C,\n      this.tok.T_NS_C,\n      this.tok.T_TRAIT,\n      this.tok.T_ABSTRACT,\n      this.tok.T_LOGICAL_AND,\n      this.tok.T_ARRAY,\n      this.tok.T_AS,\n      this.tok.T_BREAK,\n      this.tok.T_CALLABLE,\n      this.tok.T_CASE,\n      this.tok.T_CATCH,\n      this.tok.T_CLASS,\n      this.tok.T_CLONE,\n      this.tok.T_CONST,\n      this.tok.T_CONTINUE,\n      this.tok.T_DECLARE,\n      this.tok.T_DEFAULT,\n      this.tok.T_DO,\n      this.tok.T_ECHO,\n      this.tok.T_ELSE,\n      this.tok.T_ELSEIF,\n      this.tok.T_EMPTY,\n      this.tok.T_ENDDECLARE,\n      this.tok.T_ENDFOR,\n      this.tok.T_ENDFOREACH,\n      this.tok.T_ENDIF,\n      this.tok.T_ENDSWITCH,\n      this.tok.T_ENDWHILE,\n      this.tok.T_EVAL,\n      this.tok.T_EXIT,\n      this.tok.T_EXTENDS,\n      this.tok.T_FINAL,\n      this.tok.T_FINALLY,\n      this.tok.T_FOR,\n      this.tok.T_FOREACH,\n      this.tok.T_FUNCTION,\n      this.tok.T_GLOBAL,\n      this.tok.T_GOTO,\n      this.tok.T_IF,\n      this.tok.T_IMPLEMENTS,\n      this.tok.T_INCLUDE,\n      this.tok.T_INCLUDE_ONCE,\n      this.tok.T_INSTANCEOF,\n      this.tok.T_INSTEADOF,\n      this.tok.T_INTERFACE,\n      this.tok.T_ISSET,\n      this.tok.T_LIST,\n      this.tok.T_NAMESPACE,\n      this.tok.T_NEW,\n      this.tok.T_LOGICAL_OR,\n      this.tok.T_PRINT,\n      this.tok.T_PRIVATE,\n      this.tok.T_PROTECTED,\n      this.tok.T_PUBLIC,\n      this.tok.T_REQUIRE,\n      this.tok.T_REQUIRE_ONCE,\n      this.tok.T_RETURN,\n      this.tok.T_STATIC,\n      this.tok.T_SWITCH,\n      this.tok.T_THROW,\n      this.tok.T_TRAIT,\n      this.tok.T_TRY,\n      this.tok.T_UNSET,\n      this.tok.T_USE,\n      this.tok.T_VAR,\n      this.tok.T_WHILE,\n      this.tok.T_LOGICAL_XOR,\n      this.tok.T_YIELD\n    ],\n    'VARIABLE': [\n      this.tok.T_VARIABLE,\n      '$', '&',\n      this.tok.T_NS_SEPARATOR,\n      this.tok.T_STRING,\n      this.tok.T_NAMESPACE,\n      this.tok.T_STATIC\n    ],\n    'SCALAR': [\n      this.tok.T_CONSTANT_ENCAPSED_STRING,\n      this.tok.T_START_HEREDOC,\n      this.tok.T_LNUMBER,\n      this.tok.T_DNUMBER,\n      this.tok.T_ARRAY,'[',\n      this.tok.T_CLASS_C,\n      this.tok.T_TRAIT_C,\n      this.tok.T_FUNC_C,\n      this.tok.T_METHOD_C,\n      this.tok.T_LINE,\n      this.tok.T_FILE,\n      this.tok.T_DIR,\n      this.tok.T_NS_C,\n      '\"',\n      'b\"',\n      'B\"',\n      '-',\n      this.tok.T_NS_SEPARATOR\n    ],\n    'T_MAGIC_CONST': [\n        this.tok.T_CLASS_C,\n        this.tok.T_TRAIT_C,\n        this.tok.T_FUNC_C,\n        this.tok.T_METHOD_C,\n        this.tok.T_LINE,\n        this.tok.T_FILE,\n        this.tok.T_DIR,\n        this.tok.T_NS_C\n    ],\n    'T_MEMBER_FLAGS': [\n      this.tok.T_PUBLIC,\n      this.tok.T_PRIVATE,\n      this.tok.T_PROTECTED,\n      this.tok.T_STATIC,\n      this.tok.T_ABSTRACT,\n      this.tok.T_FINAL\n    ],\n    'EOS': [\n      ';',\n      this.tok.T_CLOSE_TAG,\n      this.EOF,\n      this.tok.T_INLINE_HTML\n    ],\n    'EXPR': [\n      '@','-','+','!','~','(','`',\n      this.tok.T_LIST,\n      this.tok.T_CLONE,\n      this.tok.T_INC,\n      this.tok.T_DEC,\n      this.tok.T_NEW,\n      this.tok.T_ISSET,\n      this.tok.T_EMPTY,\n      this.tok.T_INCLUDE,\n      this.tok.T_INCLUDE_ONCE,\n      this.tok.T_REQUIRE,\n      this.tok.T_REQUIRE_ONCE,\n      this.tok.T_EVAL,\n      this.tok.T_INT_CAST,\n      this.tok.T_DOUBLE_CAST,\n      this.tok.T_STRING_CAST,\n      this.tok.T_ARRAY_CAST,\n      this.tok.T_OBJECT_CAST,\n      this.tok.T_BOOL_CAST,\n      this.tok.T_UNSET_CAST,\n      this.tok.T_EXIT,\n      this.tok.T_PRINT,\n      this.tok.T_YIELD,\n      this.tok.T_STATIC,\n      this.tok.T_FUNCTION,\n      // using VARIABLES :\n      this.tok.T_VARIABLE,\n      '$',\n      this.tok.T_NS_SEPARATOR,\n      this.tok.T_STRING,\n      // using SCALAR :\n      this.tok.T_STRING, // @see variable.js line 45 > conflict with variable = shift/reduce :)\n      this.tok.T_CONSTANT_ENCAPSED_STRING,\n      this.tok.T_START_HEREDOC,\n      this.tok.T_LNUMBER,\n      this.tok.T_DNUMBER,\n      this.tok.T_ARRAY,'[',\n      this.tok.T_CLASS_C,\n      this.tok.T_TRAIT_C,\n      this.tok.T_FUNC_C,\n      this.tok.T_METHOD_C,\n      this.tok.T_LINE,\n      this.tok.T_FILE,\n      this.tok.T_DIR,\n      this.tok.T_NS_C\n    ]\n  };\n};\n\n/**\n * helper : gets a token name\n */\nparser.prototype.getTokenName = function(token) {\n  if (!isNumber(token)) {\n    return \"'\" + token + \"'\";\n  } else {\n    if (token == this.EOF) return 'the end of file (EOF)';\n    return this.lexer.engine.tokens.values[token];\n  }\n};\n\n/**\n * main entry point : converts a source code to AST\n */\nparser.prototype.parse = function(code, filename) {\n  this._errors = [];\n  this.filename = filename || 'eval';\n  this.currentNamespace = [''];\n  this.lexer.setInput(code);\n  this.lexer.comment_tokens = this.extractDoc;\n  this.length = this.lexer._input.length;\n  this.innerList = false;\n  var program = this.ast.prepare('program', this);\n  var childs = [];\n  this.nextWithComments();\n  while(this.token != this.EOF) {\n    var node = this.read_start();\n    if (node !== null && node !== undefined) {\n      if (Array.isArray(node)) {\n        childs = childs.concat(node);\n      } else {\n        childs.push(node);\n      }\n    }\n  }\n  return program(childs, this._errors);\n};\n\n/**\n * Raise an error\n */\nparser.prototype.raiseError = function(message, msgExpect, expect, token) {\n  message += ' on line ' + this.lexer.yylloc.first_line;\n  if (!this.suppressErrors) {\n    var err = new SyntaxError(\n      message, this.filename, this.lexer.yylloc.first_line\n    );\n    err.lineNumber = this.lexer.yylloc.first_line;\n    err.fileName = this.filename;\n    err.columnNumber = this.lexer.yylloc.first_column\n    throw err;\n  }\n  // Error node :\n  var node = this.ast.prepare('error', this)(\n    message, token, this.lexer.yylloc.first_line, expect\n  );\n  this._errors.push(node);\n  return node;\n};\n\n/**\n * handling errors\n */\nparser.prototype.error = function(expect) {\n  var msg = 'Parse Error : syntax error';\n  token = this.getTokenName(this.token);\n  if (this.token !== this.EOF) {\n    if (isNumber(this.token)) {\n      var symbol = this.text();\n      if (symbol.length > 10) {\n        symbol = symbol.substring(0, 7) + '...';\n      }\n      token = '\\''+symbol+'\\' ('+token+')';\n    }\n    msg += ', unexpected ' + token;\n  }\n  var msgExpect = '';\n  if (expect && !Array.isArray(expect)) {\n    if (isNumber(expect) || expect.length === 1) {\n      msgExpect = ', expecting ' + this.getTokenName(expect);\n    }\n    msg += msgExpect;\n  }\n  this.token !== this.EOF\n  return this.raiseError(\n    msg,\n    msgExpect,\n    expect,\n    token\n  );\n};\n\n/**\n * Creates a new AST node\n */\nparser.prototype.node = function(name) {\n  return this.ast.prepare(name, this);\n};\n\n/**\n * expects an end of statement or end of file\n * @return {boolean}\n */\nparser.prototype.expectEndOfStatement = function() {\n  if (this.token === ';') {\n    this.nextWithComments();\n    if (this.token === this.tok.T_CLOSE_TAG) {\n      // strip close tag (statement already closed with ';')\n      this.nextWithComments();\n    }\n  } else if (this.token === this.tok.T_CLOSE_TAG) {\n    this.nextWithComments();\n  } else if (this.token !== this.tok.T_INLINE_HTML && this.token !== this.EOF) {\n    this.error(';');\n    return false;\n  }\n  return true;\n};\n\n/** outputs some debug information on current token **/\nvar ignoreStack = ['parser.next', 'parser.ignoreComments', 'parser.nextWithComments'];\nparser.prototype.showlog = function() {\n  var stack = (new Error()).stack.split('\\n');\n  var line;\n  for (var offset = 2; offset < stack.length; offset ++) {\n    line = stack[offset].trim();\n    var found = false;\n    for(var i = 0; i < ignoreStack.length; i++) {\n      if (line.substring(3, 3 + ignoreStack[i].length) === ignoreStack[i]) {\n        found = true;\n        break;\n      }\n    }\n    if (!found) {\n      break;\n    }\n  }\n\n  console.log(\n    'Line '\n    + this.lexer.yylloc.first_line\n    + ' : '\n    + this.getTokenName(this.token)\n    + \">\" + this.lexer.yytext + \"<\"\n    + ' @-->' + line\n  );\n  return this;\n};\n\n/**\n * Force the parser to check the current token.\n *\n * If the current token does not match to expected token,\n * the an error will be raised.\n *\n * If the suppressError mode is activated, then the error will\n * be added to the program error stack and this function will return `false`.\n *\n * @param {String|Number} token\n * @return {boolean}\n * @throws Error\n */\nparser.prototype.expect = function(token) {\n  if (Array.isArray(token)) {\n    if (token.indexOf(this.token) === -1) {\n      this.error(token);\n      return false;\n    }\n  } else if (this.token != token) {\n    this.error(token);\n    return false;\n  }\n  return true;\n};\n\n/**\n * Returns the current token contents\n * @return {String}\n */\nparser.prototype.text = function() {\n  return this.lexer.yytext;\n};\n\n/** consume the next token **/\nparser.prototype.next = function() {\n  if (this.debug) {\n    this.showlog();\n    this.debug = false;\n    this.nextWithComments().ignoreComments();\n    this.debug = true;\n  } else {\n    this.nextWithComments().ignoreComments();\n  }\n  return this;\n};\n\n/** consume comments (if found) **/\nparser.prototype.ignoreComments = function() {\n  if (this.debug) this.showlog();\n  while(this.token === this.tok.T_COMMENT || this.token === this.tok.T_DOC_COMMENT) {\n    // IGNORE COMMENTS\n    this.nextWithComments();\n  }\n  return this;\n};\n\n/** consume the next token (including doc) **/\nparser.prototype.nextWithComments = function() {\n  this.prev = [\n    this.lexer.yylloc.first_line,\n    this.lexer.yylloc.first_column,\n    this.lexer.offset\n  ];\n  this.token = this.lexer.lex() || this.EOF;\n  if (this.debug) this.showlog();\n  return this;\n};\n\n/**\n * Check if token is of specified type\n */\nparser.prototype.is = function(type) {\n  if (Array.isArray(type)) {\n    return type.indexOf(this.token) !== -1;\n  } else {\n    return this.entries[type].indexOf(this.token) != -1;\n  }\n};\n\n// extends the parser with syntax files\n[\n  require('./parser/array.js'),\n  require('./parser/class.js'),\n  require('./parser/comment.js'),\n  require('./parser/expr.js'),\n  require('./parser/function.js'),\n  require('./parser/if.js'),\n  require('./parser/loops.js'),\n  require('./parser/main.js'),\n  require('./parser/namespace.js'),\n  require('./parser/scalar.js'),\n  require('./parser/statement.js'),\n  require('./parser/switch.js'),\n  require('./parser/try.js'),\n  require('./parser/utils.js'),\n  require('./parser/variable.js')\n].forEach(function (ext) {\n  for(var k in ext) {\n    parser.prototype[k] = ext[k];\n  }\n});\n\nmodule.exports = parser;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser.js\n// module id = 30\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nvar ArrayExpr = 'array';\nvar ArrayEntry = 'entry';\n\nmodule.exports = {\n  /**\n   * Parse an array\n   * ```ebnf\n   * array ::= T_ARRAY '(' array_pair_list ')' |\n   *   '[' array_pair_list ']'\n   * ```\n   */\n  read_array: function() {\n    var expect = null;\n    var shortForm = false;\n    var items = [];\n    var result = this.node(ArrayExpr);\n\n    if (this.token === this.tok.T_ARRAY) {\n      this.next().expect('(');\n      expect = ')';\n    } else {\n      shortForm = true;\n      expect = ']';\n    }\n\n    if (this.next().token != expect) {\n      while(this.token != this.EOF) {\n        items.push(this.read_array_pair_list());\n        if (this.token == ',') {\n          this.next();\n          if (this.token === expect) {\n            break;\n          }\n        } else break;\n      }\n    }\n    this.expect(expect);\n    this.next();\n    return result(shortForm, items);\n  },\n  /**\n   * Reads an array entry item\n   * ```ebnf\n   * array_pair_list ::= '&' w_variable |\n   *  (\n   *    expr (\n   *      T_DOUBLE_ARROW (\n   *        expr | '&' w_variable\n   *      )\n   *    )?\n   *  )\n   * ```\n   */\n  read_array_pair_list: function() {\n    var result = this.node(ArrayEntry);\n    var key = null;\n    var value = null;\n    if (this.token === '&') {\n      value = this.next().read_variable(true, false, true);\n    } else {\n      var expr = this.read_expr();\n      if (this.token === this.tok.T_DOUBLE_ARROW) {\n        key = expr;\n        if (this.next().token === '&') {\n          value = this.next().read_variable(true, false, true);\n        } else {\n          value = this.read_expr();\n        }\n      } else {\n        value = expr;\n      }\n    }\n    return result(key, value);\n  },\n  /**\n   * ```ebnf\n   *  dim_offset ::= expr?\n   * ```\n   */\n  read_dim_offset: function() {\n    if (this.token == ']') return false;\n    return this.read_expr();\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/array.js\n// module id = 31\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nmodule.exports = {\n  /**\n   * reading a class\n   * ```ebnf\n   * class ::= class_scope? T_CLASS T_STRING (T_EXTENDS NAMESPACE_NAME)? (T_IMPLEMENTS (NAMESPACE_NAME ',')* NAMESPACE_NAME)? '{' CLASS_BODY '}'\n   * ```\n   */\n  read_class: function(flag) {\n    var result = this.node('class');\n    this.expect(this.tok.T_CLASS);\n    this.next().expect(this.tok.T_STRING);\n    var propName = this.text()\n      , propExtends = null\n      , propImplements = null\n      , body\n    ;\n    if (this.next().token == this.tok.T_EXTENDS) {\n      propExtends = this.next().read_namespace_name();\n    }\n    if (this.token == this.tok.T_IMPLEMENTS) {\n      propImplements = this.next().read_name_list();\n    }\n    this.expect('{');\n    body = this.nextWithComments().read_class_body();\n    return result(\n      propName\n      ,propExtends\n      ,propImplements\n      ,body\n      ,flag\n    );\n  }\n  /**\n   * Read the class visibility\n   * ```ebnf\n   *   class_scope ::= (T_FINAL | T_ABSTRACT)?\n   * ```\n   */\n  ,read_class_scope: function() {\n    var result = this.token;\n    if (result == this.tok.T_FINAL) {\n      this.next();\n      return [0, 0, 2];\n    } else if (result == this.tok.T_ABSTRACT) {\n      this.next();\n      return [0, 0, 1];\n    }\n    return [0, 0, 0];\n  }\n  /**\n   * Reads a class body\n   * ```ebnf\n   *   class_body ::= (member_flags? (T_VAR | T_STRING | T_FUNCTION))*\n   * ```\n   */\n  ,read_class_body: function() {\n    var result = [];\n\n    while(this.token !== this.EOF && this.token !== '}') {\n\n      if (this.token === this.tok.T_COMMENT) {\n        result.push(this.read_comment());\n        continue;\n      }\n\n      if (this.token === this.tok.T_DOC_COMMENT) {\n        result.push(this.read_doc_comment());\n        continue;\n      }\n\n      // check T_USE trait\n      if (this.token === this.tok.T_USE) {\n        result = result.concat(\n          this.next().read_trait_use_statement()\n        );\n        continue;\n      }\n\n      // read member flags\n      var flags = this.read_member_flags(false);\n\n      // check constant\n      if (this.token === this.tok.T_CONST) {\n        var constants = this.read_constant_list(flags);\n        this.expect(';');\n        this.nextWithComments();\n        result = result.concat(constants);\n        continue;\n      }\n\n      // jump over T_VAR then land on T_VARIABLE\n      if (this.token === this.tok.T_VAR) {\n        this.next().expect(this.tok.T_VARIABLE);\n        flags[0] = flags[1] = 0; // public & non static var\n      }\n\n      if (this.token === this.tok.T_VARIABLE) {\n\n        // reads a variable\n        var variables = this.read_variable_list(flags);\n        this.expect(';');\n        this.nextWithComments();\n        result = result.concat(variables);\n\n      } else if (this.token === this.tok.T_FUNCTION) {\n\n        // reads a function\n        result.push(this.read_function(false, flags));\n\n      } else {\n\n        // raise an error\n        this.error([\n          this.tok.T_CONST,\n          this.tok.T_VARIABLE,\n          this.tok.T_FUNCTION\n        ]);\n        // ignore token\n        this.next();\n\n      }\n    }\n    this.expect('}');\n    this.nextWithComments();\n    return result;\n  }\n  /**\n   * Reads variable list\n   * ```ebnf\n   *  variable_list ::= (variable_declaration ',')* variable_declaration\n   * ```\n   */\n  ,read_variable_list: function(flags) {\n    return this.read_list(\n      /**\n       * Reads a variable declaration\n       *\n       * ```ebnf\n       *  variable_declaration ::= T_VARIABLE '=' scalar\n       * ```\n       */\n      function read_variable_declaration() {\n        var result = this.node('property');\n        this.expect(this.tok.T_VARIABLE);\n        var name = this.text().substring(1); // ignore $\n        this.next();\n        if (this.token === ';' || this.token === ',') {\n          return result(name, null, flags);\n        } else if(this.token === '=') {\n          // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L815\n          return result(name, this.next().read_expr(), flags);\n        } else {\n          this.expect([',', ';', '=']);\n          return result(name, null, flags);\n        }\n      }, ','\n    );\n  }\n  /**\n   * Reads constant list\n   * ```ebnf\n   *  constant_list ::= T_CONST (constant_declaration ',')* constant_declaration\n   * ```\n   */\n  ,read_constant_list: function(flags) {\n    if (this.expect(this.tok.T_CONST)) {\n      this.next();\n    }\n    return this.read_list(\n        /**\n         * Reads a constant declaration\n         *\n         * ```ebnf\n         *  constant_declaration ::= T_STRING '=' expr\n         * ```\n         * @return {Constant} [:link:](AST.md#constant)\n         */\n        function read_constant_declaration() {\n          var result = this.node('classconstant'), name = null, value = null;\n          if (this.is('IDENTIFIER') || this.expect(this.tok.T_STRING)) {\n            name = this.text();\n            this.next();\n          }\n          if (this.expect('=')) {\n            value =  this.next().read_expr();\n          }\n          return result(name, value, flags);\n        }, ','\n      )\n    ;\n  }\n  /**\n   * Read member flags\n   * @return array\n   *  1st index : 0 => public, 1 => protected, 2 => private\n   *  2nd index : 0 => instance member, 1 => static member\n   *  3rd index : 0 => normal, 1 => abstract member, 2 => final member\n   */\n  ,read_member_flags: function(asInterface) {\n    var result = [-1, -1, -1];\n    if (this.is('T_MEMBER_FLAGS')) {\n      var idx = 0, val = 0;\n      do {\n        switch(this.token) {\n          case this.tok.T_PUBLIC:     idx = 0; val = 0; break;\n          case this.tok.T_PROTECTED:  idx = 0; val = 1; break;\n          case this.tok.T_PRIVATE:    idx = 0; val = 2; break;\n          case this.tok.T_STATIC:     idx = 1; val = 1; break;\n          case this.tok.T_ABSTRACT:   idx = 2; val = 1; break;\n          case this.tok.T_FINAL:      idx = 2; val = 2; break;\n        }\n        if (asInterface) {\n          if (idx == 0 && val == 2) {\n            // an interface can't be private\n            this.expect([this.tok.T_PUBLIC, this.tok.T_PROTECTED]);\n            val = -1;\n          } else if (idx == 2 && val == 1) {\n            // an interface cant be abstract\n            this.error();\n            val = -1;\n          }\n        }\n        if (result[idx] !== -1) {\n          // already defined flag\n          this.error();\n        } else if (val !== -1) {\n          result[idx] = val;\n        }\n      } while(this.next().is('T_MEMBER_FLAGS'));\n    }\n\n    if (result[0] == -1) result[0] = 0;\n    if (result[1] == -1) result[1] = 0;\n    if (result[2] == -1) result[2] = 0;\n    return result;\n  }\n  /**\n   * reading an interface\n   * ```ebnf\n   * interface ::= T_INTERFACE T_STRING (T_EXTENDS (NAMESPACE_NAME ',')* NAMESPACE_NAME)? '{' INTERFACE_BODY '}'\n   * ```\n   */\n  ,read_interface: function() {\n    var result = this.node('interface'), name = null, body = null, propExtends = null;\n    if (this.expect(this.tok.T_INTERFACE)) {\n      this.next();\n    }\n    if (this.expect(this.tok.T_STRING)) {\n      name = this.text();\n      this.next();\n    }\n    if (this.token === this.tok.T_EXTENDS) {\n      propExtends = this.next().read_name_list();\n    }\n    if (this.expect('{')) {\n      body = this.next().read_interface_body();\n    }\n    return result(name, propExtends, body);\n  }\n  /**\n   * Reads an interface body\n   * ```ebnf\n   *   interface_body ::= (member_flags? (T_CONST | T_FUNCTION))*\n   * ```\n   */\n  ,read_interface_body: function() {\n    var result = [];\n\n    while(this.token !== this.EOF && this.token !== '}') {\n\n      if (this.token === this.tok.T_COMMENT) {\n        result.push(this.read_comment());\n        continue;\n      }\n\n      if (this.token === this.tok.T_DOC_COMMENT) {\n        result.push(this.read_doc_comment());\n        continue;\n      }\n\n      // read member flags\n      var flags = this.read_member_flags(true);\n\n      // check constant\n      if (this.token == this.tok.T_CONST) {\n        var constants = this.read_constant_list(flags);\n        if (this.expect(';')) {\n          this.nextWithComments();\n        }\n        result = result.concat(constants);\n      }\n\n      // reads a function\n      else if (this.token === this.tok.T_FUNCTION) {\n        var method = this.read_function_declaration(2, flags);\n        method.parseFlags(flags);\n        result.push(method);\n        if (this.expect(';')) {\n          this.nextWithComments();\n        }\n      } else {\n        // raise an error\n        this.error([\n          this.tok.T_CONST,\n          this.tok.T_FUNCTION\n        ]);\n        this.next();\n      }\n    }\n    if (this.expect('}')) {\n      this.next();\n    }\n    return result;\n  }\n  /**\n   * reading a trait\n   * ```ebnf\n   * trait ::= T_TRAIT T_STRING (T_EXTENDS (NAMESPACE_NAME ',')* NAMESPACE_NAME)? '{' FUNCTION* '}'\n   * ```\n   */\n  ,read_trait: function(flag) {\n    var result = this.node('trait'),\n      propName = null,\n      propExtends = null,\n      propImplements = null,\n      body = null;\n    if (this.expect(this.tok.T_TRAIT)) {\n      this.next();\n    }\n    if (this.expect(this.tok.T_STRING)) {\n      propName = this.text();\n    }\n    if (this.next().token == this.tok.T_EXTENDS) {\n      propExtends = this.next().read_namespace_name();\n    }\n    if (this.token == this.tok.T_IMPLEMENTS) {\n      propImplements = this.next().read_name_list();\n    }\n    if (this.expect('{')) {\n      body = this.next().read_class_body();\n    }\n    return result(\n      propName,\n      propExtends,\n      propImplements,\n      body\n    );\n  }\n  /**\n   * reading a use statement\n   * ```ebnf\n   * trait_use_statement ::= namespace_name (',' namespace_name)* ('{' trait_use_alias '}')?\n   * ```\n   */\n  ,read_trait_use_statement: function() {\n    // defines use statements\n    var node = this.node('traituse');\n    var traits = [this.read_namespace_name()];\n    var adaptations = null;\n    while(this.token === ',') {\n      traits.push(\n        this.next().read_namespace_name()\n      );\n    }\n    if (this.token === '{') {\n      adaptations = [];\n      // defines alias statements\n      while(this.next().token !== this.EOF) {\n        if (this.token === '}') break;\n        adaptations.push(this.read_trait_use_alias());\n        this.expect(';');\n      }\n      if (this.expect('}')) {\n        this.nextWithComments();\n      }\n    } else {\n      if (this.expect(';')) {\n        this.nextWithComments();\n      }\n    }\n    return node(traits, adaptations);\n  }\n  /**\n   * Reading trait alias\n   * ```ebnf\n   * trait_use_alias ::= namespace_name ( T_DOUBLE_COLON T_STRING )? (T_INSTEADOF namespace_name) | (T_AS member_flags? T_STRING)\n   * ```\n   */\n  ,read_trait_use_alias: function() {\n    var node = this.node();\n    var trait = null;\n    var method;\n\n    if(this.is('IDENTIFIER')) {\n      method = this.text();\n      this.next();\n    } else {\n      method = this.read_namespace_name();\n\n      if (this.token === this.tok.T_DOUBLE_COLON) {\n        this.next();\n\n        if (this.is('IDENTIFIER') || this.expect(this.tok.T_STRING)) {\n          trait = method;\n          method = this.text();\n          this.next();\n        }\n      } else {\n        // convert identifier as string\n        method = method.name;\n      }\n    }\n\n    // handle trait precedence\n    if (this.token === this.tok.T_INSTEADOF) {\n      return node(\n        'traitprecedence',\n        trait, method,\n        this.next().read_name_list()\n      );\n    }\n\n    // handle trait alias\n    else if (this.token === this.tok.T_AS) {\n      var flags = false;\n      var alias = null;\n      if (this.next().is('T_MEMBER_FLAGS')) {\n        flags = this.read_member_flags();\n      }\n      \n      if (this.is('IDENTIFIER') || this.token === this.tok.T_STRING) {\n        alias = this.text();\n        this.next();\n      } else if (flags === false) {\n        // no visibility flags and no name => too bad\n        this.expect(this.tok.T_STRING);\n      }\n\n      return node('traitalias', trait, method, alias, flags)\n    }\n\n    // handle errors\n    this.expect([this.tok.T_AS, this.tok.T_INSTEADOF]);\n    return node('traitalias', trait, method, null, null);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/class.js\n// module id = 32\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar docSplit = /^(\\s*\\*[ \\t]*|[ \\t]*)(.*)$/gm;\n\nmodule.exports = {\n  /**\n   *  Comments with // or # or / * ... * /\n   */\n  read_comment: function() {\n    var result = this.node('doc');\n    var lines = [];\n    do {\n      var line = this.text();\n      if (line[0] === '#') {\n        line = line.substring(1);\n      } else {\n        line = line.substring(2);\n        if (line.substring(line.length - 2) === '*/') {\n          line = line.substring(0, line.length - 2);\n        }\n      }\n      lines.push(line.trim());\n    } while(this.nextWithComments().token === this.tok.T_COMMENT);\n    return result(false, lines);\n  },\n  /**\n   * Comments with / ** ... * /\n   */\n  read_doc_comment: function() {\n    var result = this.node('doc');\n    var text = this.text();\n    text = text.substring(2, text.length - 2);\n    var lines = [];\n    text = text.split(docSplit);\n    for(var i = 2; i < text.length; i += 3) {\n      lines.push(text[i].trim());\n    }\n    this.nextWithComments();\n    return result(true, lines);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/comment.js\n// module id = 33\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n\n  read_expr: function() {\n    var result = this.node();\n    var expr = this.read_expr_item();\n    // binary operations\n    if (this.token === '|')\n      return result('bin', '|', expr, this.next().read_expr());\n    if (this.token === '&')\n      return result('bin', '&', expr, this.next().read_expr());\n    if (this.token === '^')\n      return result('bin', '^', expr, this.next().read_expr());\n    if (this.token === '.')\n      return result('bin', '.', expr, this.next().read_expr());\n    if (this.token === '+')\n      return result('bin', '+', expr, this.next().read_expr());\n    if (this.token === '-')\n      return result('bin', '-', expr, this.next().read_expr());\n    if (this.token === '*')\n      return result('bin', '*', expr, this.next().read_expr());\n    if (this.token === '/')\n      return result('bin', '/', expr, this.next().read_expr());\n    if (this.token === '%')\n      return result('bin', '%', expr, this.next().read_expr());\n    if (this.token === this.tok.T_POW)\n      return result('bin', '**', expr, this.next().read_expr());\n    if (this.token === this.tok.T_SL)\n      return result('bin', '<<', expr, this.next().read_expr());\n    if (this.token === this.tok.T_SR)\n      return result('bin', '>>', expr, this.next().read_expr());\n    // more binary operations (formerly bool)\n    if (this.token === this.tok.T_BOOLEAN_OR)\n      return result('bin', '||', expr, this.next().read_expr());\n    if (this.token === this.tok.T_LOGICAL_OR)\n      return result('bin', 'or', expr, this.next().read_expr());\n    if (this.token === this.tok.T_BOOLEAN_AND)\n      return result('bin', '&&', expr, this.next().read_expr());\n    if (this.token === this.tok.T_LOGICAL_AND)\n      return result('bin', 'and', expr, this.next().read_expr());\n    if (this.token === this.tok.T_LOGICAL_XOR)\n      return result('bin', 'xor', expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_IDENTICAL)\n      return result('bin', '===', expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_NOT_IDENTICAL)\n      return result('bin', '!==', expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_EQUAL)\n      return result('bin', '==', expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_NOT_EQUAL)\n      return result('bin', '!=', expr, this.next().read_expr());\n    if (this.token === '<')\n      return result('bin', '<', expr, this.next().read_expr());\n    if (this.token === '>')\n      return result('bin', '>', expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_SMALLER_OR_EQUAL)\n      return result('bin', '<=', expr, this.next().read_expr());\n    if (this.token === this.tok.T_IS_GREATER_OR_EQUAL)\n      return result('bin', '>=', expr, this.next().read_expr());\n    if (this.token === this.tok.T_SPACESHIP)\n      return result('bin', '<=>', expr, this.next().read_expr());\n    if (this.token === this.tok.T_INSTANCEOF)\n      return result('bin', 'instanceof', expr, this.next().read_expr());\n\n    // extra operations :\n    // $username = $_GET['user'] ?? 'nobody';\n    if (this.token === this.tok.T_COALESCE)\n      return result('bin', '??', expr, this.next().read_expr());\n\n    // extra operations :\n    // $username = $_GET['user'] ? true : false;\n    if (this.token === '?') {\n      var trueArg = null;\n      if (this.next().token !== ':') {\n        trueArg = this.read_expr();\n      }\n      this.expect(':') && this.next();\n      return result('retif', expr, trueArg, this.read_expr());\n    }\n\n    return expr;\n  }\n\n  /**\n   * ```ebnf\n   * Reads an expression\n   *  expr ::= @todo\n   * ```\n   */\n  ,read_expr_item: function() {\n\n    if (this.token === '@')\n      return this.node('silent')(this.next().read_expr());\n    if (this.token === '+')\n      return this.node('unary')('+', this.next().read_expr());\n    if (this.token === '!')\n      return this.node('unary')('!', this.next().read_expr());\n    if (this.token === '~')\n      return this.node('unary')('~', this.next().read_expr());\n\n    if (this.token === '-') {\n      var result = this.node();\n      this.next();\n      if (\n        this.token === this.tok.T_LNUMBER ||\n        this.token === this.tok.T_DNUMBER\n      ) {\n        // negative number\n        result = result('number', '-' + this.text());\n        this.next();\n        return result;\n      } else {\n        return result('unary', '-', this.read_expr());\n      }\n    }\n\n    if (this.token === '(') {\n      var node = this.node('parenthesis');\n      var expr = this.next().read_expr();\n      this.expect(')') && this.next();\n      expr = node(expr);\n      // handle dereferencable\n      if (this.token === this.tok.T_OBJECT_OPERATOR) {\n        return this.recursive_variable_chain_scan(expr, false);\n      } else if (this.token === this.tok.T_CURLY_OPEN || this.token === '[') {\n        return this.read_dereferencable(expr);\n      } else if (this.token === '(') {\n        // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1118\n        return this.node('call')(\n          expr, this.read_function_argument_list()\n        );\n      } else {\n        return expr;\n      }\n    }\n\n    if (this.token === '`') {\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1048\n      return this.next().read_encapsed_string('`');\n    }\n\n    if (this.token === this.tok.T_LIST) {\n      var result = this.node('list'), assign = null;\n      var isInner = this.innerList;\n      if (!isInner) {\n        assign = this.node('assign');\n      }\n      if (this.next().expect('(')) {\n        this.next();\n      }\n\n      if (!this.innerList) this.innerList = true;\n      var assignList = this.read_assignment_list();\n\n      // check if contains at least one assignment statement\n      var hasItem = false;\n      for(var i = 0; i < assignList.length; i++) {\n        if (assignList[i] !== null) {\n          hasItem = true;\n          break;\n        }\n      }\n      if (!hasItem) {\n        this.raiseError(\n          'Fatal Error :  Cannot use empty list on line ' + this.lexer.yylloc.first_line\n        );\n      }\n      if (this.expect(')')) {\n        this.next();\n      }\n\n      if (!isInner) {\n        this.innerList = false;\n        if (this.expect('=')) {\n          return assign(\n            result(assignList),\n            this.next().read_expr(),\n            '='\n          );\n        } else {\n          // fallback : list($a, $b);\n          return result(assignList);\n        }\n      } else {\n        return result(assignList);\n      }\n    }\n\n    if (this.token === this.tok.T_CLONE)\n      return this.node('clone')(\n        this.next().read_expr()\n      );\n\n    switch(this.token) {\n\n      case this.tok.T_INC:\n        return this.node('pre')(\n          '+', this.next().read_variable(false, false, false)\n        );\n\n      case this.tok.T_DEC:\n        return this.node('pre')(\n          '-', this.next().read_variable(false, false, false)\n        );\n\n      case this.tok.T_NEW:\n        return this.next().read_new_expr();\n\n      case this.tok.T_ISSET:\n        var result = this.node('isset');\n        if (this.next().expect('(')) {\n          this.next();\n        }\n        var args = this.read_list(this.read_expr, ',');\n        if (this.expect(')')) {\n          this.next();\n        }\n        return result(args);\n\n      case this.tok.T_EMPTY:\n        var result = this.node('empty');\n        if (this.next().expect('(')) {\n          this.next();\n        }\n        var arg = this.read_expr();\n        if (this.expect(')')) {\n          this.next();\n        }\n        return result([arg]);\n\n      case this.tok.T_INCLUDE:\n        return this.node('include')(\n          false, false,\n          this.next().read_expr()\n        );\n\n      case this.tok.T_INCLUDE_ONCE:\n        return this.node('include')(\n          true, false,\n          this.next().read_expr()\n        );\n\n      case this.tok.T_REQUIRE:\n        return this.node('include')(\n          false, true,\n          this.next().read_expr()\n        );\n\n      case this.tok.T_REQUIRE_ONCE:\n        return this.node('include')(\n          true, true,\n          this.next().read_expr()\n        );\n\n      case this.tok.T_EVAL:\n        var result = this.node('eval');\n        if (this.next().expect('(')) {\n          this.next();\n        }\n        var expr = this.read_expr();\n        if (this.expect(')')) {\n          this.next();\n        }\n        return result(expr);\n\n      case this.tok.T_INT_CAST:\n        return this.node('cast')('int', this.next().read_expr());\n\n      case this.tok.T_DOUBLE_CAST:\n        return this.node('cast')('double', this.next().read_expr());\n\n      case this.tok.T_STRING_CAST:\n        return this.node('cast')('string', this.next().read_expr());\n\n      case this.tok.T_ARRAY_CAST:\n        return this.node('cast')('array', this.next().read_expr());\n\n      case this.tok.T_OBJECT_CAST:\n        return this.node('cast')('object', this.next().read_expr());\n\n      case this.tok.T_BOOL_CAST:\n        return this.node('cast')('boolean', this.next().read_expr());\n\n      case this.tok.T_UNSET_CAST:\n        return this.node('unset')(\n          this.next().read_expr()\n        );\n\n      case this.tok.T_EXIT:\n        var result = this.node('exit');\n        var status = null;\n        if ( this.next().token === '(' ) {\n          if (this.next().token !== ')') {\n            status = this.read_expr();\n            if (this.expect(')')) {\n              this.next();\n            }\n          } else {\n            this.next();\n          }\n        }\n        return result(status);\n\n      case this.tok.T_PRINT:\n        return this.node('print')(\n          this.next().read_expr()\n        );\n\n      // T_YIELD (expr (T_DOUBLE_ARROW expr)?)?\n      case this.tok.T_YIELD:\n        var result = this.node('yield'), value = null, key = null;\n        if (this.next().is('EXPR')) {\n          // reads the yield return value\n          value = this.read_expr();\n          if (this.token === this.tok.T_DOUBLE_ARROW) {\n            // reads the yield returned key\n            key = value;\n            value = this.next().read_expr();\n          }\n        }\n        return result(value, key);\n\n      // T_YIELD_FROM expr\n      case this.tok.T_YIELD_FROM:\n        var result = this.node('yieldfrom');\n        var expr = this.next().read_expr();\n        return result(expr);\n\n      case this.tok.T_FUNCTION:\n        return this.read_function(true);\n\n      case this.tok.T_STATIC:\n        var backup = [this.token, this.lexer.getState()];\n        if (this.next().token === this.tok.T_FUNCTION) {\n          // handles static function\n          return this.read_function(true, [0, 1, 0]);\n        } else {\n          // rollback\n          this.lexer.tokens.push(backup);\n          this.next();\n        }\n\n\n    }\n\n    // SCALAR | VARIABLE\n    var expr;\n    if (this.is('VARIABLE')) {\n      var result = this.node();\n      expr = this.read_variable(false, false, false);\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L877\n      // should accept only a variable\n      var isConst = (\n        expr.kind === 'constref' || (\n          expr.kind === 'staticlookup' &&\n          expr.offset.kind === 'constref'\n        )\n      );\n\n      // VARIABLES SPECIFIC OPERATIONS\n      switch(this.token) {\n        case '=':\n          if (isConst) this.error('VARIABLE');\n          var right;\n          if (this.next().token == '&') {\n            if (this.next().token === this.tok.T_NEW) {\n              right = this.next().read_new_expr();\n            } else {\n              right = this.read_variable(false, false, true);\n            }\n          } else {\n            right = this.read_expr();\n          }\n          return result('assign', expr, right, '=');\n\n        // operations :\n        case this.tok.T_PLUS_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '+=');\n\n        case this.tok.T_MINUS_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '-=');\n\n        case this.tok.T_MUL_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '*=');\n\n        case this.tok.T_POW_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '**=');\n\n        case this.tok.T_DIV_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '/=');\n\n        case this.tok.T_CONCAT_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '.=');\n\n        case this.tok.T_MOD_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '%=');\n\n        case this.tok.T_AND_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '&=');\n\n        case this.tok.T_OR_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '|=');\n\n        case this.tok.T_XOR_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '^=');\n\n        case this.tok.T_SL_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign', expr, this.next().read_expr(), '<<=');\n\n        case this.tok.T_SR_EQUAL:\n          if (isConst) this.error('VARIABLE');\n          return result('assign',expr, this.next().read_expr(), '>>=');\n\n        case this.tok.T_INC:\n          if (isConst) this.error('VARIABLE');\n          this.next();\n          return result('post', '+', expr);\n        case this.tok.T_DEC:\n          if (isConst) this.error('VARIABLE');\n          this.next();\n          return result('post', '-', expr);\n      }\n    } else if (this.is('SCALAR')) {\n      expr = this.read_scalar();\n      // handle dereferencable\n      while(this.token !== this.EOF) {\n        if (this.token === this.tok.T_OBJECT_OPERATOR) {\n          expr = this.recursive_variable_chain_scan(expr, false);\n        } else if (this.token === this.tok.T_CURLY_OPEN || this.token === '[') {\n          expr = this.read_dereferencable(expr);\n        } else if (this.token === '(') {\n          // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1118\n          expr = this.node('call')(expr, this.read_function_argument_list());\n        } else {\n          return expr;\n        }\n      }\n    } else {\n      this.error('EXPR');\n      this.next();\n    }\n\n    // returns variable | scalar\n    return expr;\n\n  }\n  /**\n   * ```ebnf\n   *    new_expr ::= T_NEW (namespace_name function_argument_list) | (T_CLASS ... class declaration)\n   * ```\n   * https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L850\n   */\n  ,read_new_expr: function() {\n    var result = this.node('new');\n    if (this.token === this.tok.T_CLASS) {\n      var what = this.node('class');\n      // Annonymous class declaration\n      var propExtends = null, propImplements = null, body = null, args = [];\n      if (this.next().token === '(') {\n        args = this.read_function_argument_list();\n      }\n      if (this.token == this.tok.T_EXTENDS) {\n        propExtends = this.next().read_namespace_name();\n      }\n      if (this.token == this.tok.T_IMPLEMENTS) {\n        propImplements = this.next().read_name_list();\n      }\n      if (this.expect('{')) {\n        body = this.next().read_class_body();\n      }\n      return result(\n        what(\n          null\n          ,propExtends\n          ,propImplements\n          ,body\n          ,[0, 0, 0]\n        ), args\n      );\n    } else {\n      // Already existing class\n      var name = this.read_class_name_reference();\n      var args = [];\n      if (this.token === '(') {\n        args = this.read_function_argument_list();\n      }\n      return result(name, args);\n    }\n  }\n  /**\n   * Reads a class name\n   * ```ebnf\n   * class_name_reference ::= namespace_name | variable\n   * ```\n   */\n  ,read_class_name_reference: function() {\n    if (\n      this.token === this.tok.T_NS_SEPARATOR ||\n      this.token === this.tok.T_STRING ||\n      this.token === this.tok.T_NAMESPACE\n    ) {\n      var result = this.read_namespace_name();\n      if (this.token === this.tok.T_DOUBLE_COLON) {\n        result = this.read_static_getter(result);\n      }\n      return result;\n    } else if (this.is('VARIABLE')) {\n      return this.read_variable(true, false, false);\n    } else {\n      this.expect([this.tok.T_STRING, 'VARIABLE']);\n    }\n  }\n  /**\n   * ```ebnf\n   *   assignment_list ::= assignment_list_element (',' assignment_list_element?)*\n   * ```\n   */\n  ,read_assignment_list: function() {\n    return this.read_list(\n      this.read_assignment_list_element, ','\n    );\n  }\n\n  /**\n   * ```ebnf\n   *  assignment_list_element ::= expr | expr T_DOUBLE_ARROW expr\n   * ```\n   */\n  ,read_assignment_list_element: function() {\n    if (this.token === ',' || this.token === ')') return null;\n    var result = this.read_expr_item();\n    if (this.token === this.tok.T_DOUBLE_ARROW) {\n      result = [\n        'key',\n        result,\n        this.next().read_expr_item()\n      ];\n    }\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/expr.js\n// module id = 34\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nmodule.exports = {\n  /**\n   * checks if current token is a reference keyword\n   */\n  is_reference: function() {\n    if (this.token == '&') {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * checks if current token is a variadic keyword\n   */\n  ,is_variadic: function() {\n    if (this.token === this.tok.T_ELLIPSIS) {\n      this.next();\n      return true;\n    }\n    return false;\n  }\n  /**\n   * reading a function\n   * ```ebnf\n   * function ::= function_declaration code_block\n   * ```\n   */\n  ,read_function: function(closure, flag) {\n    var result = this.read_function_declaration(\n      closure ? 1 : (flag ? 2 : 0),\n      flag && flag[1] === 1\n    );\n    if (flag && flag[2] == 1) {\n      // abstract function :\n      result.parseFlags(flag);\n      if (this.expect(';')) {\n        this.nextWithComments();\n      }\n    } else {\n      if (this.expect('{')) {\n        result.body = this.read_code_block(false);\n        if (result.loc && result.body.loc) {\n          result.loc.end = result.body.loc.end;\n        }\n      }\n      if (!closure && flag) {\n        result.parseFlags(flag);\n      }\n    }\n    return result;\n  }\n  /**\n   * reads a function declaration (without his body)\n   * ```ebnf\n   * function_declaration ::= T_FUNCTION '&'?  T_STRING '(' parameter_list ')'\n   * ```\n   */\n  ,read_function_declaration: function(type, isStatic) {\n    var nodeName = 'function';\n    if (type === 1) {\n      nodeName = 'closure';\n    } else if (type === 2) {\n      nodeName = 'method';\n    }\n    var result = this.node(nodeName);\n\n    if (this.expect(this.tok.T_FUNCTION)) {\n      this.next();\n    }\n    var isRef = this.is_reference();\n    var name = false, use = [], returnType = null, nullable = false;\n    if (type !== 1) {\n      if ((type === 2 && this.is('IDENTIFIER')) || this.expect(this.tok.T_STRING)) {\n        name = this.text();\n        this.next();\n      } else {\n        this.next();\n      }\n    }\n    if (this.expect('(')) this.next();\n    var params = this.read_parameter_list();\n    if (this.expect(')')) this.next();\n    if (type === 1 && this.token === this.tok.T_USE) {\n      if (this.next().expect('(')) this.next();\n      use = this.read_list(this.read_lexical_var, ',');\n      if (this.expect(')')) this.next();\n    }\n    if (this.token === ':') {\n      if (this.next().token === '?') {\n        nullable = true;\n        this.next();\n      }\n      returnType = this.read_type();\n    }\n    if (type === 1) {\n      // closure\n      return result(params, isRef, use, returnType, nullable, isStatic);\n    }\n    return result(name, params, isRef, returnType, nullable);\n  }\n  /**\n   * ```ebnf\n   * lexical_var ::= '&'? T_VARIABLE\n   * ```\n   */\n  ,read_lexical_var: function() {\n    var result = this.node('variable');\n    var isRef = false;\n    if (this.token === '&') {\n      isRef = true;\n      this.next();\n    }\n    this.expect(this.tok.T_VARIABLE);\n    var name = this.text().substring(1);\n    this.next();\n    return result(name, isRef, false);\n  }\n  /**\n   * reads a list of parameters\n   * ```ebnf\n   *  parameter_list ::= (parameter ',')* parameter?\n   * ```\n   */\n  ,read_parameter_list: function() {\n    var result = [];\n    if (this.token != ')') {\n      while(this.token != this.EOF) {\n        result.push(this.read_parameter());\n        if (this.token == ',') {\n          this.next();\n        } else if (this.token == ')') {\n          break;\n        } else {\n          this.error([',', ')']);\n          break;\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * ```ebnf\n   *  parameter ::= type? '&'? T_ELLIPSIS? T_VARIABLE ('=' expr)?\n   * ```\n   * @see https://github.com/php/php-src/blob/493524454d66adde84e00d249d607ecd540de99f/Zend/zend_language_parser.y#L640\n   */\n  ,read_parameter: function() {\n    var node = this.node('parameter'),\n      name = null,\n      value = null,\n      type = null,\n      nullable = false;\n    if (this.token === '?') {\n      this.next();\n      nullable = true;\n    }\n    type = this.read_type();\n    if (nullable && !type) {\n      this.raiseError('Expecting a type definition combined with nullable operator');\n    }\n    var isRef = this.is_reference();\n    var isVariadic = this.is_variadic();\n    if (this.expect(this.tok.T_VARIABLE)) {\n      name = this.text().substring(1);\n      this.next();\n    }\n    if (this.token == '=') {\n      value = this.next().read_expr();\n    }\n    return node(name, type, value, isRef, isVariadic, nullable);\n  }\n  /**\n   * Reads a list of arguments\n   * ```ebnf\n   *  function_argument_list ::= '(' (argument_list (',' argument_list)*)? ')'\n   * ```\n   */\n  ,read_function_argument_list: function() {\n    var result = [];\n    var wasVariadic = false;\n    this.expect('(') && this.next();\n    if (this.token !== ')') {\n      while(this.token != this.EOF) {\n        var argument = this.read_argument_list();\n        if (argument) {\n          result.push(argument);\n          if (argument.kind === 'variadic') {\n            wasVariadic = true;\n          } else if (wasVariadic) {\n            this.raiseError('Unexpected argument after a variadic argument');\n          }\n        }\n        if (this.token === ',') {\n          this.next();\n        } else break;\n      }\n    }\n    this.expect(')') && this.next();\n    return result;\n  }\n  /**\n   * ```ebnf\n   *    argument_list ::= T_ELLIPSIS? expr\n   * ```\n   */\n  ,read_argument_list: function() {\n    if (this.token === this.tok.T_ELLIPSIS ) {\n      return this.node('variadic')(this.next().read_expr());\n    }\n    return this.read_expr();\n  }\n  /**\n   * read type hinting\n   * ```ebnf\n   *  type ::= T_ARRAY | T_CALLABLE | namespace_name\n   * ```\n   */\n  ,read_type: function() {\n    var result = this.node('identifier');\n    switch(this.token) {\n      case this.tok.T_ARRAY:\n        this.next();\n        return result(['', 'array'], false);\n      case this.tok.T_NAMESPACE:\n      case this.tok.T_NS_SEPARATOR:\n      case this.tok.T_STRING:\n        return this.read_namespace_name();\n      case this.tok.T_CALLABLE:\n        this.next();\n        return result(['', 'callable'], false);\n      default:\n        return null;\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/function.js\n// module id = 35\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nmodule.exports = {\n  /**\n   * Reads an IF statement\n   *\n   * ```ebnf\n   *  if ::= T_IF '(' expr ')' ':' ...\n   * ```\n   */\n  read_if: function() {\n    var result = this.node('if'),\n      body = null,\n      alternate = null,\n      shortForm = false,\n      test = null;\n    test = this.read_if_expr();\n\n    if (this.token === ':') {\n      shortForm = true;\n      this.next();\n      body = this.node('block');\n      var items = [];\n      while(this.token !== this.EOF && this.token !== this.tok.T_ENDIF) {\n        if (this.token === this.tok.T_ELSEIF) {\n          alternate = this.next().read_elseif_short();\n          break;\n        } else if (this.token === this.tok.T_ELSE) {\n          alternate = this.next().read_else_short();\n          break;\n        }\n        items.push(this.read_inner_statement());\n      }\n      body = body(null, items);\n      this.expect(this.tok.T_ENDIF) && this.next();\n      this.expectEndOfStatement();\n    } else {\n      body = this.read_statement();\n      /**\n       * ignore : if (..) { } /* *./ else { }\n       */\n      this.ignoreComments();\n      if (this.token === this.tok.T_ELSEIF) {\n        alternate = this.next().read_if();\n      } else if (this.token === this.tok.T_ELSE) {\n        alternate = this.next().read_statement();\n      }\n    }\n    return result(test, body, alternate, shortForm);\n  },\n  /**\n   * reads an if expression : '(' expr ')'\n   */\n  read_if_expr: function() {\n    this.expect('(') && this.next();\n    var result = this.read_expr();\n    this.expect(')') && this.next();\n    return result;\n  },\n  /**\n   * reads an elseif (expr): statements\n   */\n  read_elseif_short: function() {\n    var result = this.node('if'),\n      alternate = null,\n      test = null,\n      body = null,\n      items = [];\n    test = this.read_if_expr();\n    if (this.expect(':')) this.next();\n    body = this.node('block');\n    while(this.token != this.EOF && this.token !== this.tok.T_ENDIF) {\n      if (this.token === this.tok.T_ELSEIF) {\n        alternate = this.next().read_elseif_short();\n        break;\n      } else if (this.token === this.tok.T_ELSE) {\n        alternate = this.next().read_else_short();\n        break;\n      }\n      items.push(this.read_inner_statement());\n    }\n    body = body(null, items);\n    return result(test, body, alternate, true);\n  },\n  /**\n   *\n   */\n  read_else_short: function() {\n    if (this.expect(':')) this.next();\n    var body = this.node('block'), items = [];\n    while(this.token != this.EOF && this.token !== this.tok.T_ENDIF) {\n      items.push(this.read_inner_statement());\n    }\n    return body(null, items);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/if.js\n// module id = 36\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nmodule.exports = {\n  /**\n   * Reads a while statement\n   * ```ebnf\n   * while ::= T_WHILE (statement | ':' inner_statement_list T_ENDWHILE ';')\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L587\n   * @return {While}\n   */\n  read_while: function() {\n    var result = this.node('while'),\n      test = null,\n      body = null,\n      shortForm = false\n    ;\n    if (this.expect('(')) this.next();\n    test = this.read_expr();\n    if (this.expect(')')) this.next();\n    if (this.token === ':') {\n      shortForm = true;\n      body = this.read_short_form(this.tok.T_ENDWHILE);\n    } else {\n      body = this.read_statement();\n    }\n    return result(test, body, shortForm);\n  }\n  /**\n   * Reads a do / while loop\n   * ```ebnf\n   * do ::= T_DO statement T_WHILE '(' expr ')' ';'\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L423\n   * @return {Do}\n   */\n  ,read_do: function() {\n    var result = this.node('do'),\n      test = null,\n      body = null\n    ;\n    body = this.read_statement();\n    if (this.ignoreComments().expect(this.tok.T_WHILE)) {\n      if (this.next().expect('(')) this.next();\n      test  = this.read_expr();\n      if (this.expect(')')) this.next();\n      if (this.expect(';')) this.next();\n    }\n    return result(test, body);\n  }\n  /**\n   * Read a for incremental loop\n   * ```ebnf\n   * for ::= T_FOR '(' for_exprs ';' for_exprs ';' for_exprs ')' for_statement\n   * for_statement ::= statement | ':' inner_statement_list T_ENDFOR ';'\n   * for_exprs ::= expr? (',' expr)*\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L425\n   * @return {For}\n   */\n  ,read_for: function() {\n    var result = this.node('for'),\n      init = [],\n      test = [],\n      increment = [],\n      body = null,\n      shortForm = false;\n    if (this.expect('(')) this.next();\n    if (this.token !== ';') {\n      init = this.read_list(this.read_expr, ',');\n      if (this.expect(';')) this.next();\n    } else {\n      this.next();\n    }\n    if (this.token !== ';') {\n      test = this.read_list(this.read_expr, ',');\n      if (this.expect(';')) this.next();\n    } else {\n      this.next();\n    }\n    if (this.token !== ')') {\n      increment = this.read_list(this.read_expr, ',');\n      if (this.expect(')')) this.next();\n    } else {\n      this.next();\n    }\n    if (this.token === ':') {\n      shortForm = true;\n      body = this.read_short_form(this.tok.T_ENDFOR);\n    } else  {\n      body = this.read_statement();\n    }\n    return result(init, test, increment, body, shortForm);\n  }\n  /**\n   * Reads a foreach loop\n   * ```ebnf\n   * foreach ::= '(' expr T_AS foreach_variable (T_DOUBLE_ARROW foreach_variable)? ')' statement\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L438\n   * @return {Foreach}\n   */\n  ,read_foreach: function() {\n    var result = this.node('foreach'),\n      source = null,\n      key = null,\n      value = null,\n      body = null,\n      shortForm = false;\n    if (this.expect('(')) this.next();\n    source = this.read_expr();\n    if (this.ignoreComments().expect(this.tok.T_AS)) {\n      this.next();\n      value = this.read_foreach_variable();\n      if (this.token === this.tok.T_DOUBLE_ARROW) {\n        key = value;\n        value = this.next().read_foreach_variable();\n      }\n    }\n\n    if (this.expect(')')) this.next();\n\n    if (this.token === ':') {\n      shortForm = true;\n      body = this.read_short_form(this.tok.T_ENDFOREACH);\n    } else {\n      body = this.read_statement();\n    }\n    return result(source, key, value, body, shortForm);\n  }\n  /**\n   * Reads a foreach variable statement\n   * ```ebnf\n   * foreach_variable = variable |\n   *  T_LIST '(' assignment_list ')' |\n   *  '[' array_pair_list ']'\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L544\n   * @return {Expression}\n   */\n  ,read_foreach_variable: function() {\n      if (this.token === this.tok.T_LIST) {\n        var result = this.node('list');\n        if (this.next().expect('(')) this.next();\n        var assignList = this.read_assignment_list();\n        if (this.expect(')')) this.next();\n        return result(assignList);\n      } else if (this.token === '[' || this.token === this.tok.T_ARRAY) {\n        return this.read_array();\n      } else {\n        return this.read_variable(false, false, false);\n      }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/loops.js\n// module id = 37\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nmodule.exports = {\n  /**\n   * ```ebnf\n   * start ::= (namespace | top_statement)*\n   * ```\n   */\n  read_start: function() {\n    if (this.token == this.tok.T_NAMESPACE) {\n      return this.read_namespace();\n    } else {\n      return this.read_top_statement();\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/main.js\n// module id = 38\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /**\n   * Reads a namespace declaration block\n   * ```ebnf\n   * namespace ::= T_NAMESPACE namespace_name? '{'\n   *    top_statements\n   * '}'\n   * | T_NAMESPACE namespace_name ';' top_statements\n   * ```\n   * @see http://php.net/manual/en/language.namespaces.php\n   * @return {Namespace}\n   */\n  read_namespace: function() {\n    var result = this.node('namespace');\n    this.expect(this.tok.T_NAMESPACE) && this.next();\n    if (this.token == '{') {\n      this.currentNamespace = [''];\n      var body =  this.nextWithComments().read_top_statements();\n      this.expect('}') && this.nextWithComments();\n      return result([''], body, true);\n    } else {\n      var name = this.read_namespace_name();\n      if (this.token == ';') {\n        this.currentNamespace = name;\n        var body = this.nextWithComments().read_top_statements();\n        this.expect(this.EOF);\n        return result(name.name, body, false);\n      } else if (this.token == '{') {\n        this.currentNamespace = name;\n        var body =  this.nextWithComments().read_top_statements();\n        this.expect('}') && this.nextWithComments();\n        return result(name.name, body, true);\n      } else if (this.token === '(') {\n        // resolve ambuiguity between namespace & function call\n        name.resolution = this.ast.identifier.RELATIVE_NAME;\n        name.name = name.name.substring(1);\n        return this.node('call')(\n          name, this.read_function_argument_list()\n        );\n      } else {\n        this.error(['{', ';']);\n        // graceful mode :\n        this.currentNamespace = name;\n        var body = this.read_top_statements();\n        this.expect(this.EOF);\n        return result(name, body, false);\n      }\n    }\n  }\n  /**\n   * Reads a namespace name\n   * ```ebnf\n   *  namespace_name ::= T_NS_SEPARATOR? (T_STRING T_NS_SEPARATOR)* T_STRING\n   * ```\n   * @see http://php.net/manual/en/language.namespaces.rules.php\n   * @return {Identifier}\n   */\n  ,read_namespace_name: function() {\n    var result = this.node('identifier'), relative = false;\n    if (this.token === this.tok.T_NAMESPACE) {\n      this.next().expect(this.tok.T_NS_SEPARATOR) && this.next();\n      relative = true\n    }\n    return result(\n      this.read_list(this.tok.T_STRING, this.tok.T_NS_SEPARATOR, true),\n      relative\n    );\n  }\n  /**\n   * Reads a use statement\n   * ```ebnf\n   * use_statement ::= T_USE\n   *   use_type? use_declarations |\n   *   use_type use_statement '{' use_declarations '}' |\n   *   use_statement '{' use_declarations(=>typed) '}'\n   * ';'\n   * ```\n   * @see http://php.net/manual/en/language.namespaces.importing.php\n   * @return {UseGroup}\n   */\n  ,read_use_statement: function() {\n    var result = this.node('usegroup'),\n      type = null,\n      items = [],\n      name = null\n    ;\n    this.expect(this.tok.T_USE) && this.next();\n    type = this.read_use_type();\n    items.push(this.read_use_declaration(false));\n    if (this.token === ',') {\n      items = items.concat(this.next().read_use_declarations(false));\n    } else if (this.token === '{') {\n      name = items[0].name;\n      items = this.next().read_use_declarations(type === null);\n      this.expect('}') && this.next();\n    }\n    this.expect(';') && this.nextWithComments();\n    return result(name, type, items);\n  }\n  /**\n   * Reads a use declaration\n   * ```ebnf\n   * use_declaration ::= use_type? namespace_name use_alias\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L380\n   * @return {UseItem}\n   */\n  ,read_use_declaration: function(typed) {\n    var result = this.node('useitem'), type = null;\n    if (typed) type = this.read_use_type();\n    var name = this.read_namespace_name();\n    var alias = this.read_use_alias();\n    return result(name.name, alias, type);\n  }\n  /**\n  * Reads a list of use declarations\n  * ```ebnf\n  * use_declarations ::= use_declaration (',' use_declaration)*\n  * ```\n  * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L380\n  * @return {UseItem[]}\n   */\n  ,read_use_declarations: function(typed) {\n    var result = [this.read_use_declaration(typed)];\n    while(this.token === ',') {\n      result.push(this.next().read_use_declaration(typed));\n    }\n    return result;\n  }\n  /**\n   * Reads a use statement\n   * ```ebnf\n   * use_alias ::= (T_AS T_STRING)?\n   * ```\n   * @return {String|null}\n   */\n  ,read_use_alias: function() {\n    var result = null;\n    if (this.token === this.tok.T_AS) {\n      if (this.next().expect(this.tok.T_STRING)) {\n        result = this.text();\n        this.next();\n      }\n    }\n    return result;\n  }\n  /**\n   * Reads the namespace type declaration\n   * ```ebnf\n   * use_type ::= (T_FUNCTION | T_CONST)?\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L335\n   * @return {String|null} Possible values : function, const\n   */\n  ,read_use_type: function() {\n    if (this.token === this.tok.T_FUNCTION) {\n      this.next();\n      return this.ast.useitem.TYPE_FUNCTION;\n    } else if (this.token === this.tok.T_CONST) {\n      this.next();\n      return this.ast.useitem.TYPE_CONST;\n    }\n    return null;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/namespace.js\n// module id = 39\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar specialChar = {\n  '\\\\r': \"\\r\",\n  '\\\\n': \"\\n\",\n  '\\\\t': \"\\t\",\n  '\\\\v': String.fromCharCode(11),\n  '\\\\e': String.fromCharCode(27),\n  '\\\\f': String.fromCharCode(12),\n  \"\\\\\\\\\": \"\\\\\",\n  '\\\\$': \"$\",\n  '\\\\\"': '\"',\n  '\\\\\\'': \"'\"\n};\n\nmodule.exports = {\n  /**\n   * Unescape special chars\n   */\n  resolve_special_chars: function(text) {\n    return text.replace(\n      /\\\\[rntvef\"'\\\\\\$]/g,\n      function(seq) {\n        return specialChar[seq];\n      }\n    );\n  },\n  /**\n   * ```ebnf\n   *  scalar ::= T_MAGIC_CONST\n   *       | T_LNUMBER | T_DNUMBER\n   *       | T_START_HEREDOC T_ENCAPSED_AND_WHITESPACE? T_END_HEREDOC\n   *       | '\"' encaps_list '\"'\n   *       | T_START_HEREDOC encaps_list T_END_HEREDOC\n   *       | namespace_name (T_DOUBLE_COLON T_STRING)?\n   * ```\n   */\n  read_scalar: function() {\n    if (this.is('T_MAGIC_CONST')) {\n      return this.get_magic_constant();\n    } else {\n      switch(this.token) {\n\n        // TEXTS\n        case this.tok.T_CONSTANT_ENCAPSED_STRING:\n          var value = this.node('string');\n          var text = this.text();\n          var isDoubleQuote = text[0] === '\"';\n          text = text.substring(1, text.length - 1);\n          this.next();\n          value = value(isDoubleQuote, this.resolve_special_chars(text));\n          if (this.token === this.tok.T_DOUBLE_COLON) {\n            // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1151\n            return this.read_static_getter(value);\n          } else {\n            // dirrect string\n            return value;\n          }\n        case this.tok.T_START_HEREDOC:\n          if (this.lexer.curCondition === 'ST_NOWDOC') {\n            var node = this.node('nowdoc');\n            var value = this.next().text();\n            // strip the last line return char\n            var lastCh = value[value.length-1];\n            if (lastCh === '\\n') {\n              if (value[value.length-2] === '\\r') {\n                // windows style\n                value = value.substring(0, value.length - 2);\n              } else {\n                // linux style\n                value = value.substring(0, value.length - 1);\n              }\n            } else if (lastCh === '\\r') {\n              // mac style\n              value = value.substring(0, value.length - 1);\n            }\n            this.expect(this.tok.T_ENCAPSED_AND_WHITESPACE) && this.next();\n            node = node(value, this.lexer.heredoc_label);\n            this.expect(this.tok.T_END_HEREDOC) && this.next();\n            return node;\n          } else {\n            return this.next().read_encapsed_string(\n              this.tok.T_END_HEREDOC\n            );\n          }\n\n        case '\"':\n          return this.next().read_encapsed_string('\"');\n\n        case 'b\"':\n        case 'B\"':\n          var node = this.node('cast');\n          var what = this.next().read_encapsed_string('\"');\n          return node('binary', what);\n\n        // NUMERIC\n        case this.tok.T_LNUMBER:  // long\n        case this.tok.T_DNUMBER:  // double\n          var result = this.node('number');\n          var value = this.text();\n          this.next();\n          result = result(value);\n          return result;\n\n        // ARRAYS\n        case this.tok.T_ARRAY:  // array parser\n        case '[':             // short array format\n          return this.read_array();\n        default:\n          var err = this.error('SCALAR');\n          // graceful mode : ignore token & return error node\n          this.next();\n          return err;\n      }\n    }\n  }\n  /**\n   * Handles the dereferencing\n   */\n  ,read_dereferencable: function(expr) {\n    var result;\n    var node = this.node('offsetlookup');\n    if (this.token === '[') {\n      var offset = this.next().read_expr();\n      if (this.expect(']')) this.next();\n      result = node(expr, offset);\n    } else if (this.token === this.tok.T_DOLLAR_OPEN_CURLY_BRACES) {\n      var offset = this.read_encapsed_string_item();\n      result = node(expr, offset);\n    }\n    return result;\n  }\n  /**\n   * Reads and extracts an encapsed item\n   * ```ebnf\n   * encapsed_string_item ::= T_ENCAPSED_AND_WHITESPACE\n   *  | T_DOLLAR_OPEN_CURLY_BRACES expr '}'\n   *  | T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '}'\n   *  | T_DOLLAR_OPEN_CURLY_BRACES T_STRING_VARNAME '[' expr ']' '}'\n   *  | T_CURLY_OPEN variable '}'\n   *  | variable\n   *  | variable '[' expr ']'\n   *  | variable T_OBJECT_OPERATOR T_STRING\n   * ```\n   * @return {String|Variable|Expr|Lookup}\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1219\n   */\n  ,read_encapsed_string_item: function() {\n    var result = this.node();\n\n    // plain text\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1222\n    if (this.token === this.tok.T_ENCAPSED_AND_WHITESPACE) {\n      var text = this.text();\n      this.next();\n      result = result(\n        'string', false, this.resolve_special_chars(text)\n      );\n    }\n\n    // dynamic variable name\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1239\n    else if (this.token === this.tok.T_DOLLAR_OPEN_CURLY_BRACES) {\n      var name = null;\n      if (this.next().token === this.tok.T_STRING_VARNAME) {\n        var varName = this.text();\n        name = this.node('variable');\n        this.next();\n        // check if lookup an offset\n        // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1243\n        if (this.token === '[') {\n          name = name(varName, false);\n          var node = this.node('offsetlookup');\n          var offset = this.next().read_expr();\n          this.expect(']') && this.next();\n          name = node(name, offset);\n        } else {\n          name = varName;\n        }\n      } else {\n        name = this.read_expr();\n      }\n      this.expect('}') && this.next();\n      result = result('variable', name, false, true);\n    }\n\n    // expression\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1246\n    else if (this.token === this.tok.T_CURLY_OPEN) {\n      result = this.next().read_variable(false, false, false);\n      this.expect('}') && this.next();\n    }\n\n    // plain variable\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1231\n    else if (this.token === this.tok.T_VARIABLE) {\n      result = this.read_simple_variable(false);\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1233\n      if (this.token === '[') {\n        var node = this.node('offsetlookup');\n        var offset = this.next().read_encaps_var_offset();\n        this.expect(']') && this.next();\n        result = node(result, offset);\n      }\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L1236\n      if (this.token === this.tok.T_OBJECT_OPERATOR) {\n        var node = this.node('propertylookup');\n        var what = this.node('constref');\n        this.next().expect(this.tok.T_STRING);\n        var name = this.text();\n        this.next();\n        result = node(result, what(name));\n      }\n\n    // error / fallback\n    } else {\n      this.expect(this.tok.T_ENCAPSED_AND_WHITESPACE);\n      var value = this.text();\n      this.next();\n      // consider it as string\n      result = result('string', false, value);\n    }\n\n    return result;\n  }\n  /**\n   * Reads an encapsed string\n   */\n  ,read_encapsed_string: function(expect) {\n    var node = this.node('encapsed'), value = [], type = null;\n\n    if (expect === '`') {\n      type = this.ast.encapsed.TYPE_SHELL;\n    } else if (expect === '\"') {\n      type = this.ast.encapsed.TYPE_STRING;\n    } else {\n      type = this.ast.encapsed.TYPE_HEREDOC;\n    }\n\n    // reading encapsed parts\n    while(this.token !== expect && this.token !== this.EOF) {\n      value.push(this.read_encapsed_string_item());\n    }\n\n    this.expect(expect) && this.next();\n    node = node(value, type);\n\n    if (expect === this.tok.T_END_HEREDOC) {\n      node.label = this.lexer.heredoc_label;\n    }\n    return node;\n  }\n  /**\n   * Constant token\n   */\n  ,get_magic_constant: function() {\n    var result = this.node('magic');\n    var name = this.text();\n    this.next();\n    return result(name);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/scalar.js\n// module id = 40\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  /**\n   * reading a list of top statements (helper for top_statement*)\n   * ```ebnf\n   *  top_statements ::= top_statement*\n   * ```\n   */\n  read_top_statements: function() {\n    var result = [];\n    while(this.token !== this.EOF && this.token !== '}') {\n      var statement = this.read_top_statement();\n      if (statement) {\n        if (Array.isArray(statement)) {\n          result = result.concat(statement);\n        } else {\n          result.push(statement);\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * reading a top statement\n   * ```ebnf\n   *  top_statement ::=\n   *       namespace | function | class\n   *       | interface | trait\n   *       | use_statements | const_list\n   *       | statement\n   * ```\n   */\n  ,read_top_statement: function() {\n    switch(this.token) {\n      case this.tok.T_FUNCTION:\n        return this.read_function(false, false);\n      // optional flags\n      case this.tok.T_ABSTRACT:\n      case this.tok.T_FINAL:\n        var flag = this.read_class_scope();\n        if (this.token === this.tok.T_CLASS) {\n          return this.read_class(flag);\n        } else {\n          this.error(this.tok.T_CLASS);\n          this.next();\n          return null;\n        }\n      case this.tok.T_CLASS:\n        return this.read_class([0, 0, 0]);\n      case this.tok.T_INTERFACE:\n        return this.read_interface();\n      case this.tok.T_TRAIT:\n        return this.read_trait();\n      case this.tok.T_USE:\n        return this.read_use_statement();\n      case this.tok.T_CONST:\n        return this.next().read_const_list();\n      case this.tok.T_NAMESPACE:\n        return this.read_namespace();\n      case this.tok.T_HALT_COMPILER:\n        var result = this.node('halt');\n        if (this.next().expect('(')) this.next();\n        if (this.expect(')')) this.next();\n        this.expect(';');\n        this.lexer.done = true;\n        return result(this.lexer._input.substring(\n          this.lexer.offset\n        ));\n      default:\n        return this.read_statement();\n    }\n  }\n  /**\n   * reads a list of simple inner statements (helper for inner_statement*)\n   * ```ebnf\n   *  inner_statements ::= inner_statement*\n   * ```\n   */\n  ,read_inner_statements: function() {\n    var result = [];\n    while(this.token != this.EOF && this.token !== '}') {\n      var statement = this.read_inner_statement();\n      if (statement) {\n        if (Array.isArray(statement)) {\n          result = result.concat(statement);\n        } else {\n          result.push(statement);\n        }\n      }\n    }\n    return result;\n  }\n  /**\n   * Reads a list of constants declaration\n   * ```ebnf\n   *   const_list ::= T_CONST T_STRING '=' expr (',' T_STRING '=' expr)* ';'\n   * ```\n   */\n  ,read_const_list: function() {\n    var result = this.read_list(function() {\n      this.expect(this.tok.T_STRING);\n      var result = this.node('constant');\n      var name = this.text();\n      if (this.next().expect('=')) {\n        return result(name, this.next().read_expr());\n      } else {\n        // fallback\n        return result(name, null);\n      }\n    }, ',', false);\n    this.expectEndOfStatement();\n    return result;\n  }\n  /**\n   * Reads a list of constants declaration\n   * ```ebnf\n   *   declare_list ::= T_STRING '=' expr (',' T_STRING '=' expr)*\n   * ```\n   * @retrurn {Object}\n   */\n  ,read_declare_list: function() {\n    var result = {};\n    while(this.token != this.EOF && this.token !== ')') {\n      this.expect(this.tok.T_STRING);\n      var name = this.text().toLowerCase();\n      if (this.next().expect('=')) {\n        result[name] = this.next().read_expr();\n      } else {\n        result[name] = null;\n      }\n      if (this.token !== ',') break;\n      this.next();\n    }\n    return result;\n  }\n  /**\n   * reads a simple inner statement\n   * ```ebnf\n   *  inner_statement ::= '{' inner_statements '}' | token\n   * ```\n   */\n  ,read_inner_statement: function() {\n    switch(this.token) {\n      case this.tok.T_FUNCTION:\n        return this.read_function(false, false);\n      // optional flags\n      case this.tok.T_ABSTRACT:\n      case this.tok.T_FINAL:\n        var flag = this.read_class_scope();\n        if (this.token === this.tok.T_CLASS) {\n          return this.read_class(flag);\n        } else {\n          this.error(this.tok.T_CLASS);\n          // graceful mode : ignore token & go next\n          this.next();\n          return null;\n        }\n      case this.tok.T_CLASS:\n        return this.read_class([0, 0, 0]);\n      case this.tok.T_INTERFACE:\n        return this.read_interface();\n      case this.tok.T_TRAIT:\n        return this.read_trait();\n      case this.tok.T_HALT_COMPILER:\n        this.raiseError(\n          '__HALT_COMPILER() can only be used from the outermost scope'\n        );\n        // fallback : returns a node but does not stop the parsing\n        var node = this.node('halt');\n        this.next().expect('(') && this.next();\n        this.expect(')') && this.next();\n        node = node(this.lexer._input.substring(\n          this.lexer.offset\n        ));\n        this.expect(';') && this.next();\n        return node;\n      default:\n        return this.read_statement();\n    }\n  }\n  /**\n   * Reads statements\n   */\n  ,read_statement: function() {\n\n    switch(this.token) {\n\n      case '{': return this.read_code_block(false);\n\n      case this.tok.T_IF: return this.next().read_if();\n\n      case this.tok.T_SWITCH: return this.read_switch();\n\n      case this.tok.T_FOR: return this.next().read_for();\n\n      case this.tok.T_FOREACH: return this.next().read_foreach();\n\n      case this.tok.T_WHILE: return this.next().read_while();\n\n      case this.tok.T_DO: return this.next().read_do();\n\n      case this.tok.T_COMMENT: return this.read_comment();\n\n      case this.tok.T_DOC_COMMENT: return this.read_doc_comment();\n\n      case this.tok.T_RETURN:\n        var result = this.node('return'), expr = null;\n        if (!this.next().is('EOS')) {\n          expr = this.read_expr();\n        }\n        this.expectEndOfStatement();\n        return result(expr);\n\n      // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L429\n      case this.tok.T_BREAK:\n      case this.tok.T_CONTINUE:\n        var result = this.node(\n          this.token === this.tok.T_CONTINUE ? 'continue' : 'break'\n        ), level = null;\n        this.next(); // look ahead\n        if (this.token !== ';' && this.token !== this.tok.T_CLOSE_TAG) {\n          level = this.read_expr();\n        }\n        this.expectEndOfStatement();\n        return result(level);\n\n      case this.tok.T_GLOBAL:\n        var result = this.node('global');\n        var items = this.next().read_list(this.read_simple_variable, ',');\n        this.expectEndOfStatement();\n        return result(items);\n\n      case this.tok.T_STATIC:\n        var current = [this.token, this.lexer.getState()];\n        var result = this.node('static');\n        if (this.next().token === this.tok.T_DOUBLE_COLON) {\n          // static keyword for a class\n          this.lexer.tokens.push(current);\n          var expr = this.next().read_expr();\n          this.expect(';') && this.nextWithComments();\n          return expr;\n        }\n        if (this.token === this.tok.T_FUNCTION) {\n          return this.read_function(true, [0, 1, 0]);\n        }\n        var items = this.read_variable_declarations();\n        this.expectEndOfStatement();\n        return result(items);\n\n      case this.tok.T_ECHO:\n        var result = this.node('echo');\n        var args = this.next().read_list(this.read_expr, ',');\n        this.expectEndOfStatement();\n        return result(args);\n\n      case this.tok.T_INLINE_HTML:\n        var result = this.node('inline'), value = this.text();\n        this.next();\n        return result(value);\n\n      case this.tok.T_UNSET:\n        var result = this.node('unset');\n        this.next().expect('(') && this.next();\n        var items = this.read_list(this.read_variable, ',');\n        this.expect(')') && this.next();\n        this.expect(';') && this.nextWithComments();\n        return result(items);\n\n      case this.tok.T_DECLARE:\n        var result = this.node('declare'),\n          what,\n          body = [],\n          mode;\n        this.next().expect('(') && this.next();\n        what = this.read_declare_list();\n        this.expect(')') && this.next();\n        if (this.token === ':') {\n          this.nextWithComments();\n          while(this.token != this.EOF && this.token !== this.tok.T_ENDDECLARE) {\n            // @todo : check declare_statement from php / not valid\n            body.push(this.read_top_statement());\n          }\n          this.expect(this.tok.T_ENDDECLARE) && this.next();\n          this.expectEndOfStatement();\n          mode = this.ast.declare.MODE_SHORT;\n        } else if (this.token === '{') {\n          this.nextWithComments();\n          while(this.token != this.EOF && this.token !== '}') {\n            // @todo : check declare_statement from php / not valid\n            body.push(this.read_top_statement());\n          }\n          this.expect('}') && this.next();\n          mode = this.ast.declare.MODE_BLOCK;\n        } else {\n          this.expect(';') && this.nextWithComments();\n          while(this.token != this.EOF && this.token !== this.tok.T_DECLARE) {\n            // @todo : check declare_statement from php / not valid\n            body.push(this.read_top_statement());\n          }\n          mode = this.ast.declare.MODE_NONE;\n        }\n        return result(what, body, mode);\n\n      case this.tok.T_TRY:\n        return this.read_try();\n\n      case this.tok.T_THROW:\n        var result = this.node('throw');\n        var expr = this.next().read_expr();\n        this.expectEndOfStatement();\n        return result(expr);\n\n      case ';': // ignore this (extra ponctuation)\n      case this.tok.T_CLOSE_TAG: // empty tag\n        this.next();\n        return null;\n\n      case this.tok.T_STRING:\n        var current = [this.token, this.lexer.getState()];\n        var label = this.text();\n        // AST : https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L457\n        if (this.next().token === ':') {\n          var result = this.node('label');\n          this.next();\n          return result(label);\n        }\n\n        // default fallback expr / T_STRING '::' (etc...)\n        this.lexer.tokens.push(current);\n        var expr = this.next().read_expr();\n        this.expectEndOfStatement();\n        return expr;\n\n      case this.tok.T_GOTO:\n        var result = this.node('goto'), label = null;\n        if (this.next().expect(this.tok.T_STRING)) {\n          label = this.text();\n          this.next().expectEndOfStatement();\n        }\n        return result(label);\n\n      default: // default fallback expr\n        var expr = this.read_expr();\n        this.expectEndOfStatement();\n        return expr;\n    }\n  }\n  /**\n   * ```ebnf\n   *  code_block ::= '{' (inner_statements | top_statements) '}'\n   * ```\n   */\n  ,read_code_block: function(top) {\n    var result = this.node('block');\n    this.expect('{') && this.nextWithComments();\n    var body = top ?\n      this.read_top_statements()\n      : this.read_inner_statements()\n    ;\n    this.expect('}') && this.nextWithComments();\n    return result(null, body);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/statement.js\n// module id = 41\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /**\n   * Reads a switch statement\n   * ```ebnf\n   *  switch ::= T_SWITCH '(' expr ')' switch_case_list\n   * ```\n   * @return {Switch}\n   * @see http://php.net/manual/en/control-structures.switch.php\n   */\n  read_switch: function() {\n    this.expect(this.tok.T_SWITCH) && this.next();\n    var result = this.node('switch'), test, body, shortForm;\n    this.expect('(') && this.next();\n    test = this.read_expr();\n    this.expect(')') && this.next();\n    shortForm = (this.token === ':');\n    body = this.read_switch_case_list();\n    return result(test, body, shortForm);\n  }\n  /**\n   * ```ebnf\n   *  switch_case_list ::= '{' ';'? case_list* '}' | ':' ';'? case_list* T_ENDSWITCH ';'\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L566\n   */\n  ,read_switch_case_list: function() {\n    // DETECT SWITCH MODE\n    var expect = null,\n      result = this.node('block'),\n      items = [];\n    if (this.token === '{') {\n      expect = '}';\n    } else if (this.token === ':') {\n      expect = this.tok.T_ENDSWITCH;\n    } else {\n      this.expect(['{', ':']);\n    }\n    // OPTIONNAL ';'\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L570\n    if (this.next().token === ';') {\n      this.next();\n    }\n    // IGNORE THE CLOSE TAG TOKEN WITH SHORT MODE\n    if (this.token === this.tok.T_CLOSE_TAG) {\n      this.next();\n    }\n    // EXTRACTING CASES\n    while(this.token !== this.EOF && this.token !== expect) {\n      items.push( this.read_case_list(expect) );\n    }\n    // CHECK END TOKEN\n    this.expect(expect) && this.next();\n    if (expect === this.tok.T_ENDSWITCH) {\n      this.expectEndOfStatement();\n    }\n    return result(null, items);\n  }\n  /**\n   * ```ebnf\n   *   case_list ::= ((T_CASE expr) | T_DEFAULT) (':' | ';') inner_statement*\n   * ```\n   */\n  ,read_case_list: function(stopToken) {\n    var result = this.node('case'), test = null, body = null, items = [];\n    if (this.token === this.tok.T_CASE) {\n      test = this.next().read_expr();\n    } else if (this.token === this.tok.T_DEFAULT) {\n      // the defaut entry - no condition\n      this.next();\n    } else {\n      this.expect([this.tok.T_CASE, this.tok.T_DEFAULT]);\n    }\n    this.expect([':', ';']) && this.next();\n    body = this.node('block');\n    while(\n      this.token != this.EOF\n      && this.token !== stopToken\n      && this.token !== this.tok.T_CASE\n      && this.token !== this.tok.T_DEFAULT\n    ) {\n      items.push(this.read_inner_statement());\n    }\n    return result(\n      test, items.length > 0 ? body(null, items) : null\n    );\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/switch.js\n// module id = 42\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\nmodule.exports = {\n  /**\n   * ```ebnf\n   *  try ::= T_TRY '{' inner_statement* '}'\n   *          (\n   *              T_CATCH '(' namespace_name variable ')' '{'  inner_statement* '}'\n   *          )*\n   *          (T_FINALLY '{' inner_statement* '}')?\n   * ```\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L448\n   * @return {Try}\n   */\n  read_try: function() {\n    this.expect(this.tok.T_TRY);\n    var result = this.node('try'),\n      always = null,\n      body,\n      catches = []\n    ;\n    body = this.next().read_statement();\n    // https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L455\n    while(this.ignoreComments().token === this.tok.T_CATCH) {\n      var item = this.node('catch'), what = [], variable = null;\n      this.next().expect('(') && this.next();\n      what = this.read_list(\n        this.read_namespace_name, '|', false\n      );\n      variable = this.read_variable(true, false, false);\n      this.expect(')');\n      catches.push(\n        item(this.next().read_statement(), what, variable)\n      );\n    }\n    if (this.token === this.tok.T_FINALLY) {\n      always = this.next().read_statement();\n    }\n    return result(body, catches, always);\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/try.js\n// module id = 43\n// module chunks = 0","/*!\n * Defines a list of helper functions for parsing\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nmodule.exports = {\n  /**\n   * Reads a short form of tokens\n   * @param {Number} token - The ending token\n   * @return {Block}\n   */\n  read_short_form: function(token) {\n    var body = this.node('block'), items = [];\n    if (this.expect(':')) this.next();\n    while(this.token != this.EOF && this.token !== token) {\n      items.push(this.read_inner_statement());\n    }\n    if (this.expect(token)) this.next();\n    this.expectEndOfStatement();\n    return body(null, items);\n  }\n\n  /**\n   * Helper : reads a list of tokens / sample : T_STRING ',' T_STRING ...\n   * ```ebnf\n   * list ::= separator? ( item separator )* item\n   * ```\n   */\n  ,read_list: function(item, separator, preserveFirstSeparator) {\n    var result = [];\n\n    if (this.token == separator) {\n      if (preserveFirstSeparator) result.push('');\n      this.next();\n    }\n\n    if (typeof (item) === \"function\") {\n      do {\n        result.push(item.apply(this, []));\n        if (this.token != separator) {\n          break;\n        }\n      } while(this.next().token != this.EOF);\n    } else {\n      if (this.expect(item)) {\n        result.push(this.text());\n      } else {\n        return [];\n      }\n      while (this.next().token != this.EOF) {\n        if (this.token != separator) break;\n        // trim current separator & check item\n        if (this.next().token != item) break;\n        result.push(this.text());\n      }\n    }\n    return result;\n  }\n\n  /**\n   * Reads a list of names separated by a comma\n   *\n   * ```ebnf\n   * name_list ::= namespace (',' namespace)*\n   * ```\n   *\n   * Sample code :\n   * ```php\n   * <?php class foo extends bar, baz { }\n   * ```\n   *\n   * @see https://github.com/php/php-src/blob/master/Zend/zend_language_parser.y#L726\n   * @return {Identifier[]}\n   */\n  ,read_name_list: function() {\n    return this.read_list(\n      this.read_namespace_name, ',', false\n    );\n  }\n\n  /**\n   * Reads a list of variables declarations\n   *\n   * ```ebnf\n   * variable_declaration ::= T_VARIABLE ('=' expr)?*\n   * variable_declarations ::= variable_declaration (',' variable_declaration)*\n   * ```\n   *\n   * Sample code :\n   * ```php\n   * <?php class foo extends bar, baz { }\n   * ```\n   * @return {Variable[]|Assign[]} Returns an array composed by a list of variables, or\n   * assign values\n   */\n  ,read_variable_declarations: function() {\n    return this.read_list(function() {\n      var node = this.node('assign'),\n        value = null,\n        variable = this.node('variable');\n      // plain variable name\n      if (this.expect(this.tok.T_VARIABLE)) {\n        var name = this.text().substring(1);\n        this.next();\n        variable = variable(name, false, false);\n      } else {\n        variable = variable('#ERR', false, false);\n      }\n      if (this.token === '=') {\n        return node(variable, this.next().read_expr());\n      } else {\n        return variable;\n      }\n    }, ',');\n  }\n\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/utils.js\n// module id = 44\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nmodule.exports = {\n  /**\n   * Reads a variable\n   *\n   * ```ebnf\n   *   variable ::= &? ...complex @todo\n   * ```\n   *\n   * Some samples of parsed code :\n   * ```php\n   *  &$var                      // simple var\n   *  $var                      // simple var\n   *  classname::CONST_NAME     // dynamic class name with const retrieval\n   *  foo()                     // function call\n   *  $var->func()->property    // chained calls\n   * ```\n   */\n  read_variable: function(read_only, encapsed, byref) {\n    var result;\n\n    // check the byref flag\n    if (!byref && this.token === '&') {\n      byref = true;\n      this.next();\n    }\n\n    // reads the entry point\n    if (this.is([this.tok.T_VARIABLE, '$'])) {\n      result = this.read_reference_variable(encapsed, byref);\n    } else if (this.is([this.tok.T_NS_SEPARATOR, this.tok.T_STRING, this.tok.T_NAMESPACE])) {\n      result = this.node();\n      var name = this.read_namespace_name();\n      if (\n        this.token != this.tok.T_DOUBLE_COLON\n        && this.token != '('\n      ) {\n        // @see parser.js line 130 : resolves a conflict with scalar\n        var literal = name.name.toLowerCase();\n        if (literal === 'true') {\n          result = result('boolean', true);\n        } else if (literal === 'false') {\n          result = result('boolean', false);\n        } else {\n          // @todo null keyword ?\n          result = result('constref', name);\n        }\n      } else {\n        result = name;\n      }\n    } else if (this.token === this.tok.T_STATIC) {\n      result = this.node('constref');\n      this.next();\n      result = result('static');\n    } else {\n      this.expect('VARIABLE');\n    }\n\n    // static mode\n    if (this.token === this.tok.T_DOUBLE_COLON) {\n      result = this.read_static_getter(result, encapsed);\n    }\n\n    return this.recursive_variable_chain_scan(result, read_only, encapsed);\n  }\n\n  // resolves a static call\n  ,read_static_getter: function(what, encapsed) {\n    var result = this.node('staticlookup');\n    var offset = null;\n    if (this.next().is([this.tok.T_VARIABLE, '$'])) {\n      offset = this.read_reference_variable(encapsed, false);\n    } else if (\n      this.is('IDENTIFIER') || this.token === this.tok.T_STRING\n      || this.token === this.tok.T_CLASS\n    ) {\n      offset = this.node('constref');\n      var name = this.text();\n      this.next();\n      offset = offset(name);\n    } else {\n      this.error([this.tok.T_VARIABLE, this.tok.T_STRING]);\n      // graceful mode : set getter as error node and continue\n      offset = this.node('constref');\n      var name = this.text();\n      this.next();\n      offset = offset(name);\n    }\n    return result(what, offset);\n  }\n\n  ,recursive_variable_chain_scan: function(result, read_only, encapsed) {\n    recursive_scan_loop:\n    while(this.token != this.EOF) {\n      switch(this.token) {\n        case '(':\n          if (read_only) {\n            // @fixme : add more informations & test\n            return result;\n          } else {\n            result = this.node('call')(\n              result,  this.read_function_argument_list()\n            );\n          }\n          break;\n        case '[':\n          var node = this.node('offsetlookup');\n          this.next();\n          var offset = false;\n          if (encapsed) {\n            offset = this.read_encaps_var_offset();\n            this.expect(']') && this.next();\n          } else {\n            // callable_variable : https://github.com/php/php-src/blob/493524454d66adde84e00d249d607ecd540de99f/Zend/zend_language_parser.y#L1122\n            if (this.token !== ']') {\n              offset = this.read_expr();\n              this.expect(']') && this.next();\n            } else {\n              this.next();\n            }\n          }\n          result = node(result, offset);\n          break;\n        case this.tok.T_DOUBLE_COLON:\n          var node = this.node('staticlookup'), offset;\n          this.next();\n\n          if(this.is('IDENTIFIER') || this.token === this.tok.T_STRING\n              || this.token === this.tok.T_CLASS\n          ) {\n            offset = this.node('constref');\n            var name = this.text();\n            this.next();\n            offset = offset(name);\n\n            if(this.token === this.tok.T_OBJECT_OPERATOR || this.token === this.tok.T_DOUBLE_COLON) {\n              this.error();\n            }\n          }\n\n          result = node(result, offset);\n          break;\n        case this.tok.T_OBJECT_OPERATOR:\n          var node = this.node('propertylookup');\n          var what = null;\n          switch(this.next().token) {\n            case this.tok.T_STRING:\n              what = this.node('constref');\n              var name = this.text();\n              this.next();\n              what = what(name);\n              if (this.token === this.tok.T_VARIABLE) {\n                var inner = this.node('variable');\n                name = this.text().substring(1);\n                this.next();\n                what = this.node('encapsed')(\n                  [what, inner(name, false, false)],\n                  'offset'\n                );\n                if (what.loc && what.value[0].loc) {\n                  what.loc.start = what.value[0].loc.start;\n                }\n              } else if (this.token === '{') {\n                var expr = this.next().read_expr();\n                this.expect('}') && this.next();\n                what = this.node('encapsed')(\n                  [what, expr],\n                  'offset'\n                );\n                if (what.loc && what.value[0].loc) {\n                  what.loc.start = what.value[0].loc.start;\n                }\n              }\n              break;\n            case this.tok.T_VARIABLE:\n              what = this.node('variable');\n              var name = this.text().substring(1);\n              this.next();\n              what = what(name, false, false);\n              break;\n            case '$':\n              this.next().expect(['{', this.tok.T_VARIABLE]);\n              if (this.token === '{') {\n                // $obj->${$varname}\n                what = this.next().read_expr();\n                this.expect('}') && this.next();\n              } else {\n                // $obj->$$varname\n                what = this.read_expr();\n              }\n              break;\n            case '{':\n              what = this.next().read_expr();\n              this.expect('}') && this.next();\n              break;\n            default:\n              this.error([this.tok.T_STRING, this.tok.T_VARIABLE]);\n              // graceful mode : set what as error mode & continue\n              what = this.node('constref');\n              var name = this.text();\n              this.next();\n              what = what(name);\n              break;\n          }\n          result = node(result, what);\n          break;\n        default:\n          break recursive_scan_loop;\n      }\n    }\n    return result;\n  }\n  /**\n   * https://github.com/php/php-src/blob/493524454d66adde84e00d249d607ecd540de99f/Zend/zend_language_parser.y#L1231\n   */\n  ,read_encaps_var_offset: function() {\n    var offset = this.node();\n    if (this.token === this.tok.T_STRING) {\n      var text = this.text();\n      var isDblQuote = text[0] === '\"';\n      text = text.substring(1, text.length - 1);\n      this.next();\n      offset = offset(\n        'string', isDblQuote, this.resolve_special_chars(text)\n      );\n    } else if (this.token === this.tok.T_NUM_STRING) {\n      var num = this.text();\n      this.next();\n      offset = offset('number', num);\n    } else if (this.token === this.tok.T_VARIABLE) {\n      var name = this.text().substring(1);\n      this.next();\n      offset = offset('variable', name, false, false);\n    } else {\n      this.expect([\n        this.tok.T_STRING,\n        this.tok.T_NUM_STRING,\n        this.tok.T_VARIABLE\n      ]);\n      // fallback : consider as text\n      var text = this.text();\n      this.next();\n      offset = offset('string', false, text);\n    }\n    return offset;\n  }\n  /**\n   * ```ebnf\n   *  reference_variable ::=  simple_variable ('[' OFFSET ']')* | '{' EXPR '}'\n   * ```\n   * <code>\n   *  $foo[123];      // foo is an array ==> gets its entry\n   *  $foo{1};        // foo is a string ==> get the 2nd char offset\n   *  ${'foo'}[123];  // get the dynamic var $foo\n   *  $foo[123]{1};   // gets the 2nd char from the 123 array entry\n   * </code>\n   */\n  ,read_reference_variable: function(encapsed, byref) {\n    var result = this.read_simple_variable(byref);\n    while(this.token != this.EOF) {\n      var node = this.node();\n      if (this.token == '[') {\n        var offset = null;\n        if (encapsed) {\n          offset = this.next().read_encaps_var_offset();\n        } else {\n          offset = this.next().token === ']' ? null : this.read_dim_offset();\n        }\n        this.expect(']') && this.next();\n        result = node('offsetlookup', result, offset);\n      } else if (this.token == '{' && !encapsed) {\n        var offset = this.next().read_expr();\n        this.expect('}') && this.next();\n        result = node('offsetlookup', result, offset);\n      } else break;\n    }\n    return result;\n  }\n  /**\n   * ```ebnf\n   *  simple_variable ::= T_VARIABLE | '$' '{' expr '}' | '$' simple_variable\n   * ```\n   */\n  ,read_simple_variable: function(byref) {\n    var result = this.node('variable');\n    if (this.expect([this.tok.T_VARIABLE, '$']) && this.token === this.tok.T_VARIABLE) {\n      // plain variable name\n      var name = this.text().substring(1);\n      this.next();\n      result = result(name, byref, false);\n    } else {\n      if (this.token === '$') this.next();\n      // dynamic variable name\n      switch(this.token) {\n        case '{':\n          var expr = this.next().read_expr();\n          this.expect('}') && this.next();\n          result = result(expr, byref, true);\n          break;\n        case '$': // $$$var\n          result = result(this.read_simple_variable(false), byref);\n          break;\n        case this.tok.T_VARIABLE: // $$var\n          var name = this.text().substring(1);\n          var node = this.node('variable');\n          this.next();\n          result = result(node(name, false, false), byref, false);\n          break;\n        default:\n          this.error(['{', '$', this.tok.T_VARIABLE]);\n          // graceful mode\n          var name = this.text();\n          this.next();\n          result = result(name, byref, false);\n      }\n    }\n    return result;\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/parser/variable.js\n// module id = 45\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n// exports token index\nmodule.exports = {\n  values: {\n    101: 'T_HALT_COMPILER',\n    102: 'T_USE',\n    103: 'T_ENCAPSED_AND_WHITESPACE',\n    104: 'T_OBJECT_OPERATOR',\n    105: 'T_STRING',\n    106: 'T_DOLLAR_OPEN_CURLY_BRACES',\n    107: 'T_STRING_VARNAME',\n    108: 'T_CURLY_OPEN',\n    109: 'T_NUM_STRING',\n    110: 'T_ISSET',\n    111: 'T_EMPTY',\n    112: 'T_INCLUDE',\n    113: 'T_INCLUDE_ONCE',\n    114: 'T_EVAL',\n    115: 'T_REQUIRE',\n    116: 'T_REQUIRE_ONCE',\n    117: 'T_NAMESPACE',\n    118: 'T_NS_SEPARATOR',\n    119: 'T_AS',\n    120: 'T_IF',\n    121: 'T_ENDIF',\n    122: 'T_WHILE',\n    123: 'T_DO',\n    124: 'T_FOR',\n    125: 'T_SWITCH',\n    126: 'T_BREAK',\n    127: 'T_CONTINUE',\n    128: 'T_RETURN',\n    129: 'T_GLOBAL',\n    130: 'T_STATIC',\n    131: 'T_ECHO',\n    132: 'T_INLINE_HTML',\n    133: 'T_UNSET',\n    134: 'T_FOREACH',\n    135: 'T_DECLARE',\n    136: 'T_TRY',\n    137: 'T_THROW',\n    138: 'T_GOTO',\n    139: 'T_FINALLY',\n    140: 'T_CATCH',\n    141: 'T_ENDDECLARE',\n    142: 'T_LIST',\n    143: 'T_CLONE',\n    144: 'T_PLUS_EQUAL',\n    145: 'T_MINUS_EQUAL',\n    146: 'T_MUL_EQUAL',\n    147: 'T_DIV_EQUAL',\n    148: 'T_CONCAT_EQUAL',\n    149: 'T_MOD_EQUAL',\n    150: 'T_AND_EQUAL',\n    151: 'T_OR_EQUAL',\n    152: 'T_XOR_EQUAL',\n    153: 'T_SL_EQUAL',\n    154: 'T_SR_EQUAL',\n    155: 'T_INC',\n    156: 'T_DEC',\n    157: 'T_BOOLEAN_OR',\n    158: 'T_BOOLEAN_AND',\n    159: 'T_LOGICAL_OR',\n    160: 'T_LOGICAL_AND',\n    161: 'T_LOGICAL_XOR',\n    162: 'T_SL',\n    163: 'T_SR',\n    164: 'T_IS_IDENTICAL',\n    165: 'T_IS_NOT_IDENTICAL',\n    166: 'T_IS_EQUAL',\n    167: 'T_IS_NOT_EQUAL',\n    168: 'T_IS_SMALLER_OR_EQUAL',\n    169: 'T_IS_GREATER_OR_EQUAL',\n    170: 'T_INSTANCEOF',\n    171: 'T_INT_CAST',\n    172: 'T_DOUBLE_CAST',\n    173: 'T_STRING_CAST',\n    174: 'T_ARRAY_CAST',\n    175: 'T_OBJECT_CAST',\n    176: 'T_BOOL_CAST',\n    177: 'T_UNSET_CAST',\n    178: 'T_EXIT',\n    179: 'T_PRINT',\n    180: 'T_YIELD',\n    181: 'T_YIELD_FROM',\n    182: 'T_FUNCTION',\n    183: 'T_DOUBLE_ARROW',\n    184: 'T_DOUBLE_COLON',\n    185: 'T_ARRAY',\n    186: 'T_CALLABLE',\n    187: 'T_CLASS',\n    188: 'T_ABSTRACT',\n    189: 'T_TRAIT',\n    190: 'T_FINAL',\n    191: 'T_EXTENDS',\n    192: 'T_INTERFACE',\n    193: 'T_IMPLEMENTS',\n    194: 'T_VAR',\n    195: 'T_PUBLIC',\n    196: 'T_PROTECTED',\n    197: 'T_PRIVATE',\n    198: 'T_CONST',\n    199: 'T_NEW',\n    200: 'T_INSTEADOF',\n    201: 'T_ELSEIF',\n    202: 'T_ELSE',\n    203: 'T_ENDSWITCH',\n    204: 'T_CASE',\n    205: 'T_DEFAULT',\n    206: 'T_ENDFOR',\n    207: 'T_ENDFOREACH',\n    208: 'T_ENDWHILE',\n    209: 'T_CONSTANT_ENCAPSED_STRING',\n    210: 'T_LNUMBER',\n    211: 'T_DNUMBER',\n    212: 'T_LINE',\n    213: 'T_FILE',\n    214: 'T_DIR',\n    215: 'T_TRAIT_C',\n    216: 'T_METHOD_C',\n    217: 'T_FUNC_C',\n    218: 'T_NS_C',\n    219: 'T_START_HEREDOC',\n    220: 'T_END_HEREDOC',\n    221: 'T_CLASS_C',\n    222: 'T_VARIABLE',\n    223: 'T_OPEN_TAG',\n    224: 'T_OPEN_TAG_WITH_ECHO',\n    225: 'T_CLOSE_TAG',\n    226: 'T_WHITESPACE',\n    227: 'T_COMMENT',\n    228: 'T_DOC_COMMENT',\n    229: 'T_ELLIPSIS',\n    230: 'T_COALESCE',\n    231: 'T_POW',\n    232: 'T_POW_EQUAL',\n    233: 'T_SPACESHIP'\n  },\n  names: {\n    T_HALT_COMPILER: 101,\n    T_USE: 102,\n    T_ENCAPSED_AND_WHITESPACE: 103,\n    T_OBJECT_OPERATOR: 104,\n    T_STRING: 105,\n    T_DOLLAR_OPEN_CURLY_BRACES: 106,\n    T_STRING_VARNAME: 107,\n    T_CURLY_OPEN: 108,\n    T_NUM_STRING: 109,\n    T_ISSET: 110,\n    T_EMPTY: 111,\n    T_INCLUDE: 112,\n    T_INCLUDE_ONCE: 113,\n    T_EVAL: 114,\n    T_REQUIRE: 115,\n    T_REQUIRE_ONCE: 116,\n    T_NAMESPACE: 117,\n    T_NS_SEPARATOR: 118,\n    T_AS: 119,\n    T_IF: 120,\n    T_ENDIF: 121,\n    T_WHILE: 122,\n    T_DO: 123,\n    T_FOR: 124,\n    T_SWITCH: 125,\n    T_BREAK: 126,\n    T_CONTINUE: 127,\n    T_RETURN: 128,\n    T_GLOBAL: 129,\n    T_STATIC: 130,\n    T_ECHO: 131,\n    T_INLINE_HTML: 132,\n    T_UNSET: 133,\n    T_FOREACH: 134,\n    T_DECLARE: 135,\n    T_TRY: 136,\n    T_THROW: 137,\n    T_GOTO: 138,\n    T_FINALLY: 139,\n    T_CATCH: 140,\n    T_ENDDECLARE: 141,\n    T_LIST: 142,\n    T_CLONE: 143,\n    T_PLUS_EQUAL: 144,\n    T_MINUS_EQUAL: 145,\n    T_MUL_EQUAL: 146,\n    T_DIV_EQUAL: 147,\n    T_CONCAT_EQUAL: 148,\n    T_MOD_EQUAL: 149,\n    T_AND_EQUAL: 150,\n    T_OR_EQUAL: 151,\n    T_XOR_EQUAL: 152,\n    T_SL_EQUAL: 153,\n    T_SR_EQUAL: 154,\n    T_INC: 155,\n    T_DEC: 156,\n    T_BOOLEAN_OR: 157,\n    T_BOOLEAN_AND: 158,\n    T_LOGICAL_OR: 159,\n    T_LOGICAL_AND: 160,\n    T_LOGICAL_XOR: 161,\n    T_SL: 162,\n    T_SR: 163,\n    T_IS_IDENTICAL: 164,\n    T_IS_NOT_IDENTICAL: 165,\n    T_IS_EQUAL: 166,\n    T_IS_NOT_EQUAL: 167,\n    T_IS_SMALLER_OR_EQUAL: 168,\n    T_IS_GREATER_OR_EQUAL: 169,\n    T_INSTANCEOF: 170,\n    T_INT_CAST: 171,\n    T_DOUBLE_CAST: 172,\n    T_STRING_CAST: 173,\n    T_ARRAY_CAST: 174,\n    T_OBJECT_CAST: 175,\n    T_BOOL_CAST: 176,\n    T_UNSET_CAST: 177,\n    T_EXIT: 178,\n    T_PRINT: 179,\n    T_YIELD: 180,\n    T_YIELD_FROM: 181,\n    T_FUNCTION: 182,\n    T_DOUBLE_ARROW: 183,\n    T_DOUBLE_COLON: 184,\n    T_ARRAY: 185,\n    T_CALLABLE: 186,\n    T_CLASS: 187,\n    T_ABSTRACT: 188,\n    T_TRAIT: 189,\n    T_FINAL: 190,\n    T_EXTENDS: 191,\n    T_INTERFACE: 192,\n    T_IMPLEMENTS: 193,\n    T_VAR: 194,\n    T_PUBLIC: 195,\n    T_PROTECTED: 196,\n    T_PRIVATE: 197,\n    T_CONST: 198,\n    T_NEW: 199,\n    T_INSTEADOF: 200,\n    T_ELSEIF: 201,\n    T_ELSE: 202,\n    T_ENDSWITCH: 203,\n    T_CASE: 204,\n    T_DEFAULT: 205,\n    T_ENDFOR: 206,\n    T_ENDFOREACH: 207,\n    T_ENDWHILE: 208,\n    T_CONSTANT_ENCAPSED_STRING: 209,\n    T_LNUMBER: 210,\n    T_DNUMBER: 211,\n    T_LINE: 212,\n    T_FILE: 213,\n    T_DIR: 214,\n    T_TRAIT_C: 215,\n    T_METHOD_C: 216,\n    T_FUNC_C: 217,\n    T_NS_C: 218,\n    T_START_HEREDOC: 219,\n    T_END_HEREDOC: 220,\n    T_CLASS_C: 221,\n    T_VARIABLE: 222,\n    T_OPEN_TAG: 223,\n    T_OPEN_TAG_WITH_ECHO: 224,\n    T_CLOSE_TAG: 225,\n    T_WHITESPACE: 226,\n    T_COMMENT: 227,\n    T_DOC_COMMENT: 228,\n    T_ELLIPSIS: 229,\n    T_COALESCE: 230,\n    T_POW: 231,\n    T_POW_EQUAL: 232,\n    T_SPACESHIP: 233\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/tokens.js\n// module id = 46\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://gla*yzzle.com\n */\n\nvar Location = require('./ast/location');\nvar Position = require('./ast/position');\n\n/**\n * ## Class hierarchy\n *\n * - [Location](#location)\n * - [Position](#position)\n * - [Node](#node)\n *   - [Identifier](#identifier)\n *   - [TraitUse](#traituse)\n *   - [TraitAlias](#traitalias)\n *   - [TraitPrecedence](#traitprecedence)\n *   - [Entry](#entry)\n *   - [Case](#case)\n *   - [Label](#label)\n *   - [Doc](#doc)\n *   - [Error](#error)\n *   - [Expression](#expression)\n *     - [Array](#array)\n *     - [Variable](#variable)\n *     - [Variadic](#variadic)\n *     - [ConstRef](#constref)\n *     - [Yield](#yield)\n *     - [YieldFrom](#yieldfrom)\n *     - [Lookup](#lookup)\n *       - [PropertyLookup](#propertylookup)\n *       - [StaticLookup](#staticlookup)\n *       - [OffsetLookup](#offsetlookup)\n *     - [Operation](#operation)\n *       - [Pre](#pre)\n *       - [Post](#post)\n *       - [Bin](#bin)\n *       - [Parenthesis](#parenthesis)\n *       - [Unary](#unary)\n *       - [Cast](#cast)\n *     - [Literal](#literal)\n *       - [Boolean](#boolean)\n *       - [String](#string)\n *       - [Number](#number)\n *       - [Inline](#inline)\n *       - [Magic](#magic)\n *       - [Nowdoc](#nowdoc)\n *       - [Encapsed](#encapsed)\n *   - [Statement](#statement)\n *     - [Eval](#eval)\n *     - [Exit](#exit)\n *     - [Halt](#halt)\n *     - [Clone](#clone)\n *     - [Declare](#declare)\n *     - [Global](#global)\n *     - [Static](#static)\n *     - [Include](#include)\n *     - [Assign](#assign)\n *     - [RetIf](#retif)\n *     - [If](#if)\n *     - [Do](#do)\n *     - [While](#while)\n *     - [For](#for)\n *     - [Foreach](#foreach)\n *     - [Switch](#switch)\n *     - [Goto](#goto)\n *     - [Silent](#silent)\n *     - [Try](#try)\n *     - [Catch](#catch)\n *     - [Throw](#throw)\n *     - [Call](#call)\n *     - [Closure](#closure)\n *     - [New](#new)\n *     - [UseGroup](#usegroup)\n *     - [UseItem](#useitem)\n *     - [Block](#block)\n *       - [Program](#program)\n *       - [Namespace](#namespace)\n *     - [Sys](#sys)\n *       - [Echo](#echo)\n *       - [List](#list)\n *       - [Print](#print)\n *       - [Isset](#isset)\n *       - [Unset](#unset)\n *       - [Empty](#empty)\n *     - [Declaration](#declaration)\n *       - [Class](#class)\n *       - [Interface](#interface)\n *       - [Trait](#trait)\n *       - [Constant](#constant)\n *         - [ClassConstant](#classconstant)\n *       - [Function](#function)\n *         - [Method](#method)\n *       - [Parameter](#parameter)\n *       - [Property](#property)\n * ---\n */\n\n/**\n * The AST builder class\n * @constructor AST\n * @property {Boolean} withPositions - Should locate any node (by default false)\n * @property {Boolean} withSource - Should extract the node original code (by default false)\n */\nvar AST = function(withPositions, withSource) {\n  this.withPositions = withPositions;\n  this.withSource = withSource;\n};\n\n/**\n * Create a position node from specified parser\n * including it's lexer current state\n * @param {Parser}\n * @return {Position}\n * @private\n */\nAST.prototype.position = function(parser) {\n  return new Position(\n    parser.lexer.yylloc.first_line,\n    parser.lexer.yylloc.first_column,\n    parser.lexer.yylloc.first_offset\n  );\n};\n\n\n// operators in ascending order of precedence\nAST.precedence = {};\nvar binOperatorsPrecedence = [\n  ['or'],\n  ['xor'],\n  ['and'],\n  ['='],\n  ['?'],\n  ['??'],\n  ['||'],\n  ['&&'],\n  ['|'],\n  ['^'],\n  ['&'],\n  ['==', '!=', '===', '!==', /* '<>', */ '<=>'],\n  ['<', '<=', '>', '>='],\n  ['<<', '>>'],\n  ['+', '-', '.'],\n  ['*', '/', '%'],\n  ['!'],\n  ['instanceof'],\n  // TODO: typecasts\n  // TODO: [ (array)\n  // TODO: clone, new\n].forEach(function (list, index) {\n  list.forEach(function (operator) {\n    AST.precedence[operator] = index + 1;\n  });\n});\n\n\n/**\n * Check and fix precence, by default using right\n */\nAST.prototype.resolvePrecedence = function(result) {\n  var buffer;\n  // handling precendence\n  if (result.kind === 'bin') {\n    if (result.right) {\n      if (result.right.kind === 'bin') {\n        var lLevel = AST.precedence[result.type];\n        var rLevel = AST.precedence[result.right.type];\n        if (lLevel && rLevel && rLevel <= lLevel) {\n          // https://github.com/glayzzle/php-parser/issues/79\n          // shift precedence\n          buffer = result.right;\n          result.right = result.right.left;\n          buffer.left = this.resolvePrecedence(result);\n          result = buffer;\n        }\n      } else if (result.right.kind === 'retif') {\n        var lLevel = AST.precedence[result.type];\n        var rLevel = AST.precedence['?'];\n        if (lLevel && rLevel && rLevel <= lLevel) {\n          buffer = result.right;\n          result.right = result.right.test;\n          buffer.test = this.resolvePrecedence(result);\n          result = buffer;\n        }\n      }\n    }\n  } else if (result.kind === 'unary') {\n    // https://github.com/glayzzle/php-parser/issues/75\n    if (result.what) {\n      // unary precedence is allways lower\n      if (result.what.kind === 'bin') {\n        buffer = result.what;\n        result.what = result.what.left;\n        buffer.left = this.resolvePrecedence(result);\n        result = buffer;\n      } else if (result.what.kind === 'retif') {\n        buffer = result.what;\n        result.what = result.what.test;\n        buffer.test = this.resolvePrecedence(result);\n        result = buffer;\n      }\n    }\n  } else if (result.kind === 'retif') {\n    // https://github.com/glayzzle/php-parser/issues/77\n    if (result.falseExpr && result.falseExpr.kind === 'retif') {\n      buffer = result.falseExpr;\n      result.falseExpr = buffer.test;\n      buffer.test = this.resolvePrecedence(result);\n      result = buffer;\n    }\n  } else if (result.kind === 'assign') {\n    // https://github.com/glayzzle/php-parser/issues/81\n    if (result.right && result.right.kind === 'bin') {\n      var lLevel = AST.precedence['='];\n      var rLevel = AST.precedence[result.right.type];\n      // only shifts with and, xor, or\n      if (lLevel && rLevel && rLevel < lLevel) {\n        buffer = result.right;\n        result.right = result.right.left;\n        buffer.left = result;\n        result = buffer;\n      }\n    }\n  }\n  return result;\n};\n\n/**\n * Prepares an AST node\n * @param {String|null} kind - Defines the node type\n * (if null, the kind must be passed at the function call)\n * @param {Parser} parser - The parser instance (use for extracting locations)\n * @return {Function}\n */\nAST.prototype.prepare = function(kind, parser) {\n  var start = null;\n  if (this.withPositions || this.withSource) {\n    start = this.position(parser);\n  }\n  var self = this;\n  // returns the node\n  return function() {\n    var location = null;\n    var args = Array.prototype.slice.call(arguments);\n    if (self.withPositions || self.withSource) {\n      var src = null;\n      if (self.withSource) {\n        src = parser.lexer._input.substring(\n          start.offset,\n          parser.lexer.yylloc.prev_offset\n        );\n      }\n      if (self.withPositions) {\n        location = new Location(src, start, new Position(\n          parser.lexer.yylloc.prev_line,\n          parser.lexer.yylloc.prev_column,\n          parser.lexer.yylloc.prev_offset\n        ));\n      } else {\n        location = new Location(src, null, null);\n      }\n      // last argument is allways the location\n      args.push(location);\n    }\n    // handle lazy kind definitions\n    if (!kind) {\n      kind = args.shift();\n    }\n    // build the object\n    var node = self[kind];\n    if (typeof node !== 'function') {\n      throw new Error('Undefined node \"'+kind+'\"');\n    }\n    var result = Object.create(node.prototype);\n    node.apply(result, args);\n    return self.resolvePrecedence(result);\n  };\n};\n\n// Define all AST nodes\n[\n  require('./ast/array'),\n  require('./ast/assign'),\n  require('./ast/bin'),\n  require('./ast/block'),\n  require('./ast/boolean'),\n  require('./ast/break'),\n  require('./ast/call'),\n  require('./ast/case'),\n  require('./ast/cast'),\n  require('./ast/catch'),\n  require('./ast/class'),\n  require('./ast/classconstant'),\n  require('./ast/clone'),\n  require('./ast/closure'),\n  require('./ast/constant'),\n  require('./ast/constref'),\n  require('./ast/continue'),\n  require('./ast/declaration'),\n  require('./ast/declare'),\n  require('./ast/do'),\n  require('./ast/doc'),\n  require('./ast/echo'),\n  require('./ast/empty'),\n  require('./ast/encapsed'),\n  require('./ast/entry'),\n  require('./ast/error'),\n  require('./ast/eval'),\n  require('./ast/exit'),\n  require('./ast/expression'),\n  require('./ast/for'),\n  require('./ast/foreach'),\n  require('./ast/function'),\n  require('./ast/global'),\n  require('./ast/goto'),\n  require('./ast/halt'),\n  require('./ast/identifier'),\n  require('./ast/if'),\n  require('./ast/include'),\n  require('./ast/inline'),\n  require('./ast/interface'),\n  require('./ast/isset'),\n  require('./ast/label'),\n  require('./ast/list'),\n  require('./ast/literal'),\n  require('./ast/lookup'),\n  require('./ast/magic'),\n  require('./ast/method'),\n  require('./ast/namespace'),\n  require('./ast/new'),\n  require('./ast/node'),\n  require('./ast/nowdoc'),\n  require('./ast/number'),\n  require('./ast/offsetlookup'),\n  require('./ast/operation'),\n  require('./ast/parameter'),\n  require('./ast/parenthesis'),\n  require('./ast/post'),\n  require('./ast/pre'),\n  require('./ast/print'),\n  require('./ast/program'),\n  require('./ast/property'),\n  require('./ast/propertylookup'),\n  require('./ast/retif'),\n  require('./ast/return'),\n  require('./ast/silent'),\n  require('./ast/statement'),\n  require('./ast/static'),\n  require('./ast/staticlookup'),\n  require('./ast/string'),\n  require('./ast/switch'),\n  require('./ast/sys'),\n  require('./ast/throw'),\n  require('./ast/trait'),\n  require('./ast/traitalias'),\n  require('./ast/traitprecedence'),\n  require('./ast/traituse'),\n  require('./ast/try'),\n  require('./ast/unary'),\n  require('./ast/unset'),\n  require('./ast/usegroup'),\n  require('./ast/useitem'),\n  require('./ast/variable'),\n  require('./ast/variadic'),\n  require('./ast/while'),\n  require('./ast/yield'),\n  require('./ast/yieldfrom')\n].forEach(function (ctor) {\n  var kind = ctor.prototype.constructor.name.toLowerCase();\n  if (kind[0] === '_') kind = kind.substring(1);\n  AST.prototype[kind] = ctor;\n});\n\nmodule.exports = AST;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast.js\n// module id = 47\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n/**\n * Defines the location of the node (with it's source contents as string)\n * @constructor Location\n * @property {String|null} source\n * @property {Position} start\n * @property {Position} end\n */\nvar Location = function(source, start, end) {\n  this.source = source;\n  this.start = start;\n  this.end = end;\n};\n\nmodule.exports = Location;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/location.js\n// module id = 48\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\n/**\n * Each Position object consists of a line number (1-indexed) and a column number (0-indexed):\n * @constructor Position\n * @property {Number} line\n * @property {Number} column\n * @property {Number} offset\n */\nvar Position = function(line, column, offset) {\n  this.line = line;\n  this.column = column;\n  this.offset = offset;\n};\n\nmodule.exports = Position;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/position.js\n// module id = 49\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Expr = require('./expression');\nvar KIND = 'array';\n\n/**\n * Defines an array structure\n * @constructor Array\n * @example\n * // PHP code :\n * [1, 'foo' => 'bar', 3]\n *\n * // AST structure :\n * {\n *  \"kind\": \"array\",\n *  \"shortForm\": true\n *  \"items\": [{\n *    \"kind\": \"entry\",\n *    \"key\": null,\n *    \"value\": {\"kind\": \"number\", \"value\": \"1\"}\n *  }, {\n *    \"kind\": \"entry\",\n *    \"key\": {\"kind\": \"string\", \"value\": \"foo\", \"isDoubleQuote\": false},\n *    \"value\": {\"kind\": \"string\", \"value\": \"bar\", \"isDoubleQuote\": false}\n *  }, {\n *    \"kind\": \"entry\",\n *    \"key\": null,\n *    \"value\": {\"kind\": \"number\", \"value\": \"3\"}\n *  }]\n * }\n * @extends {Expression}\n * @property {Entry[]} items List of array items\n * @property {boolean} shortForm Indicate if the short array syntax is used, ex `[]` instead `array()`\n */\nvar Array = Expr.extends(function Array(shortForm, items, location) {\n  Expr.apply(this, [KIND, location]);\n  this.items = items;\n  this.shortForm = shortForm;\n});\n\nmodule.exports = Array;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/array.js\n// module id = 50\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'assign';\n\n/**\n * Assigns a value to the specified target\n * @constructor Assign\n * @extends {Statement}\n * @property {Expression} left\n * @property {Expression} right\n * @property {String} operator\n */\nvar Assign = Statement.extends(function Assign(left, right, operator, location) {\n  Statement.apply(this, [KIND, location]);\n  this.operator = operator;\n  this.left = left;\n  this.right = right;\n});\n\nmodule.exports = Assign;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/assign.js\n// module id = 51\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Operation = require('./operation');\nvar KIND = 'bin';\n/**\n * Binary operations\n * @constructor Bin\n * @extends {Operation}\n * @property {String} type\n * @property {Expression} left\n * @property {Expression} right\n */\nvar Bin = Operation.extends(function Bin(type, left, right, location) {\n  Operation.apply(this, [KIND, location]);\n  this.type = type;\n  this.left = left;\n  this.right = right;\n});\n\nmodule.exports = Bin;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/bin.js\n// module id = 52\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'boolean';\n\n/**\n * Defines a boolean value (true/false)\n * @constructor Boolean\n * @extends {Literal}\n */\nvar Boolean = Literal.extends(function Boolean(value, location) {\n  Literal.apply(this, [KIND, value, location]);\n});\n\nmodule.exports = Boolean;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/boolean.js\n// module id = 53\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Node = require('./node');\nvar KIND = 'break';\n\n/**\n * A break statement\n * @constructor Break\n * @extends {Node}\n * @property {Number|Null} level\n */\nvar Break = Node.extends(function Break(level, location) {\n  Node.apply(this, [KIND, location]);\n  this.level = level;\n});\n\nmodule.exports = Break;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/break.js\n// module id = 54\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'call';\n\n/**\n * Executes a call statement\n * @constructor Call\n * @extends {Statement}\n * @property {Identifier|Variable|??} what\n * @property {Arguments[]} arguments\n */\nvar Call = Statement.extends(function Call(what, args, location) {\n  Statement.apply(this, [KIND, location]);\n  this.what = what;\n  this.arguments = args;\n});\n\nmodule.exports = Call;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/call.js\n// module id = 55\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Node = require('./node');\nvar KIND = 'case';\n\n/**\n * A switch case statement\n * @constructor Case\n * @extends {Node}\n * @property {Expression|null} test - if null, means that the default case\n * @property {Block|null} body\n */\nvar Case = Node.extends(function Case(test, body, location) {\n  Node.apply(this, [KIND, location]);\n  this.test = test;\n  this.body = body;\n});\n\nmodule.exports = Case;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/case.js\n// module id = 56\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Operation = require('./operation');\nvar KIND = 'cast';\n\n/**\n * Binary operations\n * @constructor Cast\n * @extends {Operation}\n * @property {String} type\n * @property {Expression} what\n */\nvar Cast = Operation.extends(function Cast(type, what, location) {\n  Operation.apply(this, [KIND, location]);\n  this.type = type;\n  this.what = what;\n});\n\nmodule.exports = Cast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/cast.js\n// module id = 57\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'catch';\n\n/**\n * Defines a catch statement\n * @constructor Catch\n * @extends {Statement}\n * @property {Identifier[]} what\n * @property {Variable} variable\n * @property {Statement} body\n * @see http://php.net/manual/en/language.exceptions.php\n */\nvar Catch = Statement.extends(function Catch(body, what, variable, location) {\n  Statement.apply(this, [KIND, location]);\n  this.body = body;\n  this.what = what;\n  this.variable = variable;\n});\n\nmodule.exports = Catch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/catch.js\n// module id = 58\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND = 'class';\n\n\n/**\n * A class definition\n * @constructor Class\n * @extends {Declaration}\n * @property {Identifier|null} extends\n * @property {Identifier[]} implements\n * @property {Declaration[]} body\n * @property {boolean} isAnonymous\n * @property {boolean} isAbstract\n * @property {boolean} isFinal\n */\nvar Class = Declaration.extends(function Class(name, ext, impl, body, flags, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.isAnonymous = name ? false : true;\n  this.extends = ext;\n  this.implements = impl;\n  this.body = body;\n  this.parseFlags(flags);\n});\n\nmodule.exports = Class;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/class.js\n// module id = 59\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Constant = require('./constant');\nvar KIND = 'classconstant';\n\n/**\n * Defines a class/interface/trait constant\n * @constructor ClassConstant\n * @extends {Constant}\n * @property {boolean} isStatic\n * @property {string} visibility\n */\nvar ClassConstant = Constant.extends(function ClassConstant(name, value, flags, location) {\n  Constant.apply(this, [name, value, location]);\n  this.kind = KIND;\n  this.parseFlags(flags);\n});\n\nmodule.exports = ClassConstant;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/classconstant.js\n// module id = 60\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'clone';\n\n/**\n * Defines a clone call\n * @constructor Clone\n * @extends {Statement}\n * @property {Expression} what\n */\nvar Clone = Statement.extends(function Clone(what, location) {\n  Statement.apply(this, [KIND, location]);\n  this.what = what;\n});\n\nmodule.exports = Clone;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/clone.js\n// module id = 61\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Statement = require('./statement');\nvar KIND = 'closure';\n\n/**\n * Defines a closure\n * @constructor Closure\n * @extends {Statement}\n * @property {Parameter[]} arguments\n * @property {Variable[]} uses\n * @property {Identifier} type\n * @property {boolean} byref\n * @property {boolean} nullable\n * @property {Block|null} body\n * @property {boolean} isStatic\n */\nvar Closure = Statement.extends(function Closure(args, byref, uses, type, nullable, isStatic, location) {\n  Statement.apply(this, [KIND, location]);\n  this.uses = uses;\n  this.arguments = args;\n  this.byref = byref;\n  this.type = type;\n  this.nullable = nullable;\n  this.isStatic = isStatic || false;\n  this.body = null;\n});\n\nmodule.exports = Closure;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/closure.js\n// module id = 62\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Expr = require('./expression');\nvar KIND = 'constref';\n\n/**\n * A constant reference\n * @constructor ConstRef\n * @extends {Expression}\n * @property {String|Node} name\n */\nvar ConstRef = Expr.extends(function ConstRef(identifier, location) {\n  Expr.apply(this, [KIND, location]);\n  this.name = identifier;\n});\n\nmodule.exports = ConstRef;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/constref.js\n// module id = 63\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Node = require('./node');\nvar KIND = 'continue';\n\n/**\n * A continue statement\n * @constructor Continue\n * @extends {Node}\n * @property {Number|Null} level\n */\nvar Continue = Node.extends(function Continue(level, location) {\n  Node.apply(this, [KIND, location]);\n  this.level = level;\n});\n\nmodule.exports = Continue;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/continue.js\n// module id = 64\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Block = require('./block');\nvar KIND = 'declare';\n\n/**\n * The declare construct is used to set execution directives for a block of code\n * @constructor Declare\n * @extends {Block}\n * @property {Expression[]} what\n * @property {String} mode\n * @see http://php.net/manual/en/control-structures.declare.php\n */\nvar Declare = Block.extends(function Declare(what, body, mode, location) {\n  Block.apply(this, [KIND, body, location]);\n  this.what = what;\n  this.mode = mode;\n});\n\n\n/**\n * The node is declared as a short tag syntax :\n * ```php\n * <?php\n * declare(ticks=1):\n * // some statements\n * enddeclare;\n * ```\n * @constant {String} MODE_SHORT\n */\nDeclare.MODE_SHORT = 'short';\n\n/**\n * The node is declared bracket enclosed code :\n * ```php\n * <?php\n * declare(ticks=1) {\n * // some statements\n * }\n * ```\n * @constant {String} MODE_BLOCK\n */\nDeclare.MODE_BLOCK = 'block';\n\n/**\n * The node is declared as a simple statement. In order to make things simpler\n * children of the node are automatically collected until the next\n * declare statement.\n * ```php\n * <?php\n * declare(ticks=1);\n * // some statements\n * declare(ticks=2);\n * // some statements\n * ```\n * @constant {String} MODE_NONE\n */\nDeclare.MODE_NONE = 'none';\n\nmodule.exports = Declare;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/declare.js\n// module id = 65\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'do';\n\n/**\n * Defines a do/while statement\n * @constructor Do\n * @extends {Statement}\n * @property {Expression} test\n * @property {Statement} body\n */\nvar Do = Statement.extends(function Do(test, body, location) {\n  Statement.apply(this, [KIND, location]);\n  this.test = test;\n  this.body = body;\n});\n\nmodule.exports = Do;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/do.js\n// module id = 66\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'doc';\n\n/**\n * A comment or documentation\n * @constructor Documentation\n * @extends {Node}\n * @property {Boolean} isDoc\n * @property {String[]} lines\n */\nvar Doc = Node.extends(function Doc(isDoc, lines, location) {\n  Node.apply(this, [KIND, location]);\n  this.isDoc = isDoc;\n  this.lines = lines;\n});\n\nmodule.exports = Doc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/doc.js\n// module id = 67\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Sys = require('./sys');\nvar KIND = 'echo';\n\n/**\n * Defines system based call\n * @constructor Echo\n * @extends {Sys}\n */\nvar Echo = Sys.extends(function Echo(args, location) {\n  Sys.apply(this, [KIND, args, location]);\n});\n\nmodule.exports = Echo;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/echo.js\n// module id = 68\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Sys = require('./sys');\nvar KIND = 'empty';\n\n/**\n * Defines an empty check call\n * @constructor Empty\n * @extends {Sys}\n */\nvar Empty = Sys.extends(function Empty(args, location) {\n  Sys.apply(this, [KIND, args, location]);\n});\n\nmodule.exports = Empty;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/empty.js\n// module id = 69\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'encapsed';\n\n/**\n * Defines an encapsed string (contains expressions)\n * @constructor Encapsed\n * @extends {Literal}\n * @property {String} type - Defines the type of encapsed string (shell, heredoc, string)\n * @property {String|Null} label - The heredoc label, defined only when the type is heredoc\n */\nvar Encapsed = Literal.extends(function Encapsed(value, type, location) {\n  Literal.apply(this, [KIND, value, location]);\n  this.type = type;\n});\n\n\n/**\n * The node is a double quote string :\n * ```php\n * <?php\n * echo \"hello $world\";\n * ```\n * @constant {String} TYPE_STRING - `string`\n */\nEncapsed.TYPE_STRING = 'string';\n\n/**\n * The node is a shell execute string :\n * ```php\n * <?php\n * echo `ls -larth $path`;\n * ```\n * @constant {String} TYPE_SHELL - `shell`\n */\nEncapsed.TYPE_SHELL = 'shell';\n\n/**\n * The node is a shell execute string :\n * ```php\n * <?php\n * echo <<<STR\n *  Hello $world\n * STR\n * ;\n * ```\n * @constant {String} TYPE_HEREDOC - `heredoc`\n */\nEncapsed.TYPE_HEREDOC = 'heredoc';\n\n/**\n * The node contains a list of constref / variables / expr :\n * ```php\n * <?php\n * echo $foo->bar_$baz;\n * ```\n * @constant {String} TYPE_OFFSET - `offset`\n */\nEncapsed.TYPE_OFFSET = 'offset';\n\n\nmodule.exports = Encapsed;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/encapsed.js\n// module id = 70\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'entry';\n\n/**\n * An array entry - see [Array](#array)\n * @constructor Entry\n * @extends {Node}\n * @property {Node|null} key The entry key/offset\n * @property {Node} value The entry value\n */\nvar Entry = Node.extends(function Entry(key, value, location) {\n  Node.apply(this, [KIND, location]);\n  this.key = key;\n  this.value = value;\n});\n\nmodule.exports = Entry;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/entry.js\n// module id = 71\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'error';\n\n\n/**\n * Defines an error node (used only on silentMode)\n * @constructor Error\n * @extends {Node}\n * @property {string} message\n * @property {number} line\n * @property {number|string} token\n * @property {string|array} expected\n */\nvar Error = Node.extends(function Error(message, token, line, expected, location) {\n  Node.apply(this, [KIND, location]);\n  this.message = message;\n  this.token = token;\n  this.line = line;\n  this.expected = expected;\n});\n\nmodule.exports = Error;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/error.js\n// module id = 72\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'eval';\n\n/**\n * Defines an eval statement\n * @constructor Eval\n * @extends {Statement}\n * @property {Node} source\n */\nvar Eval = Statement.extends(function Eval(source, location) {\n  Statement.apply(this, [KIND, location]);\n  this.source = source;\n});\n\nmodule.exports = Eval;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/eval.js\n// module id = 73\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'exit';\n\n/**\n * Defines an exit / die call\n * @constructor Exit\n * @extends {Statement}\n * @property {Node|null} status\n */\nvar Exit = Statement.extends(function Exit(status, location) {\n  Statement.apply(this, [KIND, location]);\n  this.status = status;\n});\n\nmodule.exports = Exit;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/exit.js\n// module id = 74\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'for';\n\n/**\n * Defines a for iterator\n * @constructor For\n * @extends {Statement}\n * @property {Expression[]} init\n * @property {Expression[]} test\n * @property {Expression[]} increment\n * @property {Statement} body\n * @property {boolean} shortForm\n * @see http://php.net/manual/en/control-structures.for.php\n */\nvar For = Statement.extends(function For(init, test, increment, body, shortForm, location) {\n  Statement.apply(this, [KIND, location]);\n  this.init = init;\n  this.test = test;\n  this.increment = increment;\n  this.shortForm = shortForm;\n  this.body = body;\n});\n\nmodule.exports = For;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/for.js\n// module id = 75\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'foreach';\n\n/**\n * Defines a foreach iterator\n * @constructor Foreach\n * @extends {Statement}\n * @property {Expression} source\n * @property {Expression|null} key\n * @property {Expression} value\n * @property {Statement} body\n * @property {boolean} shortForm\n * @see http://php.net/manual/en/control-structures.foreach.php\n */\nvar Foreach = Statement.extends(function Foreach(source, key, value, body, shortForm, location) {\n  Statement.apply(this, [KIND, location]);\n  this.source = source;\n  this.key = key;\n  this.value = value;\n  this.shortForm = shortForm;\n  this.body = body;\n});\n\nmodule.exports = Foreach;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/foreach.js\n// module id = 76\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Statement = require('./statement');\nvar KIND = 'global';\n\n/**\n * Imports a variable from the global scope\n * @constructor Global\n * @extends {Statement}\n * @property {Variable[]} items\n */\nvar Global = Statement.extends(function Global(items, location) {\n  Statement.apply(this, [KIND, location]);\n  this.items = items;\n});\n\nmodule.exports = Global;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/global.js\n// module id = 77\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'goto';\n\n/**\n * Defines goto statement\n * @constructor Goto\n * @extends {Statement}\n * @property {String} label\n * @see {Label}\n */\nvar Goto = Statement.extends(function Goto(label, location) {\n  Statement.apply(this, [KIND, location]);\n  this.label = label;\n});\n\nmodule.exports = Goto;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/goto.js\n// module id = 78\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'halt';\n\n/**\n * Halts the compiler execution\n * @constructor Halt\n * @extends {Statement}\n * @property {String} after - String after the halt statement\n * @see http://php.net/manual/en/function.halt-compiler.php\n */\nvar Halt = Statement.extends(function Halt(after, location) {\n  Statement.apply(this, [KIND, location]);\n  this.after = after;\n});\n\nmodule.exports = Halt;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/halt.js\n// module id = 79\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'if';\n\n/**\n * Defines a if statement\n * @constructor If\n * @extends {Statement}\n * @property {Expression} test\n * @property {Block} body\n * @property {Block|If|null} alternate\n * @property {boolean} shortForm\n */\nvar If = Statement.extends(function If(test, body, alternate, shortForm, location) {\n  Statement.apply(this, [KIND, location]);\n  this.test = test;\n  this.body = body;\n  this.alternate = alternate;\n  this.shortForm = shortForm;\n});\n\nmodule.exports = If;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/if.js\n// module id = 80\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Statement = require('./statement');\nvar KIND = 'include';\n\n/**\n * Defines system include call\n * @constructor Include\n * @extends {Statement}\n * @property {Node} target\n * @property {boolean} once\n * @property {boolean} require\n */\nvar Include = Statement.extends(function Include(once, require, target, location) {\n  Statement.apply(this, [KIND, location]);\n  this.once = once;\n  this.require = require;\n  this.target = target;\n});\n\nmodule.exports = Include;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/include.js\n// module id = 81\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'inline';\n\n/**\n * Defines inline html output (treated as echo output)\n * @constructor Inline\n * @extends {Literal}\n */\nvar Inline = Literal.extends(function Inline(value, location) {\n  Literal.apply(this, [KIND, value, location]);\n});\n\nmodule.exports = Inline;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/inline.js\n// module id = 82\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND = 'interface';\n\n\n/**\n * An interface definition\n * @constructor Interface\n * @extends {Declaration}\n * @property {Identifier[]} extends\n * @property {Declaration[]} body\n */\nvar Interface = Declaration.extends(function Interface(name, ext, body, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.extends = ext;\n  this.body = body;\n});\n\nmodule.exports = Interface;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/interface.js\n// module id = 83\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Sys = require('./sys');\nvar KIND = 'isset';\n\n/**\n * Defines an isset call\n * @constructor Isset\n * @extends {Sys}\n */\nvar Isset = Sys.extends(function Isset(args, location) {\n  Sys.apply(this, [KIND, args, location]);\n});\n\nmodule.exports = Isset;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/isset.js\n// module id = 84\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Node = require('./node');\nvar KIND = 'label';\n\n/**\n * A label statement (referenced by goto)\n * @constructor Label\n * @extends {Node}\n * @property {String} name\n */\nvar Label = Node.extends(function Label(name, location) {\n  Node.apply(this, [KIND, location]);\n  this.name = name;\n});\n\nmodule.exports = Label;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/label.js\n// module id = 85\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Sys = require('./sys');\nvar KIND = 'list';\n\n/**\n * Defines list assignment\n * @constructor List\n * @extends {Sys}\n */\nvar List = Sys.extends(function List(args, location) {\n  Sys.apply(this, [KIND, args, location]);\n});\n\nmodule.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/list.js\n// module id = 86\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'magic';\n\n/**\n * Defines magic constant\n * @constructor Magic\n * @extends {Literal}\n */\nvar Magic = Literal.extends(function Magic(value, location) {\n  Literal.apply(this, [KIND, value, location]);\n});\n\nmodule.exports = Magic;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/magic.js\n// module id = 87\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar fn = require('./function');\nvar KIND = 'method';\n\n/**\n * Defines a class/interface/trait method\n * @constructor Method\n * @extends {Function}\n * @property {boolean} isAbstract\n * @property {boolean} isFinal\n * @property {boolean} isStatic\n * @property {string} visibility\n */\nvar Method = fn.extends(function Method() {\n  fn.apply(this, arguments);\n  this.kind = KIND;\n});\n\nmodule.exports = Method;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/method.js\n// module id = 88\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Block = require('./block');\nvar Identifier = require('./identifier');\nvar KIND = 'namespace';\n\n/**\n * The main program node\n * @constructor Namespace\n * @extends {Block}\n * @property {String} name\n * @property {Boolean} withBrackets\n */\nvar Namespace = Block.extends(function Namespace(name, children, withBrackets, location) {\n  Block.apply(this, [KIND, children, location]);\n  this.name = name;\n  this.withBrackets = withBrackets || false;\n});\n\nmodule.exports = Namespace;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/namespace.js\n// module id = 89\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'new';\n\n/**\n * Creates a new instance of the specified class\n * @constructor New\n * @extends {Statement}\n * @property {Identifier|Variable|Class} what\n * @property {Arguments[]} arguments\n */\nvar New = Statement.extends(function New(what, args, location) {\n  Statement.apply(this, [KIND, location]);\n  this.what = what;\n  this.arguments = args;\n});\n\nmodule.exports = New;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/new.js\n// module id = 90\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'nowdoc';\n\n/**\n * Defines a nowdoc string\n * @constructor String\n * @extends {Literal}\n * @property {String} label\n\n */\nvar Nowdoc = Literal.extends(function Nowdoc(value, label, location) {\n  Literal.apply(this, [KIND, value, location]);\n  this.label = label;\n});\n\nmodule.exports = Nowdoc;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/nowdoc.js\n// module id = 91\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'number';\n\n/**\n * Defines a numeric value\n * @constructor Number\n * @extends {Literal}\n */\nvar _Number = Literal.extends(function Number(value, location) {\n  Literal.apply(this, [KIND, value, location]);\n});\n\nmodule.exports = _Number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/number.js\n// module id = 92\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Lookup = require('./lookup');\nvar KIND = 'offsetlookup';\n\n/**\n * Lookup on an offset in an array\n * @constructor OffsetLookup\n * @extends {Lookup}\n */\nvar OffsetLookup = Lookup.extends(function OffsetLookup(what, offset, location) {\n  Lookup.apply(this, [KIND, what, offset, location]);\n});\n\nmodule.exports = OffsetLookup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/offsetlookup.js\n// module id = 93\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND = 'parameter';\n\n/**\n * Defines a function parameter\n * @constructor Parameter\n * @extends {Declaration}\n * @property {Identifier|null} type\n * @property {Node|null} value\n * @property {boolean} byref\n * @property {boolean} variadic\n * @property {boolean} nullable\n */\nvar Parameter = Declaration.extends(function Parameter(name, type, value, isRef, isVariadic, nullable, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.value = value;\n  this.type = type;\n  this.byref = isRef;\n  this.variadic = isVariadic;\n  this.nullable = nullable;\n});\n\nmodule.exports = Parameter;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/parameter.js\n// module id = 94\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Operation = require('./operation');\nvar KIND = 'parenthesis';\n\n/**\n * Parenthesis encapsulation `(... expr ...)`\n * @constructor Parenthesis\n * @extends {Operation}\n * @property {Expression} inner\n */\nvar Parenthesis = Operation.extends(function Parenthesis(inner, location) {\n  Operation.apply(this, [KIND, location]);\n  this.inner = inner;\n});\n\nmodule.exports = Parenthesis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/parenthesis.js\n// module id = 95\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Operation = require('./operation');\nvar KIND = 'post';\n\n/**\n * Defines a post operation `$i++` or `$i--`\n * @constructor Post\n * @extends {Operation}\n * @property {String} type\n * @property {Variable} what\n */\nvar Post = Operation.extends(function Post(type, what, location) {\n  Operation.apply(this, [KIND, location]);\n  this.type = type;\n  this.what = what;\n});\n\nmodule.exports = Post;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/post.js\n// module id = 96\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Operation = require('./operation');\nvar KIND = 'pre';\n\n/**\n * Defines a pre operation `++$i` or `--$i`\n * @constructor Pre\n * @extends {Operation}\n * @property {String} type\n * @property {Variable} what\n */\nvar Pre = Operation.extends(function Pre(type, what, location) {\n  Operation.apply(this, [KIND, location]);\n  this.type = type;\n  this.what = what;\n});\n\nmodule.exports = Pre;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/pre.js\n// module id = 97\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Sys = require('./sys');\nvar KIND = 'print';\n\n/**\n * Outputs\n * @constructor Print\n * @extends {Sys}\n */\nvar Print = Sys.extends(function Print(args, location) {\n  Sys.apply(this, [KIND, args, location]);\n});\n\nmodule.exports = Print;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/print.js\n// module id = 98\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Block = require('./block');\nvar KIND = 'program';\n\n/**\n * The main program node\n * @constructor Program\n * @extends {Block}\n * @property {Error[]} errors\n */\nvar Program = Block.extends(function Program(children, errors, location) {\n  Block.apply(this, [KIND, children, location]);\n  this.errors = errors;\n});\n\nmodule.exports = Program;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/program.js\n// module id = 99\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND = 'property';\n\n/**\n * Defines a class property\n * @constructor Property\n * @extends {Declaration}\n * @property {boolean} isFinal\n * @property {boolean} isStatic\n * @property {string} visibility\n * @property {Node|null} value\n */\nvar Property = Declaration.extends(function Property(name, value, flags, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.value = value;\n  this.parseFlags(flags);\n});\n\nmodule.exports = Property;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/property.js\n// module id = 100\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Lookup = require('./lookup');\nvar KIND = 'propertylookup';\n\n/**\n * Lookup to an object property\n * @constructor PropertyLookup\n * @extends {Lookup}\n */\nvar PropertyLookup = Lookup.extends(function PropertyLookup(what, offset, location) {\n  Lookup.apply(this, [KIND, what, offset, location]);\n});\n\nmodule.exports = PropertyLookup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/propertylookup.js\n// module id = 101\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'retif';\n\n/**\n * Defines a short if statement that returns a value\n * @constructor RetIf\n * @extends {Statement}\n * @property {Expression} test\n * @property {Expression} trueExpr\n * @property {Expression} falseExpr\n */\nvar RetIf = Statement.extends(function RetIf(test, trueExpr, falseExpr, location) {\n  Statement.apply(this, [KIND, location]);\n  this.test = test;\n  this.trueExpr = trueExpr;\n  this.falseExpr = falseExpr;\n});\n\nmodule.exports = RetIf;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/retif.js\n// module id = 102\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Node = require('./node');\nvar KIND = 'return';\n\n/**\n * A continue statement\n * @constructor Return\n * @extends {Node}\n * @property {Expression|null} expr\n */\nvar Return = Node.extends(function Return(expr, location) {\n  Node.apply(this, [KIND, location]);\n  this.expr = expr;\n});\n\nmodule.exports = Return;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/return.js\n// module id = 103\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'silent';\n\n/**\n * Avoids to show/log warnings & notices from the inner expression\n * @constructor Silent\n * @extends {Statement}\n * @property {Expression} expr\n */\nvar Silent = Statement.extends(function Silent(expr, location) {\n  Statement.apply(this, [KIND, location]);\n  this.expr = expr;\n});\n\nmodule.exports = Silent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/silent.js\n// module id = 104\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Statement = require('./statement');\nvar KIND = 'static';\n\n/**\n * Declares a static variable into the current scope\n * @constructor Static\n * @extends {Statement}\n * @property {Variable[]|Assign[]} items\n */\nvar Static = Statement.extends(function Static(items, location) {\n  Statement.apply(this, [KIND, location]);\n  this.items = items;\n});\n\nmodule.exports = Static;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/static.js\n// module id = 105\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Lookup = require('./lookup');\nvar KIND = 'staticlookup';\n\n/**\n * Lookup to a static property\n * @constructor StaticLookup\n * @extends {Lookup}\n */\nvar StaticLookup = Lookup.extends(function StaticLookup(what, offset, location) {\n  Lookup.apply(this, [KIND, what, offset, location]);\n});\n\nmodule.exports = StaticLookup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/staticlookup.js\n// module id = 106\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Literal = require('./literal');\nvar KIND = 'string';\n\n/**\n * Defines a string (simple ou double quoted) - chars are already escaped\n * @constructor String\n * @extends {Literal}\n * @property {boolean} isDoubleQuote\n * @see {Encapsed}\n */\nvar String = Literal.extends(function String(isDoubleQuote, value, location) {\n  Literal.apply(this, [KIND, value, location]);\n  this.isDoubleQuote = isDoubleQuote;\n});\n\nmodule.exports = String;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/string.js\n// module id = 107\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'switch';\n\n/**\n * Defines a switch statement\n * @constructor Switch\n * @extends {Statement}\n * @property {Expression} test\n * @property {Block} body\n * @property {boolean} shortForm\n */\nvar Switch = Statement.extends(function Switch(test, body, shortForm, location) {\n  Statement.apply(this, [KIND, location]);\n  this.test = test;\n  this.body = body;\n  this.shortForm = shortForm;\n});\n\nmodule.exports = Switch;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/switch.js\n// module id = 108\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'throw';\n\n/**\n * Defines a throw statement\n * @constructor Throw\n * @extends {Statement}\n * @property {Expression} what\n */\nvar Throw = Statement.extends(function Throw(what, location) {\n  Statement.apply(this, [KIND, location]);\n  this.what = what;\n});\n\nmodule.exports = Throw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/throw.js\n// module id = 109\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Declaration = require('./declaration');\nvar KIND = 'trait';\n\n\n/**\n * A trait definition\n * @constructor Trait\n * @extends {Declaration}\n * @property {Identifier|null} extends\n * @property {Identifier[]} implements\n * @property {Declaration[]} body\n */\nvar Trait = Declaration.extends(function Trait(name, ext, impl, body, location) {\n  Declaration.apply(this, [KIND, name, location]);\n  this.extends = ext;\n  this.implements = impl;\n  this.body = body;\n});\n\nmodule.exports = Trait;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/trait.js\n// module id = 110\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'traitalias';\n\nvar IS_PUBLIC     = 'public';\nvar IS_PROTECTED  = 'protected';\nvar IS_PRIVATE    = 'private';\n\n/**\n * Defines a trait alias\n * @constructor TraitAlias\n * @extends {Node}\n * @property {Identifier|null} trait\n * @property {string} method\n * @property {string|null} as\n * @property {string|null} visibility\n */\nvar TraitAlias = Node.extends(function TraitAlias(trait, method, as, flags, location) {\n  Node.apply(this, [KIND, location]);\n  this.trait = trait;\n  this.method = method;\n  this.as = as;\n  if (flags) {\n    if (flags[0] === 0) {\n      this.visibility = IS_PUBLIC;\n    } else if (flags[0] === 1) {\n      this.visibility = IS_PROTECTED;\n    } else {\n      this.visibility = IS_PRIVATE;\n    }\n  } else {\n    this.visibility = null;\n  }\n});\n\nmodule.exports = TraitAlias;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/traitalias.js\n// module id = 111\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'traitprecedence';\n\n/**\n * Defines a trait alias\n * @constructor TraitPrecedence\n * @extends {Node}\n * @property {Identifier|null} trait\n * @property {string} method\n * @property {Identifier[]} instead\n */\nvar TraitPrecedence = Node.extends(function TraitPrecedence(trait, method, instead, location) {\n  Node.apply(this, [KIND, location]);\n  this.trait = trait;\n  this.method = method;\n  this.instead = instead;\n});\n\nmodule.exports = TraitPrecedence;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/traitprecedence.js\n// module id = 112\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Node = require('./node');\nvar KIND = 'traituse';\n\n/**\n * Defines a trait usage\n * @constructor TraitUse\n * @extends {Node}\n * @property {Identifier[]} traits\n * @property {Node[]|null} adaptations\n */\nvar TraitUse = Node.extends(function TraitUse(traits, adaptations, location) {\n  Node.apply(this, [KIND, location]);\n  this.traits = traits;\n  this.adaptations = adaptations;\n});\n\nmodule.exports = TraitUse;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/traituse.js\n// module id = 113\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'try';\n\n/**\n * Defines a try statement\n * @constructor Try\n * @extends {Statement}\n * @property {Block} body\n * @property {Catch[]} catches\n * @property {Block} allways\n */\nvar Try = Statement.extends(function Try(body, catches, always, location) {\n  Statement.apply(this, [KIND, location]);\n  this.body = body;\n  this.catches = catches;\n  this.always = always;\n});\n\nmodule.exports = Try;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/try.js\n// module id = 114\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Operation = require('./operation');\nvar KIND = 'unary';\n\n/**\n * Unary operations\n * @constructor Unary\n * @extends {Operation}\n * @property {String} type\n * @property {Expression} what\n */\nvar Unary = Operation.extends(function Unary(type, what, location) {\n  Operation.apply(this, [KIND, location]);\n  this.type = type;\n  this.what = what;\n});\n\nmodule.exports = Unary;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/unary.js\n// module id = 115\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\nvar Sys = require('./sys');\nvar KIND = 'unset';\n\n/**\n * Deletes references to a list of variables\n * @constructor Unset\n * @extends {Sys}\n */\nvar Unset = Sys.extends(function Unset(args, location) {\n  Sys.apply(this, [KIND, args, location]);\n});\n\nmodule.exports = Unset;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/unset.js\n// module id = 116\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Statement = require('./statement');\nvar KIND = 'usegroup';\n\n/**\n * Defines a use statement (with a list of use items)\n * @constructor UseGroup\n * @extends {Statement}\n * @property {String|null} name\n * @property {String|null} type - Possible value : function, const\n * @property {UseItem[]} item\n * @see {Namespace}\n * @see http://php.net/manual/en/language.namespaces.importing.php\n */\nvar UseGroup = Statement.extends(function UseGroup(name, type, items, location) {\n  Statement.apply(this, [KIND, location]);\n  this.name = name;\n  this.type = type;\n  this.items = items;\n});\n\nmodule.exports = UseGroup;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/usegroup.js\n// module id = 117\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Statement = require('./statement');\nvar KIND = 'useitem';\n\n/**\n * Defines a use statement (from namespace)\n * @constructor UseItem\n * @extends {Statement}\n * @property {String} name\n * @property {String|null} type - Possible value : function, const\n * @property {String|null} alias\n * @see {Namespace}\n * @see http://php.net/manual/en/language.namespaces.importing.php\n */\nvar UseItem = Statement.extends(function UseItem(name, alias, type, location) {\n  Statement.apply(this, [KIND, location]);\n  this.name = name;\n  this.alias = alias;\n  this.type = type;\n});\n\n\n/**\n * Importing a constant\n * @constant {String} TYPE_CONST\n */\nUseItem.TYPE_CONST = 'const';\n/**\n * Importing a function\n * @constant {String} TYPE_FUNC\n */\nUseItem.TYPE_FUNCTION = 'function';\n\n\nmodule.exports = UseItem;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/useitem.js\n// module id = 118\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Expr = require('./expression');\nvar KIND = 'variable';\n\n/**\n * Any expression node. Since the left-hand side of an assignment may\n * be any expression in general, an expression can also be a pattern.\n * @constructor Variable\n * @extends {Expression}\n * @example\n * // PHP code :\n * &$foo\n * // AST output\n * {\n *  \"kind\": \"variable\",\n *  \"name\": \"foo\",\n *  \"byref\": true,\n *  \"curly\": false\n * }\n * @property {String|Node} name The variable name (can be a complex expression when the name is resolved dynamically)\n * @property {boolean} byref Indicate if the variable reference is used, ex `&$foo`\n * @property {boolean} curly Indicate if the name is defined between curlies, ex `${foo}`\n */\nvar Variable = Expr.extends(function Variable(name, byref, curly, location) {\n  Expr.apply(this, [KIND, location]);\n  this.name = name;\n  this.byref = byref || false;\n  this.curly = curly || false;\n});\n\nmodule.exports = Variable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/variable.js\n// module id = 119\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\nvar Expr = require('./expression');\nvar KIND = 'variadic';\n\n/**\n * Introduce a list of items into the arguments of the call\n * @constructor Variadic\n * @extends {Expression}\n * @property {Array|Expression} what\n * @see https://wiki.php.net/rfc/argument_unpacking\n */\nvar Variadic = Expr.extends(function Variadic(what, location) {\n  Expr.apply(this, [KIND, location]);\n  this.what = what;\n});\n\nmodule.exports = Variadic;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/variadic.js\n// module id = 120\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Statement = require('./statement');\nvar KIND = 'while';\n\n/**\n * Defines a while statement\n * @constructor While\n * @extends {Statement}\n * @property {Expression} test\n * @property {Statement} body\n * @property {boolean} shortForm\n */\nvar While = Statement.extends(function While(test, body, shortForm, location) {\n  Statement.apply(this, [KIND, location]);\n  this.test = test;\n  this.body = body;\n  this.shortForm = shortForm;\n});\n\nmodule.exports = While;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/while.js\n// module id = 121\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Expression = require('./expression');\nvar KIND = 'yield';\n\n/**\n * Defines a yield generator statement\n * @constructor Yield\n * @extends {Expression}\n * @property {Expression|Null} value\n * @property {Expression|Null} key\n * @see http://php.net/manual/en/language.generators.syntax.php\n */\nvar Yield = Expression.extends(function Yield(value, key, location) {\n  Expression.apply(this, [KIND, location]);\n  this.value = value;\n  this.key = key;\n});\n\nmodule.exports = Yield;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/yield.js\n// module id = 122\n// module chunks = 0","/*!\n * Copyright (C) 2017 Glayzzle (BSD3 License)\n * @authors https://github.com/glayzzle/php-parser/graphs/contributors\n * @url http://glayzzle.com\n */\n\"use strict\";\n\nvar Expression = require('./expression');\nvar KIND = 'yieldfrom';\n\n/**\n * Defines a yield from generator statement\n * @constructor YieldFrom\n * @extends {Expression}\n * @property {Expression} value\n * @see http://php.net/manual/en/language.generators.syntax.php\n */\nvar YieldFrom = Expression.extends(function YieldFrom(value, location) {\n  Expression.apply(this, [KIND, location]);\n  this.value = value;\n});\n\nmodule.exports = YieldFrom;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/php-parser/src/ast/yieldfrom.js\n// module id = 123\n// module chunks = 0"],"sourceRoot":""}